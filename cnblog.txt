[{"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16497140.html", "permalink": "https://www.cnblogs.com/rome753/p/16497140.html", "postid": 16497140, "description": "https://www.jianshu.com/p/ecfbebadbe55\n\u96c6\u6210\u65b9\u6cd5\u8fd9\u7bc7\u6587\u7ae0\u5199\u5f97\u975e\u5e38\u8be6\u7ec6\u4e86\uff0c\u6211\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u6709\u4e00\u70b9\u5dee\u5f02\u7684\u5730\u65b9\uff0c\u8be5\u6587\u7ae0\u96c6\u6210\u540e\u4f7f\u7528\u7684\u662fOC\u8fdb\u884c\u8c03\u7528\uff0c\u6211\u4f7f\u7528\u7684\u662fC\u8bed\u8a00\uff0c\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u8de8\u5e73\u53f0\u3002\u56e0\u4e3aFFmpeg\u672c\u8eab\u662fC\u8bed\u8a00\u7684\uff0c\u6211\u5148\u7528C\u5c01\u88c5\u6210\u5de5\u5177\u7c7b\uff0c\u8fd9\u6837\u4e0d\u4f9d\u8d56\u5e73\u53f0\uff0c\u4e0a\u5c42\u7528\u4ec0\u4e48\u8bed\u8a00\u8c03\u90fd\u884c\u3002\n\n\u8fd9\u91cc\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684FFmpeg\u547d\u4ee4\u884c\u683c\u5f0f\u8f6c\u6362\u529f\u80fd\u3002\n\n# 1 \u521b\u5efaC\u6587\u4ef6\n\n\u65b0\u5efamy_test.c\u548c\u5934\u6587\u4ef6\uff0c\u5728\u8fd9\u4e2a\u5934\u6587\u4ef6\u91cc\u5bfc\u5165`#import \"fftools/ffmpeg.h\"`\uff0c\u56e0\u4e3affmpeg.h\u5934\u6587\u4ef6\u91cc\u5bfc\u5165\u4e86\u6240\u6709\u7684\u6a21\u5757\uff0c\u5c31\u4e0d\u9700\u8981\u5916\u9762\u4e00\u4e2a\u4e2a\u5bfc\u5165\u4e86\u3002\n```\n\n#ifndef my_test_h\n#define my_test_h\n\n#include <stdio.h>\n//#import \"libavformat/avformat.h\"\n#import \"fftools/ffmpeg.h\"\n\nchar* do_test(char* s);\nchar* do_cmd(char* s);\n\n#endif /* my_test_h */\n```\n\n\u7136\u540e\u65b0\u5efa\u4e00\u4e2aDemo-Bridging-Header.h\u5934\u6587\u4ef6\uff0c\u5bfc\u5165\u4e0a\u9762\u521b\u5efa\u7684my_test.h\u7684\u5934\u6587\u4ef6\n\n```c\n#ifndef Demo_Bridging_Header_h\n#define Demo_Bridging_Header_h\n\n//#import \"libavformat/avformat.h\"\n#import \"my_test.h\"\n\n#endif /* Demo_Bridging_Header_h */\n```\n\n\u6dfb\u52a0\u5230\u5de5\u7a0b\u914d\u7f6e\u91cc\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728Swift\u91cc\u8c03\u7528\u4e86\n\n![\u622a\u5c4f2022-06-27 10.05.44.png](https://rome753.github.io/cdn/1896166-7cb3d5f59c3d4a7e.png)\n\n# 2 Swift\u4e0eC\u5b57\u7b26\u4e32\u8f6c\u6362\n\u8981\u5728Swift\u91cc\u4f7f\u7528C\u5e93\uff0c\u5c31\u8981\u628a\u6587\u4ef6\u8def\u5f84\u4f20\u7ed9C\uff0c\u63a5\u6536C\u8fd4\u56de\u7684\u7ed3\u679c\u3002Swift\u91cc\u9762\u7684\u5b57\u7b26\u4e32\u662fString\uff0cC\u91cc\u9762\u4e00\u822c\u662fchar*\uff0c\u5b83\u4eec\u4e4b\u95f4\u76f8\u4e92\u8f6c\u6362\u65b9\u6cd5\u5982\u4e0b\uff08\u8f6c\u6362\u90fd\u662f\u5728Swift\u91cc\u8fdb\u884c\u7684\uff09\u3002\n\n- String\u8f6cchar*\n```swift\n        let cmd = \"ffmpeg -y -f gif -i \\(src) \\(dst)\"\n        let pointer = UnsafeMutablePointer<CChar>(mutating: cmd.cString(using: .utf8))\n```\n\n\n- char*\u8f6cString\n```swift\n        String.init(cString: ret)\n```\n\n# 3 FFmpeg\u547d\u4ee4\u884c\n\n\u5728my_test.c\u91cc\u6dfb\u52a0\u8c03\u7528FFmpeg\u547d\u4ee4\u884c\u7684\u65b9\u6cd5\uff0c\u4e0a\u5c42\u76f4\u63a5\u4f20\u5165\u5b8c\u6574\u7684FFmpeg\u547d\u4ee4\u884cstr\uff0c\u7528\u7a7a\u683c\u8fdb\u884c\u5b57\u7b26\u4e32\u5206\u5272\u540e\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u6570\u7ec4char *argv[50]\uff0c\u8c03\u7528ffmpeg_main\u65b9\u6cd5\u5904\u7406\u3002\n\n```c\nchar* do_cmd(char* str) {\n    char delim[] = \" \";\n\n    char *ptr = strtok(str, delim);\n\n    int argc = 0;\n    char *argv[50];\n    \n    while(ptr != NULL)\n    {\n        argv[argc++] = ptr;\n        ptr = strtok(NULL, delim);\n    }\n    \n    for (int i = 0; i < argc; i++) {\n        printf(\"%s\\n\", argv[i]);\n    }\n    \n    ffmpeg_main(argc, argv);\n    \n    return \"\";\n}\n```\n\n# 4 Swift\u8c03\u7528\n\n\u5c06\u547d\u4ee4\u884ccmd\u8f6c\u6362\u6210UnsafeMutablePointer<CChar>\u540e\uff0c\u76f4\u63a5\u8c03\u7528C\u91cc\u9762\u7684do_cmd\u65b9\u6cd5\u5373\u53ef\u3002\n\n```swift\n        let cmd = \"ffmpeg -y -f gif -i \\(src) \\(dst)\"\n        print(\"cmd: \\(cmd)\")\n        let pointer = UnsafeMutablePointer<CChar>(mutating: cmd.cString(using: .utf8))\n        print(\"ffmpeg begin ---------------------\")\n        \n        if let ret = do_cmd(pointer) {\n            print(String.init(cString: ret))\n            print(\"ffmpeg end   ---------------------\")\n            UISaveVideoAtPathToSavedPhotosAlbum(dst, self, #selector(self.didFinishSavingVideo(videoPath:error:contextInfo:)), nil)\n        }\n```\n\n# 5 \u5b8c\u6574\u529f\u80fd\n\u70b9\u51fb\u6309\u94ae\uff0c\u4ece\u624b\u673a\u76f8\u518c\u91cc\u9009\u4e00\u5f20gif\u52a8\u56fe\uff0c\u8f6c\u6362\u6210mp4\u89c6\u9891\uff0c\u4fdd\u5b58\u5230\u76f8\u518c\u3002\n\n```swift\n\nimport UIKit\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view.\n        \n        let label = UILabel(frame: CGRect(x: 50, y: 50, width: 200, height: 100))\n        label.text = \"ffmpeg \"\n        label.backgroundColor = .white.withAlphaComponent(0.2)\n        view.addSubview(label)\n        \n        label.isUserInteractionEnabled = true\n        label.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(pickImage)))\n    }\n}\n\n// MARK: - \u56fe\u7247\u64cd\u4f5c\nextension ViewController: UIImagePickerControllerDelegate, UINavigationControllerDelegate {\n    \n    @objc func pickImage() {\n        self.present(imagePickerController, animated: true)\n    }\n    \n    // MARK: \u56fe\u7247\u9009\u62e9\u5668\u754c\u9762\n    var imagePickerController: UIImagePickerController {\n        let imagePicket = UIImagePickerController()\n        imagePicket.delegate = self\n        imagePicket.sourceType = .photoLibrary\n        imagePicket.allowsEditing = false\n        return imagePicket\n    }\n    \n    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {\n        picker.dismiss(animated: true, completion: nil)\n        guard let image = info[UIImagePickerController.InfoKey(rawValue: UIImagePickerController.InfoKey.originalImage.rawValue)] as? UIImage else {\n            print(\"pick_image_fail\")\n            return\n        }\n        let path = (info[UIImagePickerController.InfoKey(rawValue: UIImagePickerController.InfoKey.imageURL.rawValue)] as? URL)?.path ?? \"\"\n        \n        onImagePicked(image, path)\n    }\n    \n    private func onImagePicked(_ image: UIImage?, _ path: String) {\n//        let fileName = \"\\(CLongLong(round(Date().timeIntervalSince1970*1000))).mp4\"\n//        let fileName = \"d.mp4\"\n        let src = NSTemporaryDirectory() + \"1.gif\"\n        let dst = NSTemporaryDirectory() + \"2.mp4\"\n        do {\n            try FileManager.default.removeItem(atPath: src)\n        } catch {\n            print(error)\n        }\n        do {\n            try FileManager.default.moveItem(atPath: path, toPath: src)\n        } catch {\n            print(error)\n        }\n        \n        FileManager.default.createFile(atPath: dst, contents: nil)\n        \n//        do {\n//            try FileManager.default.removeItem(atPath: dst)\n//        } catch _{}\n        \n        let cmd = \"ffmpeg -y -f gif -i \\(src) \\(dst)\"\n        print(\"cmd: \\(cmd)\")\n        let pointer = UnsafeMutablePointer<CChar>(mutating: cmd.cString(using: .utf8))\n        print(\"ffmpeg begin ---------------------\")\n        \n        if let ret = do_cmd(pointer) {\n            print(String.init(cString: ret))\n            print(\"ffmpeg end   ---------------------\")\n            UISaveVideoAtPathToSavedPhotosAlbum(dst, self, #selector(self.didFinishSavingVideo(videoPath:error:contextInfo:)), nil)\n        }\n    }\n\n    // MARK: \u5f53\u70b9\u51fb\u56fe\u7247\u9009\u62e9\u5668\u4e2d\u7684\u53d6\u6d88\u6309\u94ae\u65f6\u56de\u8c03\n    func imagePickerControllerDidCancel(_ picker: UIImagePickerController) {\n        picker.dismiss(animated: true, completion: nil)\n    }\n\n    \n    @objc func didFinishSavingVideo(videoPath: String, error: NSError?, contextInfo: UnsafeMutableRawPointer?) {\n        if error != nil{\n            print(\"\u4fdd\u5b58\u5931\u8d25\")\n        }else{\n            print(\"\u4fdd\u5b58\u6210\u529f\uff0c\u8bf7\u5230\u76f8\u518c\u4e2d\u67e5\u770b\")\n        }\n    }\n}\n\n```\n\n\u6709\u4e24\u4e2a\u5c0f\u95ee\u9898\uff1a\n- \u8f6c\u6362\u7684\u76ee\u6807\u6587\u4ef6\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u63d0\u524d\u521b\u5efa\u4e86\u547d\u4ee4\u884c\u53c8\u4f1a\u8be2\u95ee\u662f\u5426\u8986\u76d6\u539f\u6587\u4ef6\u3002\u53ea\u80fd\u5148\u521b\u5efa\uff0c\u7136\u540e\u518d\u547d\u4ee4\u884c\u91cc\u52a0\u4e0a-y\uff0c\u4ee3\u8868\u81ea\u52a8\u786e\u8ba4\u8986\u76d6\u3002\n\n- \u4f20\u7ed9ffmpeg\u7684\u6587\u4ef6\u5168\u8def\u5f84\u540d\u4e0d\u80fd\u592a\u957f\uff0c\u592a\u957f\u4f1a\u76f4\u63a5\u62a5\u9519\u6587\u4ef6\u627e\u4e0d\u5230\uff0c\u7136\u800ciOS\u91cc\u6587\u4ef6\u5168\u8def\u5f84\u540d\u53c8\u90fd\u5f88\u957f\u3002\u6211\u80fd\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u5728\u4e34\u65f6\u6587\u4ef6\u76ee\u5f55\u91cc\u521b\u5efa\u4e24\u4e2a\u4e34\u65f6\u6587\u4ef6\uff0c\u540d\u5b57\u5f88\u77ed\uff0c\u5148\u628a\u6587\u4ef6\u590d\u5236\u5230\u8fd9\u91cc\uff0c\u518d\u8fdb\u884c\u8f6c\u6362\u3002\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u3002\n", "mt_excerpt": "", "title": "FFmpeg-iOS\u5f00\u53d1\u914d\u7f6e\u548c\u683c\u5f0f\u8f6c\u6362", "dateCreated": "20220720T11:04:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]FFmpeg", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16496953.html", "permalink": "https://www.cnblogs.com/rome753/p/16496953.html", "postid": 16496953, "description": "\u6700\u65b0\u628a\u535a\u5ba2\u4ece\u7b80\u4e66\u8fc1\u79fb\u5230\u535a\u5ba2\u56ed\u4e86\uff0c\u5404\u79cd\u5e73\u53f0\u91cc\uff0c\u8fd8\u662f\u535a\u5ba2\u56ed\u6700\u9002\u5408\u5199\u6280\u672f\u535a\u5ba2\u3002\n\n\u4e3a\u4e86\u4e0d\u4e00\u7bc7\u7bc7\u590d\u5236\uff0c\u641c\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e86MetaWeblog\u8fd9\u4e2aAPI\u3002\n\u6211\u7528\u7684\u662fPython\u91cc\u7684xmlrpc\u5e93\u3002\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u5199\u4e00\u4e9b\u5de5\u5177\u811a\u672c\u8fd8\u662fPython\u6700\u65b9\u4fbf\uff0c\u51e0\u884c\u4ee3\u7801\u5c31\u80fd\u641e\u5b9a\u3002\n\n### \u529f\u80fd\n\n\u6839\u636e\u535a\u5ba2\u56edMetaweblog\u63d0\u4f9b\u7684API\uff0c\u53ef\u4ee5\u5b8c\u6210\u81ea\u5df1\u535a\u5ba2\u8d26\u6237\u7684\u5927\u90e8\u5206\u64cd\u4f5c\uff1a\n\u5305\u62ec\u53d1\u5e03\u3001\u4fee\u6539\u3001\u5220\u9664\u3001\u83b7\u53d6\u6700\u8fd1\u53d1\u5e03\u7b49\u3002\n\n```java\nblogger.deletePost\nblogger.getUsersBlogs\nmetaWeblog.editPost\nmetaWeblog.getCategories\nmetaWeblog.getPost\nmetaWeblog.getRecentPosts\nmetaWeblog.newMediaObject\nmetaWeblog.newPost\nwp.newCategory\n```\n\n### \u53d1\u5e03\u535a\u5ba2\n\n\u9996\u5148\u8981\u914d\u7f6e\u4e00\u4e9b\u81ea\u5df1\u7684\u8d26\u6237\u4fe1\u606f\uff0c\u7528\u6237\u540d\u5bc6\u7801\u81ea\u4e0d\u5fc5\u8bf4\uff0cTOKEN\u4ece\u535a\u5ba2\u56ed\u7684`\u8bbe\u7f6e\u300b\u66f4\u591a\u8bbe\u7f6e\u300bMetaweblog\u8bbf\u95ee\u4ee4\u724c`\u83b7\u53d6\uff0cMetaWeblog\u8bbf\u95ee\u5730\u5740\u4e5f\u5728\u90a3\u91cc\u3002\n\n\u7528\u8d26\u6237\u4fe1\u606f\u548c\u5f85\u53d1\u5e03\u7684\u535a\u5ba2\u6570\u636e\u8c03\u7528metaWeblog.newPost\u65b9\u6cd5\u5373\u53ef\u3002\n\n```python\nimport xmlrpc.client\nimport time\nimport os\n\nBLOG_USERNAME = 'rome753' # \u535a\u5ba2\u7528\u6237\u540d\nBLOG_PASSWORD = '' # \u535a\u5ba2\u5bc6\u7801\nBLOG_TOKEN = ''\nMETAWEBLOG_API = 'https://rpc.cnblogs.com/metaweblog/rome753' # \u535a\u5ba2metaweblog api\u5730\u5740\n\n\ndef new_post(title, content, category):\n    # \u6784\u5efa\u53d1\u5e03\u5185\u5bb9\n    struct = {\n        'title': title,\n        'dateCreated': 0,\n        'description': content,\n    }\n    if category is not None:\n        struct['categories'] = ['[Markdown]', category]\n    else:\n        struct['categories'] = ['[Markdown]']\n\n    client = xmlrpc.client.ServerProxy(METAWEBLOG_API)\n    postid = client.metaWeblog.newPost('',BLOG_USERNAME, BLOG_TOKEN, struct, True)\n    print('\u53d1\u5e03\u6210\u529f' + postid)\n```\n\n\u867d\u7136\u4ee3\u7801\u5f88\u5c11\uff0c\u4f46\u662f\u5751\u4e5f\u4e0d\u5c11\uff0c\u6709\u51e0\u4e2a\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n- \u53d1\u5e03\u5185\u5bb9\u91cc\u6807\u9898title\u3001\u5185\u5bb9description\u548c\u521b\u5efa\u65e5\u671fdateCreated\u662f\u5fc5\u586b\u7684\uff0c\u521b\u5efa\u65e5\u671f\u53ef\u4ee5\u586b0\uff0c\u6700\u7ec8\u663e\u793a\u7684\u662f\u5f53\u524d\u65f6\u95f4\u3002\n- \u5185\u5bb9description\u6211\u586b\u7684\u662fmarkdown\u6587\u672c\uff0c\u6ce8\u610f\u6b64\u65f6\u5206\u7c7bcategories\u91cc\u4e00\u5b9a\u8981\u52a0\u4e0a'[Markdown]'\uff0c\u5426\u5219\u4f20\u4e0a\u53bb\u7684\u683c\u5f0f\u6709\u95ee\u9898\uff0c\u4e0d\u4f1a\u6362\u884c\u3002\n- client.metaWeblog.newPost\u7684\u65b9\u6cd5\u53c2\u6570\u91cc\u7528\u7684\u662f\u7528\u6237\u540d\u548cTOKEN\uff0c\u4e0d\u662f\u7528\u6237\u540d\u548c\u5bc6\u7801\uff01\u6211\u627e\u4e86\u5f88\u4e45\u5728\u54ea\u4f20TOKEN\uff0c\u7ed3\u679c\u53d1\u73b0\u662f\u76f4\u63a5\u628a\u5bc6\u7801\u6362\u6210TOKEN\u5c31\u884c\u4e86\u3002\u5176\u5b9e\u6ca1\u4f20TOKEN\u63a5\u53e3\u4e5f\u8fd4\u56de\u63d0\u793a\u4e86\uff0c\u602a\u81ea\u5df1\u6ca1\u4ed4\u7ec6\u770b\uff01\n- \u53d1\u5e03\u6210\u529f\u540e\u4f1a\u8fd4\u56depostid\uff0c\u62fc\u63a5\u4e00\u4e0b\u5c31\u662f\u8fd9\u7bc7\u535a\u5ba2\u7684url\u5730\u5740\u3002\n\n\n### \u6279\u91cf\u53d1\u5e03\n\n\u6211\u672c\u5730\u7684\u535a\u5ba2\u4fdd\u5b58\u5728\u4e24\u5c42\u76ee\u5f55\u91cc\uff0c\u628a\u5b83\u4eec\u5168\u90e8\u8bfb\u53d6\u51fa\u6765\u53d1\u5e03\uff0c\u6587\u4ef6\u540d\u90fd\u662f`.md`\u540e\u7f00\u7684\u3002\u6ce8\u610f\u535a\u5ba2\u56ed\u6bcf\u5206\u949f\u4e0d\u80fd\u53d1\u5e03\u8d85\u8fc73\u7bc7\u3002\u6bcf\u7bc7\u53d1\u5e03\u540e\u6211\u52a0\u4e8630s\u5ef6\u65f6\u3002\n\n```java\npostCount = 0\n\ndef readMyBlog():\n    postCount = 0\n    path = '' # \u672c\u5730\u76ee\u5f55\uff0c\u6211\u8fd9\u662f\u4e24\u5c42\u76ee\u5f55\n    dir = os.listdir(path)\n    for d in dir:\n        pp = os.path.join(path, d)\n        if os.path.isdir(pp) == False:\n            continue\n        dd = os.listdir(pp)\n        for ff in dd:\n            if ff.endswith('.md') == False:\n                continue\n            p = os.path.join(pp, ff)\n            f = open(p, 'r+', encoding=\"utf-8\")\n            title = ff[:len(ff)-3]\n            print(title)\n            content = f.read()\n            category = None\n            if (title.startswith('Android')):\n                category = 'Android'\n            if (title.startswith('iOS')):\n                category = 'iOS'\n            if (title.startswith('FFmpeg')):\n                category = 'FFmpeg'\n            if (title.startswith('OpenCV')):\n                category = 'OpenCV'\n            f.close()\n\n            if postCount < 0: # \u4ece\u4e0a\u6b21\u62a5\u9519\u7684\u4f4d\u7f6e\u7ee7\u7eed\n                postCount += 1\n                continue\n            print(postCount)\n            new_post(title, content, category)\n            postCount += 1\n            time.sleep(30)\n```\n\n### \u83b7\u53d6\u6700\u8fd1\u53d1\u5e03\n\n\u8c03\u7528metaWeblog.getRecentPosts\u65b9\u6cd5\u5373\u53ef\u3002\u8fd4\u56de\u7684\u6570\u636e\u76f4\u63a5\u5c31\u662fJSON\u5217\u8868\u3002\n\n```java\n\ndef getRecentPost():\n    client = xmlrpc.client.ServerProxy(METAWEBLOG_API)\n    r = client.metaWeblog.getRecentPosts(BLOG_USERNAME,BLOG_USERNAME,BLOG_TOKEN,10)\n    for j in r:\n        print(j['title'])\n        print(j['postid'])\n```", "mt_excerpt": "", "title": "Python\u4f7f\u7528MetaWeblog\u6279\u91cf\u8fc1\u79fb\u5230\u535a\u5ba2\u56ed", "dateCreated": "20220720T10:33:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495619.html", "permalink": "https://www.cnblogs.com/rome753/p/16495619.html", "postid": 16495619, "description": "```kotlin\n1. \u6807\u51c6\u65b9\u5f0f\n\u76f4\u63a5\u5b9e\u4f8b\u5316\u5bf9\u8c61\n\n        view.setOnClickListener(object : View.OnClickListener {\n            override fun onClick(v: View?) {\n                v?.getTag()\n            }\n        })\n\n2. lambda\u8868\u8fbe\u5f0f\n\u65b9\u6cd5\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 it \u8868\u793a\n\n        view.setOnClickListener {\n            it.getTag()\n        }\n\n3. lambda\u8868\u8fbe\u5f0f\n\u65b9\u6cd5\u7684\u53c2\u6570\u540d\u7528\u81ea\u5b9a\u4e49 v \u8868\u793a\n\n        view.setOnClickListener {v ->\n            v.getTag()\n        }\n\n4. \u5b9a\u4e49\u51fd\u6570\u7c7b\u578b\n\u5b9e\u9645\u4e0a\u4e5f\u662flambda\u8868\u8fbe\u5f0f\n\n    val onClick: (View) -> Unit = {\n        it.getTag()\n    }\n    view.setOnClickListener(onClick)\n\n5. \u4f7f\u7528\u7c7b\u578b\u522b\u540d\u5b9a\u4e49\u51fd\u6570\n\n    typealias MyOnClickListener = (View) -> Unit\n\n    val onClick2: MyOnClickListener = {\n        it.getTag()\n    }\n    view.setOnClickListener(onClick)\n\n6. \u533f\u540d\u51fd\u6570\n\n        view.setOnClickListener(fun(v: View) {\n            v.getTag()\n        })\n```\n\n\u5bf9\u6bd4 Java \u7684\u70b9\u51fb\u4e8b\u4ef6\n```java\n1. \u6807\u51c6\u65b9\u5f0f\n\u5b9e\u4f8b\u5316\u5bf9\u8c61\n\n        view.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                v.getTag()\n            }\n        });\n\n2. lambda\u8868\u8fbe\u5f0f\n\n        view.setOnClickListener(v -> {\n            v.getTag()\n        });\n        \n        \n```\n\n**\u5c0f\u7ed3**\n- \u4e3b\u8981\u662f\u4f20\u9012\u5bf9\u8c61\u548c\u4f20\u9012\u65b9\u6cd5\u4e24\u79cd\u65b9\u5f0f\n- Kotlin\u4e2d\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f5c\u4e3a\u5bf9\u8c61\u4f7f\u7528\uff0c\u4e14\u65b9\u6cd5\u7684\u5b9e\u73b0\u65b9\u5f0f\u5f88\u591a\uff1alambda\u8868\u8fbe\u5f0f\u3001\u7c7b\u578b\u522b\u540d\u3001\u533f\u540d\u51fd\u6570\n- Kotlin\u53ef\u4ee5\u5c06lambda\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u4f7f\u7528\uff08\u5373\u52a0\u4e86fun\u5173\u952e\u5b57\u4e14\u53ea\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3\uff09\n", "mt_excerpt": "", "title": "Kotlin\u8bbe\u7f6eView\u70b9\u51fb\u4e8b\u4ef6\u7684\u51e0\u79cd\u65b9\u5f0f", "dateCreated": "20220719T20:22:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495614.html", "permalink": "https://www.cnblogs.com/rome753/p/16495614.html", "postid": 16495614, "description": "\u4e00\u4e9bAPP\u9700\u8981\u65b0\u624b\u5f15\u5bfc\u529f\u80fd\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n![hollow1.png](http://upload-images.jianshu.io/upload_images/1896166-fc4ccaacd40404e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\u4e00\u4e2a\u9ed1\u8272\u534a\u900f\u660e\u7684\u6d6e\u5c42\u76d6\u4f4f\u9875\u9762\u7684\u5927\u90e8\u5206\uff0c\u9700\u8981\u5f15\u5bfc\u7528\u6237\u64cd\u4f5c\u7684\u5730\u65b9\u7a81\u51fa\u663e\u793a\u3002\u5b9e\u73b0\u8fd9\u79cd\u6548\u679c\u6709\u4e24\u79cd\u601d\u8def\uff1a\n* \u5c06\u8981\u7a81\u51fa\u663e\u793a\u7684\u5730\u65b9\u505a\u6210\u56fe\u7247\uff0c\u653e\u5230\u4e0b\u5c42\u9875\u9762\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u5b9e\u73b0\u4f2a\u900f\u660e\u6548\u679c\u3002\u8fd9\u6837\u7684\u7f3a\u70b9\u662f\uff0c\u5982\u679c\u56fe\u7247\u8f83\u5927\u6216\u8005\u662f\u52a8\u753b\u4f1a\u5360\u7528\u7a7a\u95f4\uff0c\u6216\u8005\u8981\u7a81\u51fa\u7684\u5185\u5bb9\u662f\u53ef\u53d8\u7684\u4e5f\u4e0d\u5408\u9002\u3002\n* \u5728View\u7684onDraw()\u65b9\u6cd5\u4e2d\u7ed8\u56fe\uff0c\u5728\u8981\u7a81\u51fa\u663e\u793a\u7684\u5730\u65b9\u7ed8\u5236\u900f\u660e\u533a\u57df\u3002\u4e5f\u8bb8\u4f60\u4f1a\u60f3\uff0c\u8fd9\u5f88\u7b80\u5355\uff0c\u5148\u628a\u9ed1\u8272\u7684\u6d6e\u5c42\u753b\u51fa\u6765\uff0c\u518d\u5728\u5176\u4e2d\u753b\u900f\u660e\u7684\u56fe\u5f62\u4e0d\u5c31\u884c\u4e86\uff1f\u4e8b\u5b9e\u4e0a\u76f4\u63a5\u8fd9\u4e48\u505a\u662f\u884c\u4e0d\u901a\u7684\uff0c\u900f\u660e\u56fe\u5f62\u4f1a\u88ab\u4e0b\u9762\u7684\u9ed1\u8272\u7684\u6d6e\u5c42\u201c\u8986\u76d6\u201d\uff0c\u6839\u672c\u770b\u4e0d\u5230\u3002\u8981\u5b9e\u73b0\u900f\u660e\u6548\u679c\u9700\u8981\u5c06\u900f\u660e\u533a\u57df\u4ece\u9ed1\u8272\u6d6e\u5c42\u4e2d\u6316\u53bb\u3002\n\n### \u539f\u7406\n\u5b9e\u73b0\u6316\u53bb\u6548\u679c\u5c31\u9700\u8981\u4f7f\u7528PorterDuffXfermode\u56fe\u7247\u5408\u6210\u6280\u672f\uff0c\u5b83\u5c06\u4e24\u5f20\u56fe\u7247\u5408\u79f0\u4e3a\u4e00\u5f20\uff0c\u5408\u6210\u540e\u7684\u6548\u679c\u4f1a\u7a81\u51fa\u6216\u9690\u85cf\u56fe\u7247\u7684\u4e00\u90e8\u5206\u3002\n![PorterDuffXfermode.jpg](http://upload-images.jianshu.io/upload_images/1896166-72e1b2810387ddbe.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nPorterDuffXfermode\u4e2d\u768416\u79cd\u6a21\u5f0f\u5982\u4e0a\u56fe\u6240\u793a\u3002\u56fe\u4e2d\u84dd\u8272\u77e9\u5f62\u662f\u6e90\u56feSrc\uff0c\u9ec4\u8272\u5706\u5f62\u662f\u76ee\u6807\u56feDst\u3002\u6e90\u56fe\u548c\u76ee\u6807\u56fe\u5e76\u65e0\u5dee\u522b\uff0c\u53ea\u9700\u8981\u77e5\u9053**\u5148\u753b\u7684\u662f\u76ee\u6807\u56fe\uff0c\u540e\u753b\u7684\u662f\u6e90\u56fe**\u5c31\u884c\u4e86\u3002\n\n\u6839\u636e\u524d\u9762\u7684\u9700\u6c42\uff0c\u5148\u753b\u9ed1\u8272\u6d6e\u5c42\uff0c\u7136\u540e\u753b\u900f\u660e\u56fe\u5f62\uff0c\u5e76\u5c06\u900f\u660e\u56fe\u5f62\u6316\u53bb\u3002\u4e5f\u5c31\u662fDst\u662f\u9ed1\u8272\u6d6e\u5c42\uff0cSrc\u662f\u900f\u660e\u56fe\u5f62\uff0cSrc\u6316\u53bb\u3002\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u662f\u4e0a\u56fe\u7684 *SrcOut* \u6a21\u5f0f\u3002\n\n### \u4ee3\u7801\n\u8fd9\u79cd\u9542\u7a7a\u5e03\u5c40\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n#### HollowLayout.java\n```java\npublic class HollowLayout extends FrameLayout {\n\n    private static final int SHADOW_COLOR = 0xB3000000;\n    private static final int HOLLOW_COLOR = Color.TRANSPARENT;\n\n    private RectF mRectF;\n    private Paint mPaint;\n    private Xfermode mXfermode;\n\n    public HollowLayout(Context context) {\n        this(context, null);\n    }\n\n    public HollowLayout(Context context, @Nullable AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public HollowLayout(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        setLayerType(LAYER_TYPE_SOFTWARE, null);\n        setWillNotDraw(false);\n        mPaint = new Paint();\n        mPaint.setAntiAlias(true);\n        mPaint.setStyle(Paint.Style.FILL_AND_STROKE);\n        //SrcOut\u6a21\u5f0f\n        mXfermode = new PorterDuffXfermode(PorterDuff.Mode.SRC_OUT);\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        if(mRectF == null){\n            mRectF = new RectF(0, 0, getWidth(), getHeight());\n        }\n        //\u7ed8\u5236\u76ee\u6807\u56fe\n        mPaint.setColor(SHADOW_COLOR);\n        canvas.drawRect(mRectF, mPaint);\n        //\u8bbe\u7f6e\u6df7\u5408\u6a21\u5f0f\n        mPaint.setXfermode(mXfermode);\n        //\u7ed8\u5236\u6e90\u56fe\n        mPaint.setColor(HOLLOW_COLOR);\n        if(onDrawHollowListener != null){\n            onDrawHollowListener.onDrawHollow(canvas, mPaint);\n        }\n    }\n\n    private OnDrawHollowListener onDrawHollowListener;\n\n    public void setOnDrawHollowListener(OnDrawHollowListener onDrawHollowListener) {\n        this.onDrawHollowListener = onDrawHollowListener;\n    }\n\n    public interface OnDrawHollowListener{\n        void onDrawHollow(Canvas canvas, Paint paint);\n    }\n}\n```\n- HollowLayout\u7ee7\u627f\u81eaFrameLayout\u800c\u4e0d\u662fView\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u5728\u9542\u7a7a\u5e03\u5c40\u7684\u4e0a\u9762\u6dfb\u52a0\u8bf4\u660e\u6587\u5b57\u548c\u56fe\u7247\u3002\n- \u7531\u4e8e\u60f3\u8981\u9542\u7a7a\u7684\u56fe\u5f62\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u53ef\u80fd\u662f\u5706\u7684\u3001\u4e5f\u53ef\u80fd\u662f\u65b9\u7684\u3001\u6216\u8005\u591a\u4e2a\u56fe\u5f62\u7684\u53e0\u52a0\u3002\u8fd9\u91cc\u5bf9\u5916\u90e8\u63d0\u4f9b *OnDrawHollowListener* \u63a5\u53e3\uff0c\u5728 *onDrawHollow(Canvas canvas, Paint paint)* \u4e2d\u76f4\u63a5\u7528canvas\u7ed8\u56fe\u3002\n\n#### activity_main.xml\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"cc.rome753.demo.MainActivity\">\n\n    <ImageView\n        android:src=\"@mipmap/ic_launcher\"\n        android:scaleType=\"fitXY\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" />\n\n    <cc.rome753.demo.HollowLayout\n        android:id=\"@+id/hv\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" >\n\n        <TextView\n            android:text=\"\u8fd9\u662f\u63d0\u793a\u6587\u5b57\"\n            android:textColor=\"@android:color/white\"\n            android:layout_marginTop=\"310dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\" />\n\n    </cc.rome753.demo.HollowLayout>\n\n</FrameLayout>\n```\n\u5c06HollowLayout\u76f4\u63a5\u653e\u5230\u9875\u9762\u5e03\u5c40\u7684\u6700\u4e0a\u5c42\uff0cHollowLayout\u4e2d\u653e\u5f15\u5bfc\u6587\u5b57\n\n#### MainActivity.java\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        final int size = dp2px(200);\n\n        final int left = (getScreenWidth(this) - size) / 2;\n        final int top = dp2px(100);\n        final int right = left + size;\n        final int bottom = top + size;\n\n        HollowLayout hl = findViewById(R.id.hv);\n        hl.setOnDrawHollowListener(new HollowLayout.OnDrawHollowListener() {\n            @Override\n            public void onDrawHollow(Canvas canvas, Paint paint) {\n                canvas.drawOval(new RectF(0,0,300,300), paint);\n                canvas.drawOval(new RectF(left,top,right,bottom), paint);\n            }\n        });\n    }\n\n    public static int dp2px(float dpValue) {\n        return (int) (0.5f + dpValue * Resources.getSystem().getDisplayMetrics().density);\n    }\n\n    public static int getScreenWidth(Context context) {\n        return context.getResources().getDisplayMetrics().widthPixels;\n    }\n\n}\n```\n\u6d3b\u52a8\u9875\u9762\u4e2d\u7ed9HollowLayout\u8bbe\u7f6e\u56de\u8c03\uff0c\u5728 *onDrawHollow(Canvas canvas, Paint paint)* \u4e2d\u7ed8\u56fe\u3002\u8fd9\u91cc\u753b\u4e86\u4e24\u4e2a\u5706\u3002\u6ce8\u610f\uff0ccanvas\u7ed8\u56fe\u662f\u57fa\u4e8e\u50cf\u7d20\u7684\uff0c\u6240\u4ee5\u8981\u786e\u5b9a\u5177\u4f53\u7684\u4f4d\u7f6e\uff0c\u5c31\u8981\u8fdb\u884c *dp2px* \u5355\u4f4d\u8f6c\u6362\u3002\n\n\u6700\u7ec8\u6548\u679c\uff1a\n![hollow2.png](http://upload-images.jianshu.io/upload_images/1896166-fde436e2769bc330.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n", "mt_excerpt": "", "title": "\u4f7f\u7528PorterDuffXfermode\u56fe\u7247\u5408\u6210\u5b9e\u73b0\u5b89\u5353\u65b0\u624b\u5f15\u5bfc", "dateCreated": "20220719T20:21:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495617.html", "permalink": "https://www.cnblogs.com/rome753/p/16495617.html", "postid": 16495617, "description": "\u4e4b\u524d\u5199\u8fc7\u4e00\u7bc7[\u4f7f\u7528RecyclerView\uff0c\u4e00\u53e5\u4ee3\u7801\u5c31\u591f\u4e86](https://www.jianshu.com/p/d73b937bcc0d)\uff0c\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u529f\u80fd\u8f83\u5b8c\u5584\u7684RecyclerView\u6846\u67b6\u7684\u5b9e\u73b0\u3002\u8be5\u6846\u67b6\u867d\u7136\u4ee3\u7801\u4e0d\u591a\uff0c\u4f46\u662f\u4ecd\u7136\u4e0d\u591f\u7b80\u6d01\uff0c\u8026\u5408\u5ea6\u4e5f\u6bd4\u8f83\u9ad8\uff0c\u96be\u4ee5\u6269\u5c55\u3002\u73b0\u5c06\u91cc\u9762\u7684\u6838\u5fc3\u90e8\u5206 *OneAdapter* \u62bd\u53d6\u51fa\u6765\uff0c\u53bb\u6389\u4e0d\u5fc5\u8981\u7684\u6cdb\u578b\u3001\u7c7b\u578b\u5224\u65ad\u548c\u5176\u4ed6\u65b9\u6cd5\uff0c\u4ee5\u5b9e\u73b0\u6700\u7b80\u5355\u3001\u901a\u7528\u6027\u548c\u6269\u5c55\u6027\u6700\u597d\u7684Adapter\u3002\n\n![ComplexList.png](https://rome753.github.io/cdn/1896166-fd25a7566d78d16b.png)\n\n\n\u5728Github\u4e0a\u641c\u7d22adatper\uff0c\u9009Java\u8bed\u8a00\uff0c\u67095K+\u7684\u8bb0\u5f55\uff0c\u4e3b\u8981\u4e5f\u90fd\u662fRecyclerView\u6216ListView\u7684\u9002\u914d\u5668\u5c01\u88c5\u3002\u65e2\u7136\u5df2\u7ecf\u6709\u8fd9\u4e48\u591a\u5b9e\u73b0\u5728\u5148\uff0c\u8fd9\u91cc\u518d\u5b9e\u73b0\u4e00\u904d\u6709\u610f\u4e49\u5417\uff1f\n\n\u6709\u7684\uff0c\u8fd9\u91cc\u7684\u5b9e\u73b0\u662f\u6700\u7b80\u5355\u3001\u4ee3\u7801\u6700\u5c11\u7684\u3002\n#### OneAdapter\u4ee3\u7801\u5982\u4e0b\uff1a\n```java\n/**\n * A custom adapter, supports multi-ItemViewType\n * \n * Created by rome753 on 2018/2/1.\n */\npublic class OneAdapter extends RecyclerView.Adapter<OneViewHolder> {\n\n    private final List<Object> data;\n    private final List<OneListener> listeners;\n\n    public OneAdapter(OneListener... listeners) {\n        this.data = new ArrayList<>();\n        this.listeners = new ArrayList<>();\n        this.listeners.addAll(Arrays.asList(listeners));\n    }\n\n    public void setData(List<?> data) {\n        this.data.clear();\n        this.data.addAll(data);\n    }\n\n    public void addData(List<?> data) {\n        this.data.addAll(data);\n    }\n\n    public List<Object> getData() {\n        return data;\n    }\n\n    public List<OneListener> getListeners() {\n        return listeners;\n    }\n\n    @Override\n    public int getItemViewType(int position) {\n        Object o = data.get(position);\n        for (int i = 0; i < listeners.size(); i++) {\n            OneListener listener = listeners.get(i);\n            if (listener.isMyItemViewType(position, o)) {\n                return i;\n            }\n        }\n        return 0;\n    }\n\n    @Override\n    public OneViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        return listeners.get(viewType).getMyViewHolder(parent);\n    }\n\n    @Override\n    public void onBindViewHolder(OneViewHolder holder, int position) {\n        Object o = data.get(position);\n        holder.bindView(position, o);\n    }\n\n    @Override\n    public int getItemCount() {\n        return data.size();\n    }\n\n}\n```\nOneAdatper\u7ee7\u627f\u81eaRecyclerView.Adapter\uff0c\u91cd\u5199\u4e864\u4e2a\u65b9\u6cd5\uff0c\u5e76\u5728\u5176\u4e2d\u589e\u52a0\u4e86\u4e24\u4e2aList\uff0c\u6838\u5fc3\u4ee3\u7801\u53ea\u6709\u51e0\u884c\uff0c\u5728 *getItemViewType(int position)* \u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u3002\n\n## \u539f\u56e0\n\n\u5f88\u591a\u540c\u5b66\u5f00\u53d1\u65f6\u770b\u5230\u6709\u5217\u8868\u5c31\u6765\u4e00\u4e2aRecyclerView\uff0c\u7136\u540e\u53c8\u5b9e\u73b0\u4e00\u4e2aAdapter\u3002\u8fd9\u4e24\u6b65\u90fd\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\n\n\u5148\u8bf4\u7b2c\u4e00\u6b65\uff0cRecyclerView\u5e76\u4e0d\u662f\u6709\u5217\u8868\u5c31\u4f7f\u7528\u7684\u3002Recycle\u7684\u610f\u601d\u662f\u56de\u6536\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709\u5728\u9700\u8981\u56de\u6536\u65f6\u624d\u4f7f\u7528\u3002\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u56de\u6536\u5462\uff1f**\u5217\u8868\u6570\u636e\u9879\u5f88\u591a\u6216\u8005\u5355\u4e2a\u6570\u636e\u9879\u5360\u5185\u5b58\u5f88\u5927\u65f6**\u3002\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u6bd4\u5982\u7c7b\u4f3c\u5fae\u4fe1\u7684\u8bbe\u7f6e\u9875\u9762\u90a3\u79cd\u7b80\u5355\u7684\u5217\u8868\uff0c\u4e0d\u9700\u8981\u56de\u6536\uff0c\u7528ScrollView\u5b9e\u73b0\u5c31\u53ef\u4ee5\u4e86\uff0c\u4ee3\u7801\u66f4\u7b80\u5355\uff0c\u6027\u80fd\u66f4\u597d\u3002\u8fd9\u5e94\u8be5\u4e5f\u662fGoogle\u8ba9\u5f00\u53d1\u8005\u4eceListView\u8fc1\u79fb\u5230RecyclerView\u7684\u76ee\u7684\u3002\n\n\u518d\u8bf4\u7b2c\u4e8c\u6b65\uff0c\u6bcf\u4e2aRecyclerView\u5b9e\u73b0\u4e00\u4e2aAdapter\u4e5f\u662f\u5197\u4f59\u7684\u3002Adapter\u7684\u672c\u8d28\u662f\u63a7\u5236\u5217\u8868\u4e2d\u6bcf\u4e00\u9879\u7684\u89c6\u56fe(View)\u4e0e\u6570\u636e(Data)\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u6240\u4ee5\u5b83\u5e94\u8be5\u53ea\u505a\u4e00\u4ef6\u4e8b\uff1aRecyclerView\u628a\u67d0\u4e00\u9879\u89c6\u56fe\u4f20\u8fc7\u6765\u65f6\uff0cAdapter\u628a\u6570\u636e\u4f20\u7ed9\u89c6\u56fe\u3002\u7136\u800c\u73b0\u5728Adapter\u4e2d\u5904\u7406\u4e86\u6570\u636e\u7c7b\u578b\u548c\u89c6\u56fe\u7c7b\u578b\uff0c\u8fd9\u5bfc\u81f4\u5b83\u8ddf\u5177\u4f53\u4e1a\u52a1\u8026\u5408\u5ea6\u5f88\u9ad8\uff0c\u5c24\u5176\u662f\u6570\u636e\u7c7b\u578b\u548c\u89c6\u56fe\u7c7b\u578b\u591a\u6837\u65f6\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n```java\n    class MyAdapter extends BaseAdapter<SkuItem, BaseHolder<BaseView>> {\n\n        private final int TYPE_HEADER = 0;\n        private final int TYPE_COINS = 1;\n\n        @Override\n        public int getItemCount() {\n            return mData.size();\n        }\n\n        @Override\n        public BaseHolder<BaseView> onCreateViewHolder(ViewGroup parent, int viewType) {\n            if (viewType == TYPE_HEADER) {\n                return new BaseHolder(new CoinNumberView(parent.getContext()));\n            } else {\n                return new BaseHolder(new BuyCoinsView(parent.getContext(), BuyCoinActivity.this));\n            }\n        }\n\n        @Override\n        public void onBindViewHolder(BaseHolder<BaseView> holder, int position) {\n            if (holder.itemView instanceof BuyCoinsView) {\n                BuyCoinsView buyCoinsView = (BuyCoinsView) holder.bindView;\n                buyCoinsView.bindDataByPosition(mData.get(position), position);\n            } else if (holder.itemView instanceof CoinNumberView) {\n                CoinNumberView coinNumberView = (CoinNumberView) holder.bindView;\n                coinNumberView.bindData(null);\n            }\n        }\n\n        @Override\n        public int getItemViewType(int position) {\n            if (position == 0) {\n                return TYPE_HEADER;\n            } else {\n                return TYPE_COINS;\n            }\n        }\n    }\n```\n\u8fd9\u91cc\u4e3a\u4e86\u7ed9\u5217\u8868\u589e\u52a0\u4e00\u4e2aHeader\uff0c\u5728Adapter\u4e2d\u589e\u52a0\u4e00\u4e2a\u7c7b\u578b\uff0c\u7136\u540e\u4e0d\u5f97\u4e0d\u7528 *if...else...* \u6216\u8005 *switch*  \u8bed\u53e5\u5224\u65adItemViewType\u7684\u7c7b\u578b\u3001ViewHolder\u7684\u7c7b\u578b\u548cItemView\u7684\u7c7b\u578b\u3002\n\nAdapter\u4f9d\u8d56\u6240\u6709\u7c7b\u578b\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u753b\u56fe\u6765\u770b\u662f\u8fd9\u6837\u7684\uff1a\n\n![adapter.png](http://upload-images.jianshu.io/upload_images/1896166-e64eb2e3269b14ed.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\u8fd9\u91cc\u53ea\u662f\u4e24\u79cd\u7c7b\u578b\uff0c\u5982\u679c\u67094,5\u79cd\u4e43\u81f37,8\u79cd\uff0c\u90a3\u4e48Adapter\u5c31\u7206\u70b8\u4e86\uff01\n\n## \u539f\u7406\n\nOneAdapter\u89e3\u51b3\u4e86Adapter\u7684\u8fc7\u5ea6\u8026\u5408\u95ee\u9898\uff0c\u5b83\u53ea\u4f9d\u8d56OneListener\u548cOneViewHolder\u8fd9\u4e24\u4e2a\u7c7b\uff0c\u53ea\u5173\u8054List<OneListener>\u8fd9\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u4ed6\u6240\u6709\u4f9d\u8d56\u5173\u7cfb\u90fd\u88abList<OneListener>\u8f6c\u79fb\u5230\u5916\u90e8\u4e86\u3002\u5982\u56fe\u6240\u793a\uff1a\n\n![oneadapter.png](http://upload-images.jianshu.io/upload_images/1896166-ce9bcbc43e4b2bac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\u65e0\u8bba\u6709\u591a\u5c11\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u90fd\u53ea\u9700\u8981\u5728\u5916\u90e8\u5b9e\u73b0OneListener\u548cOneViewHolder\uff0c\u7ed9OneAdapter\u4f20\u5165OneListener\u5217\u8868\u5373\u53ef\u3002\n\n> OneAdapter\u4e0d\u4f9d\u8d56\u5177\u4f53\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f7f\u7528Object\u8868\u793a\u6570\u636e\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u6cdb\u578b\u3002\u8fd9\u6837\u505a\u662f\u56e0\u4e3a\u6cdb\u578b\u4e00\u822c\u9488\u5bf9\u4e00\u79cd\u6216\u56fa\u5b9a\u51e0\u79cd\u4e0d\u786e\u5b9a\u7684\u7c7b\u578b\uff0c\u800cAdapter\u4e2d\u4e0d\u4f46\u6709\u591a\u79cd\u4e0d\u786e\u5b9a\u7684\u7c7b\u578b\u3001\u800c\u4e14\u5177\u4f53\u6709\u51e0\u79cd\u4e5f\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u56e0\u6b64\u65e0\u6cd5\u4f7f\u7528\u6cdb\u578b\u3002\u4e3a\u4e86\u4f20\u5165\u6570\u636e\u4e0d\u9650\u5236\u4e8eObject\u7c7b\u578b\uff0c\u5728OneAdapter\u4e2d\u7684 *setData(List<?> data)* \u65b9\u6cd5\u53c2\u6570\u4f7f\u7528\u4e86\u6cdb\u578b\u7684\u4e0d\u786e\u5b9a\u7c7b\u578b\u3002\n\n#### OneListener\u4ee3\u7801\u5982\u4e0b\uff1a\n```java\n/**\n * A listener for: define item view type and create ViewHolder, outside of the adapter\n */\npublic interface OneListener{\n\n    /**\n     * Is the position or the data suits for this OneListener?\n     * @param position the data's position int the list\n     * @param o the data\n     * @return true/false\n     */\n    boolean isMyItemViewType(int position, Object o);\n\n    /**\n     * Create a ViewHolder for this OneListener\n     * @param parent RecyclerView\n     * @return OneViewHolder\n     */\n    OneViewHolder getMyViewHolder(ViewGroup parent);\n}\n```\nOneListener\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b83\u5efa\u7acb\u4e86\u5217\u8868\u4e2d\u5177\u4f53\u4f4d\u7f6e\u3001\u5177\u4f53\u6570\u636e\u4e0e\u5177\u4f53OneViewHolder\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u5b9e\u9645\u4e0a**\u6bcf\u4e2aOneListener\u5b9e\u4f8b\u8868\u793a\u5217\u8868\u4e2d\u4e00\u79cd\u6761\u76ee\u7c7b\u578b**\u3002\u5b83\u91cc\u9762\u6709\u4e24\u4e2a\u65b9\u6cd5\u3002\n- *isMyItemViewType(int position, Object o)* \u65b9\u6cd5\u8ba9\u5b9e\u73b0\u8005\u6839\u636e\u4f4d\u7f6e\u6216\u8005\u8be5\u4f4d\u7f6e\u7684\u6570\u636e\u5224\u65ad\u662f\u4e0d\u662f\u5f53\u524dOneListener\u5bf9\u5e94\u7684\u6761\u76ee\u7c7b\u578b\u3002\n- *getMyViewHolder(ViewGroup parent)* \u65b9\u6cd5\u8ba9\u5b9e\u73b0\u8005\u5b9e\u73b0\u5f53\u524dOneListener\u5bf9\u5e94\u7684OneViewHolder\u5b50\u7c7b\u3002\n\n> OneListener\u4e5f\u4e0d\u4f9d\u8d56\u5177\u4f53\u7684\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u4e3a\u5224\u65ad\u6761\u76ee\u7c7b\u578b\u5e76\u4e0d\u4e00\u5b9a\u662f\u6839\u636e\u6570\u636e\u7c7b\u578b\u5224\u65ad\uff0c\u4e5f\u53ef\u80fd\u6839\u636e\u4f4d\u7f6e\u5224\u65ad\u3002\u8fd9\u7ed9\u4e86\u8c03\u7528\u8005\u6700\u5927\u7684\u7075\u6d3b\u5ea6\u3002\u867d\u7136OneViewHolder\u6709\u6cdb\u578b\uff0c\u4f46\u662fOneListener\u5e76\u4e0d\u9700\u8981\u5173\u5fc3\u3002\n\n#### OneViewHolder\u4ee3\u7801\u5982\u4e0b\uff1a\n```java\n/**\n * A ViewHolder that auto cast the data, from Object to the type you define\n * @param <D> the data type you define\n */\npublic abstract class OneViewHolder<D> extends RecyclerView.ViewHolder {\n\n    public OneViewHolder(View itemView) {\n        super(itemView);\n    }\n\n    public OneViewHolder(ViewGroup parent, int layoutRes) {\n        super(LayoutInflater.from(parent.getContext()).inflate(layoutRes, parent, false));\n    }\n\n    void bindView(int position, Object o){\n        bindViewCasted(position, (D) o);\n    }\n\n    protected abstract void bindViewCasted(int position, D d);\n}\n```\nOneViewHolder\u7ee7\u627f\u81eaRecyclerView.ViewHolder\uff0c\u5b83\u5c06\u5177\u4f53\u6570\u636e\u4e0e\u89c6\u56fe\u7ed1\u5b9a\u3002\u7531\u4e8e\u6570\u636e\u5728OneAdapter\u4e2d\u90fd\u662fObject\u7c7b\u578b\uff0c\u4e3a\u4e86\u8c03\u7528\u8005\u65b9\u4fbf\uff0c\u8fd9\u91cc\u5229\u7528\u6cdb\u578b\u81ea\u52a8\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002\u81f3\u4e8e\u7ed1\u5b9a\u89c6\u56fe\u5c01\u88c5\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff1a\n- *OneViewHolder(ViewGroup parent, int layoutRes)* \u65b9\u6cd5\u7528\u4e8e\u76f4\u63a5\u4f20\u5165ItemView\u7684\u5e03\u5c40\u8d44\u6e90\uff0c\u7528\u4e8e\u5927\u591a\u6570\u60c5\u51b5\u3002\n- *OneViewHolder(View itemView)* \u65b9\u6cd5\u7528\u4e8eItemView\u662f\u81ea\u5b9a\u4e49View\u7684\u60c5\u51b5\uff08\u6b64\u65f6\u8981\u6ce8\u610f\u81ea\u5b9a\u4e49View\u7684LayoutParams\uff09\u3002\n\n\u5230\u8fd9\u91cc\uff0c\u4e3b\u8981\u4ee3\u7801\u5c31\u8bb2\u5b8c\u4e86\u3002\n\n## \u793a\u4f8b\n1. \u7b80\u5355\u5217\u8868\n![SimpleList.png](https://rome753.github.io/cdn/1896166-2cfa488345180148.png)\n\n```java\npublic class SimpleListActivity extends AppCompatActivity {\n\n    OneAdapter oneAdapter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        oneAdapter = new OneAdapter(new OneListener() {\n            @Override\n            public boolean isMyItemViewType(int position, Object o) {\n                return true;\n            }\n\n            @Override\n            public OneViewHolder getMyViewHolder(ViewGroup parent) {\n                return new OneViewHolder<String>(parent, R.layout.item_text){\n\n                    @Override\n                    protected void bindViewCasted(int position, String s) {\n                        TextView text = itemView.findViewById(R.id.text);\n                        text.setText(s);\n                    }\n                };\n            }\n        });\n\n        RecyclerView recyclerView = findViewById(R.id.recycler_view);\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\n        recyclerView.setAdapter(oneAdapter);\n\n        requestData();\n    }\n\n    private void requestData() {\n        List<String> data = new ArrayList<>();\n        for(int i = 'A'; i <= 'z'; i++) {\n            data.add(\" \" + (char)i);\n        }\n        oneAdapter.setData(data);\n        oneAdapter.notifyDataSetChanged();\n    }\n}\n```\n2. \u5e26Header\u548cFooter\u7684\u5217\u8868\n\n![HeaderFooter.png](https://rome753.github.io/cdn/1896166-c7223686b7e38792.png)\n\n\n```java\npublic class HeaderFooterActivity extends AppCompatActivity {\n    RecyclerView recyclerView;\n    OneAdapter oneAdapter;\n    View footerView;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        oneAdapter = new OneAdapter(\n                new OneListener() {\n                    @Override\n                    public boolean isMyItemViewType(int position, Object o) {\n                        return position == 0;\n                    }\n\n                    @Override\n                    public OneViewHolder getMyViewHolder(ViewGroup parent) {\n                        return new OneViewHolder<Object>(parent, R.layout.item_text) {\n\n                            @Override\n                            protected void bindViewCasted(int position, Object o) {\n                                TextView text = itemView.findViewById(R.id.text);\n                                text.setText(\"This is header\");\n                            }\n                        };\n                    }\n                },\n                new OneListener() {\n                    @Override\n                    public boolean isMyItemViewType(int position, Object o) {\n                        return o instanceof String;\n                    }\n\n                    @Override\n                    public OneViewHolder getMyViewHolder(ViewGroup parent) {\n                        return new OneViewHolder<String>(parent, android.R.layout.simple_list_item_1) {\n\n                            @Override\n                            protected void bindViewCasted(int position, String s) {\n                                TextView text = itemView.findViewById(android.R.id.text1);\n                                text.setText(s);\n                            }\n                        };\n                    }\n                },\n                new OneListener() {\n                    @Override\n                    public boolean isMyItemViewType(int position, Object o) {\n                        return position == oneAdapter.getItemCount() - 1;\n                    }\n\n                    @Override\n                    public OneViewHolder getMyViewHolder(ViewGroup parent) {\n                        return new OneViewHolder<Object>(footerView) {\n\n                            @Override\n                            protected void bindViewCasted(int position, Object o) {\n                            }\n                        };\n                    }\n                }\n        );\n\n        recyclerView = findViewById(R.id.recycler_view);\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\n        recyclerView.setAdapter(oneAdapter);\n\n        initFooterView();\n        requestData();\n    }\n\n    private void initFooterView() {\n        footerView = LayoutInflater.from(this).inflate(R.layout.item_text, recyclerView, false);\n        ((TextView)footerView.findViewById(R.id.text)).setText(\"This is footer\");\n    }\n\n    private void requestData() {\n        List<Object> data = new ArrayList<>();\n        data.add(null);\n        for (int i = 'A'; i <= 'Z'; i++) {\n            data.add(\" \" + (char) i);\n        }\n        data.add(null);\n        oneAdapter.setData(data);\n        oneAdapter.notifyDataSetChanged();\n    }\n}\n```\n\n## \u6269\u5c55\uff1aDatabinding\u652f\u6301\nDatabinding\u662fGoogle\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u6709\u4e86\u5b83\u5c31\u4e0d\u9700\u8981\u5199 *findViewById()* \u8bed\u53e5\u4e86\uff0c\u8fd8\u80fd\u76f4\u63a5\u5728Layout\u6587\u4ef6\u4e2d\u7ed1\u5b9a\u6570\u636e\u3002 \u4f7f\u7528\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u67e5\u4e00\u4e0b\u76f8\u5173\u6559\u7a0b\u3002\u8fd9\u91cc\u7ed9OneAdapter\u6dfb\u52a0Databinding\u652f\u6301\u3002\n\n\u5bf9\u4e8eOneAdapter\u6765\u8bf4\uff0cDatabinding\u4e3b\u8981\u7528\u4e8e\u5177\u4f53\u6570\u636e\u4e0e\u89c6\u56fe\u7ed1\u5b9a\uff0c\u4e5f\u5c31\u662fOneViewHolder\u4e2d\u6240\u505a\u7684\u3002OneViewHolder\u6709\u4e24\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u5206\u522b\u5bf9\u5e94\u81ea\u5b9a\u4e49View\u548c\u5e03\u5c40\u8d44\u6e90\u6587\u4ef6\u3002\u5bf9\u4e8e\u81ea\u5b9a\u4e49View\u6765\u8bf4\uff0c\u662f\u5426\u4f7f\u7528Databinding\u662f\u8c03\u7528\u8005\u81ea\u5df1\u63a7\u5236\u7684\u3002\u56e0\u6b64Databinding\u652f\u6301\u662f\u9488\u5bf9\u4f7f\u7528\u5e03\u5c40\u8d44\u6e90\u6587\u4ef6\u7684\u60c5\u51b5\uff0c\u8fd9\u91cc\u5c01\u88c5\u4e86\u4e00\u4e2a\u5305\u88c5\u7c7bOneViewHolderWrapper\uff0c\u7528\u5b83\u66ff\u6362OneViewHolder\u5373\u53ef\u3002\n#### OneViewHolderWrapper\u4ee3\u7801\uff1a\n```java\n/**\n * A wrapper of OneViewHolder, supports data binding\n * @param <D> the type of the data\n * @param <B> the type of the ViewDataBinding\n */\npublic abstract class OneViewHolderWrapper<D,B extends ViewDataBinding>{\n\n    private OneViewHolder<D> oneViewHolder;\n\n    protected B binding;\n\n    public OneViewHolderWrapper(ViewGroup parent, int layoutRes){\n        binding = DataBindingUtil.inflate(LayoutInflater.from(parent.getContext()), layoutRes, parent, false);\n        oneViewHolder = new OneViewHolder<D>(binding.getRoot()) {\n            @Override\n            protected void bindViewCasted(int position, D d) {\n                OneViewHolderWrapper.this.bindViewCasted(position, d);\n            }\n        };\n    }\n\n    public OneViewHolder<D> getOneViewHolder() {\n        return oneViewHolder;\n    }\n\n    protected abstract void bindViewCasted(int position, D d);\n}\n```\n> OneViewHolderWrapper\u4e2d\u7528D\u8868\u793a\u6570\u636e\u6cdb\u578b\uff0cB\u8868\u793aViewDataBinding\u6cdb\u578b\u3002binding\u5bf9\u8c61\u7528\u4e8e\u7ed1\u5b9a\u5177\u4f53\u6570\u636e\u3002\n\n\u5b9e\u9645\u4f7f\u7528\u4ee3\u7801\uff1a\n```java\npublic class DataBindingActivity extends AppCompatActivity {\n\n    OneAdapter oneAdapter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        oneAdapter = new OneAdapter(new OneListener() {\n            @Override\n            public boolean isMyItemViewType(int position, Object o) {\n                return true;\n            }\n\n            @Override\n            public OneViewHolder getMyViewHolder(ViewGroup parent) {\n                return new OneViewHolderWrapper<Person, ItemPersonBinding>(parent, R.layout.item_person) {\n                    @Override\n                    protected void bindViewCasted(int position, Person person) {\n                        binding.setPerson(person);\n                        binding.executePendingBindings();\n                    }\n                }.getOneViewHolder();\n            }\n        });\n\n        RecyclerView recyclerView = findViewById(R.id.recycler_view);\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\n        recyclerView.setAdapter(oneAdapter);\n\n        requestData();\n    }\n\n    private void requestData() {\n        List<Object> data = new ArrayList<>();\n        for(int i = 0; i <= 10; i++) {\n            data.add(new Person(\"Bill\", 22));\n            data.add(new Person(\"Chris\", 10));\n            data.add(new Person(\"David\", 36));\n        }\n        oneAdapter.setData(data);\n        oneAdapter.notifyDataSetChanged();\n    }\n}\n```\n\u9700\u8981OneViewHolder\u5b9e\u4f8b\u65f6\uff0c\u5148\u521b\u5efa\u5305\u88c5\u7c7bOneViewHolderWrapper\u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528 *getOneViewHolder()* \u65b9\u6cd5\u4ece\u5305\u88c5\u7c7b\u4e2d\u53d6\u5f97OneViewHolder\u5b9e\u4f8b\u3002\u8fd9\u6837\u539f\u6709\u7684OneAdapter\u548cOneListener\u90fd\u76f4\u63a5\u517c\u5bb9\u3002\n![Databinding.png](https://rome753.github.io/cdn/1896166-4aa7cd75a12bd963.png)\n\n## \u6269\u5c55\uff1a\u4e0b\u62c9\u5237\u65b0\u548c\u52a0\u8f7d\u66f4\u591a\n\u7528SwipeRefreshLayout\u548cFooterView\u5b9e\u73b0\u4e86\u7b80\u5355\u7684\u4e0b\u62c9\u5237\u65b0\u548c\u52a0\u8f7d\u66f4\u591a\u529f\u80fd\uff0c\u8fd9\u662f\u5bf9OneAdapter\u7684\u7b80\u5355\u6269\u5c55\u3002\u6ca1\u6709\u52a0\u5165EmptyView\uff0c\u56e0\u4e3aEmptyView\u53ef\u4ee5\u5b8c\u5168\u5728\u5916\u90e8\u63a7\u5236\u3002\n```java\npublic class RecyclerLayout extends SwipeRefreshLayout implements OnRefreshListener, LoadingLayout.OnLoadingListener {\n\n    private RecyclerView recyclerView;\n    private LoadingLayout loadingLayout;\n\n    private OneAdapter oneAdapter;\n    private GridLayoutManager gridLayoutManager;\n\n    private OnRefreshListener onRefreshListener;\n    private LoadingLayout.OnLoadingListener onLoadingListener;\n\n    public RecyclerLayout(Context context) {\n        this(context, null);\n    }\n\n    public RecyclerLayout(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        setOnRefreshListener(this);\n\n        loadingLayout = new LoadingLayout(context);\n\n        gridLayoutManager = new GridLayoutManager(context, 1);\n        recyclerView = new RecyclerView(context);\n        recyclerView.setLayoutManager(gridLayoutManager);\n        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\n\n            int lastVisibleItemPosition;\n\n            @Override\n            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n                lastVisibleItemPosition = gridLayoutManager.findLastVisibleItemPosition();\n            }\n\n            @Override\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\n                if (newState == RecyclerView.SCROLL_STATE_IDLE && lastVisibleItemPosition == oneAdapter.getItemCount() - 1 - 1) {\n                    // load more\n                    onLoading();\n                }\n            }\n        });\n\n        addView(recyclerView);\n    }\n\n    public void init(final OneAdapter oneAdapter, OnRefreshListener onRefreshListener, LoadingLayout.OnLoadingListener onLoadingListener){\n        this.recyclerView.setAdapter(oneAdapter);\n        this.oneAdapter = oneAdapter;\n        this.oneAdapter.getListeners().add(0, new OneListener() {\n            @Override\n            public boolean isMyItemViewType(int position, Object o) {\n                return position == oneAdapter.getItemCount() - 1;\n            }\n\n            @Override\n            public OneViewHolder getMyViewHolder(ViewGroup parent) {\n                return new OneViewHolder(loadingLayout) {\n                    @Override\n                    protected void bindViewCasted(int position, Object o) {\n                        //ignore\n                    }\n                };\n            }\n        });\n\n        if(onRefreshListener == null){\n            setEnabled(false);\n        }\n        this.onRefreshListener = onRefreshListener;\n        this.onLoadingListener = onLoadingListener;\n    }\n\n    @Override\n    public void onRefresh() {\n        if(onRefreshListener != null){\n            onRefreshListener.onRefresh();\n        }\n    }\n\n    @Override\n    public void onLoading() {\n        if(onLoadingListener != null && !isRefreshing() && !isLoading() && !isNoMore()){\n            onLoadingListener.onLoading();\n            setLoading(true, isNoMore());\n        }\n    }\n\n    public void setData(List<?> data, boolean hasMore){\n        data.add(null);\n        oneAdapter.setData(data);\n        oneAdapter.notifyDataSetChanged();\n\n        setRefreshing(false);\n        setLoading(false, !hasMore);\n    }\n\n    public void addData(List<?> data, boolean hasMore){\n        List<Object> cur = oneAdapter.getData();\n        if(!cur.isEmpty()){\n            cur.remove(cur.size() - 1);\n        }\n        data.add(null);\n        oneAdapter.addData(data);\n        oneAdapter.notifyDataSetChanged();\n\n        setLoading(false, !hasMore);\n    }\n\n    private boolean isNoMore(){\n        return loadingLayout.isNoMore();\n    }\n\n    private boolean isLoading(){\n        return loadingLayout.isLoading();\n    }\n\n    private void setLoading(boolean loading, boolean isNoMore){\n        loadingLayout.setLoading(loading, isNoMore);\n    }\n}\n```\n\u5b9e\u9645\u4f7f\u7528\u5982\u4e0b\uff1a\n```java\npublic class RefreshActivity extends AppCompatActivity {\n\n    RecyclerLayout recyclerLayout;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        recyclerLayout = new RecyclerLayout(this);\n        setContentView(recyclerLayout);\n\n        OneAdapter oneAdapter = new OneAdapter(\n                new OneListener() {\n\n                    @Override\n                    public boolean isMyItemViewType(int position, Object o) {\n                        return true;\n                    }\n\n                    @Override\n                    public OneViewHolder getMyViewHolder(ViewGroup parent) {\n\n                        return new OneViewHolder<String>(parent, R.layout.item_text) {\n                            @Override\n                            protected void bindViewCasted(int position, String s) {\n                                TextView text = itemView.findViewById(R.id.text);\n                                text.setText(s);\n                            }\n                        };\n                    }\n                }\n        );\n\n        recyclerLayout.init(oneAdapter,\n                new SwipeRefreshLayout.OnRefreshListener() {\n                    @Override\n                    public void onRefresh() {\n                        requestData();\n                    }\n                },\n                new LoadingLayout.OnLoadingListener() {\n                    @Override\n                    public void onLoading() {\n                        requestMoreData();\n                    }\n                }\n        );\n\n\n        recyclerLayout.setRefreshing(true);\n        requestData();\n    }\n\n    int page;\n\n    private void requestData() {\n        getWindow().getDecorView().postDelayed(new Runnable() {\n            @Override\n            public void run() {\n\n                List<Object> data = new ArrayList<>();\n                for (int i = 'A'; i <= 'Z'; i++) {\n                    String s = (char) i + \" \" + System.nanoTime();\n                    data.add(s);\n                }\n\n                page = 0;\n                recyclerLayout.setData(data, page++ < 2);\n\n            }\n        }, 1000);\n    }\n\n    private void requestMoreData() {\n        getWindow().getDecorView().postDelayed(new Runnable() {\n            @Override\n            public void run() {\n\n                List<Object> data = new ArrayList<>();\n                for (int i = 'A'; i <= 'Z'; i++) {\n                    String s = (char) i + \" \" + System.nanoTime();\n                    data.add(s);\n                }\n\n                recyclerLayout.addData(data, page++ < 2);\n\n            }\n        }, 1000);\n    }\n\n}\n\n```\n\n\n## \u4ee3\u7801\u7ed3\u6784\n\n![oneadapter.png](http://upload-images.jianshu.io/upload_images/1896166-df6a48d447e13a6d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n- \u5b9e\u73b0\u666e\u901a\u6216\u591a\u79cd\u7c7b\u578b\u7684RecyclerView\uff0c\u4f7f\u7528base\u5305\u4e2d\u7684\u7c7b\u5373\u53ef\uff1b\n- \u5982\u679c\u9700\u8981Databinding\u652f\u6301\uff0c\u52a0\u5165databinding\u5305\u4e2d\u7684\u7c7b\uff1b\n- \u5982\u679c\u9700\u8981\u4e0b\u62c9\u5237\u65b0\u548c\u52a0\u8f7d\u66f4\u591a\uff0c\u53ef\u4ee5\u53c2\u8003refresh\u5305\u4e2d\u7684\u5b9e\u73b0\u3002\n\nGithub\u5730\u5740\uff1ahttps://github.com/rome753/OneAdapter\n\u5b8c\u6574\u4ee3\u7801\u548cDemo\u793a\u4f8b\u90fd\u5728\u8fd9\u91cc\uff0c\u6b22\u8fceFork\u548cStar\u54e6\u3002\n", "mt_excerpt": "", "title": "OneAdapter--RecyclerView\u6700\u7b80\u5355\u7684\u4e07\u80fd\u9002\u914d\u5668", "dateCreated": "20220719T20:21:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495610.html", "permalink": "https://www.cnblogs.com/rome753/p/16495610.html", "postid": 16495610, "description": "https://github.com/tensorflow/examples\n\n# digit_classifier \u6570\u5b57\u8bc6\u522b\n", "mt_excerpt": "", "title": "Tensorflow-Lite-Examples\u9879\u76ee\u7b80\u4ecb", "dateCreated": "20220719T20:20:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495612.html", "permalink": "https://www.cnblogs.com/rome753/p/16495612.html", "postid": 16495612, "description": "## \u524d\u8a00\n\nRecyclerView\u51fa\u6765\u6709\u597d\u51e0\u5e74\u4e86\uff0c\u5b83\u7684\u91cd\u8981\u6027\u4e0d\u8a00\u800c\u55bb\u3002\u7136\u800cRecyclerView\u53ea\u63d0\u4f9b\u4e86\u57fa\u672c\u7684View\u590d\u7528\u529f\u80fd\uff0c\u76f8\u5173\u529f\u80fd\u5982\u5237\u65b0\u3001\u70b9\u51fb\u7b49\u90fd\u9700\u8981\u5f00\u53d1\u8005\u81ea\u5df1\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u9879\u76ee\u5b9e\u73b0\u4e00\u904dRecyclerView\u529f\u80fd\u96c6\u6210\u53c8\u65e0\u5fc5\u8981\uff0c\u56e0\u6b64\u51fa\u73b0\u4e86\u8bb8\u591aRecyclerView\u5c01\u88c5\u7684\u201c\u8f6e\u5b50\u201d\uff0cGithub\u4e0a\u4e00\u641c\u591a\u5982\u725b\u6bdb\u3002\n\n## \u7b80\u4ecb\n\n\u8f6e\u5b50\u867d\u591a\uff0c\u5404\u6709\u7279\u70b9\u3002\u6709\u65f6\u5019\u8fd8\u662f\u81ea\u5df1\u9020\u7684\u6700\u9002\u5408\uff0cOneRecyclerView\u8fd9\u4e2a\u8f6e\u5b50\u7684\u7279\u70b9\u5982\u4e0b\uff1a\n- \u7528\u5f88\u5c11\u7684\u4ee3\u7801\uff08\u4e3b\u8981Java\u4ee3\u7801300\u591a\u884c\uff09\u5b9e\u73b0\u4e86RecyclerView\u96c6\u6210\u7684\u5927\u90e8\u5206\u529f\u80fd\uff0c\u5305\u62ec\u4e0b\u62c9\u5237\u65b0\u3001\u52a0\u8f7d\u66f4\u591a\u3001\u591a\u79cdViewType\u3001\u591a\u5217\u663e\u793a\u3001\u81ea\u5b9a\u4e49HeaderView\u548c\u7a7a\u6570\u636eEmptyView\n- \u5b9e\u73b0\u591a\u79cdViewType\u7684\u65b9\u5f0f\u5f88\u5de7\u5999\uff0c\u4e0d\u9700\u8981\u590d\u6742\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u4e0d\u9700\u8981\u6ce8\u518c\u7c7b\u578b\uff0c\u4e0d\u9700\u8981\u53cd\u5c04\n- \u4e00\u53e5\u4ee3\u7801\u5373\u53ef\u8c03\u7528\uff0c\u591a\u79cdViewType\u4e5f\u662f\u5982\u6b64\n\n## \u6548\u679c\u56fe\n![orv_base.gif](http://upload-images.jianshu.io/upload_images/1896166-93c24e523c58b95c.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)![orv_types.gif](http://upload-images.jianshu.io/upload_images/1896166-4b83acf88ac22f71.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)![orv_columns.gif](http://upload-images.jianshu.io/upload_images/1896166-ed40f129970be276.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)![orv_empty.gif](http://upload-images.jianshu.io/upload_images/1896166-a837134846d73388.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## \u4f7f\u7528\u65b9\u6cd5\n\n1. \u5728\u5e03\u5c40\u6587\u4ef6\u4e2d\u6dfb\u52a0OneRecyclerView\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <cc.rome753.demo.onerecycler.OneRecyclerView\n        android:id=\"@+id/orv\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n    </cc.rome753.demo.onerecycler.OneRecyclerView>\n</LinearLayout>\n```\n\n2. \u5b9e\u73b0\u81ea\u5b9a\u4e49ViewHolder\n```java\n\n    class UserInfoVH extends OneVH<UserInfo> {\n\n        public UserInfoVH(ViewGroup parent) {//1.\u8bbe\u7f6eitem\u5e03\u5c40\u6587\u4ef6\n            super(parent, R.layout.item_user_simple);\n        }\n\n        @Override\n        public void bindView(int position, final UserInfo o) {//2.\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\u548c\u8bbe\u7f6e\u6570\u636e\n            itemView.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    Toast.makeText(v.getContext(), o.getName(), Toast.LENGTH_SHORT).show();\n                }\n            });\n            TextView tvName = itemView.findViewById(R.id.tv_name);\n            tvName.setText(o.getName());\n        }\n    }\n```\n\n\u5305\u62ecitem\u7684\u5e03\u5c40\u6587\u4ef6\u3001\u7ed9item\u8bbe\u7f6e\u6570\u636e\u548c\u70b9\u51fb\u4e8b\u4ef6\n\n3. \u4e00\u53e5\u4ee3\u7801\u4f7f\u7528OneRecyclerView\n```java\n        mOneRecyclerView.init(\n                new SwipeRefreshLayout.OnRefreshListener() {\n                    @Override\n                    public void onRefresh() {\n                        requestData(false);\n                    }\n                },\n                new OneLoadingLayout.OnLoadMoreListener() {\n                    @Override\n                    public void onLoadMore() {\n                        requestData(true);\n                    }\n                },\n                new OnCreateVHListener() {\n                    @Override\n                    public OneVH onCreateHolder(ViewGroup parent) {\n                        return new UserInfoVH(parent);\n                    }\n\n                    @Override\n                    public boolean isCreate(int position, Object o) {\n                        return position % 3 > 0;\n                    }\n                }\n        );\n```\n\u8c03\u7528OneRecyclerView\u7684init()\u65b9\u6cd5\uff0c\u4f20\u5165\u4e0b\u62c9\u5237\u65b0\u76d1\u542c\u3001\u52a0\u8f7d\u66f4\u591a\u76d1\u542c\u548c\u521b\u5efaViewHolder\u76d1\u542c\u5373\u53ef\u3002\n\n> OneRecyclerView\u7684init()\u65b9\u6cd5\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u53ef\u53d8\u53c2\u6570\uff0c\u9488\u5bf9\u591a\u79cdItemType\u60c5\u51b5\uff1a\n    \u5b9e\u73b0\u591a\u4e2aViewHolder\uff0c\u7528OnCreateVHListener\u5305\u88c5\u5e76\u4f20\u5165\n\n4. \u6dfb\u52a0\u81ea\u5b9a\u4e49header\n```java\n        View header = View.inflate(this, R.layout.layout_header, null);\n        mOneRecyclerView.addHeader(header);\n```\n\n> \u53ef\u6dfb\u52a0\u591a\u4e2aheader\uff0c\u591a\u6b21\u8c03\u7528addHader()\u65b9\u6cd5\u5373\u53ef\uff0cheader\u7684\u663e\u793a\u5b8c\u5168\u7531\u81ea\u8eab\u63a7\u5236\n\n5. \u8bbe\u7f6e\u591a\u5217\u663e\u793a\u7684\u5217\u6570\n```java\n        mOneRecyclerView.setSpanCount(3);\n```\n\n> \u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u662f1\u5217\uff1b\u591a\u5217\u663e\u793a\u4e0e\u591a\u79cdViewType\u4e00\u822c\u4e0d\u4f1a\u540c\u65f6\u7528\u5230\uff0c\u6839\u636e\u5177\u4f53\u9700\u6c42\u9009\u62e9\u5176\u4e00\n\n## \u539f\u7406\u5206\u6790\n### \u4e0b\u62c9\u5237\u65b0\n\u4f7f\u7528\u5b98\u65b9\u7684SwipeRefreshLayout\n```xml\n    <android.support.v4.widget.SwipeRefreshLayout\n        android:id=\"@+id/srl_wrapper\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <android.support.v7.widget.RecyclerView\n            android:id=\"@+id/rv_wrapper\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n        </android.support.v7.widget.RecyclerView>\n    </android.support.v4.widget.SwipeRefreshLayout>\n```\n\u5e03\u5c40\u6587\u4ef6\u4e2d\u4f7f\u7528SwipeRefreshLayout\uff0c\u5728\u91cc\u9762\u653e\u5165RecyclerView\uff0c\u7136\u540esetOnRefreshListener\u8bbe\u7f6e\u5237\u65b0\u76d1\u542c\n\n### \u52a0\u8f7d\u66f4\u591a\n\u7ed9RecyclerView.Adapter\u7684`ItemCount + 1`\uff0c\u5e76\u4f7f\u7528\u4e00\u4e2a\u5355\u72ec\u7684ViewType\u3002\u5f53\u5212\u5230\u5e95\u90e8\u65f6\uff0c\u663e\u793a\u4e00\u4e2aloading\u5e03\u5c40\uff1b\u83b7\u53d6\u5230\u6570\u636e\u540e\u518d\u9690\u85cf\u8fd9\u4e2a\u5e03\u5c40\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\n    <ProgressBar\n        android:layout_gravity=\"center\"\n        android:layout_width=\"30dp\"\n        android:layout_height=\"48dp\" />\n\n</FrameLayout>\n```\n\u8fd9\u91cc\u53ea\u653e\u4e86\u4e00\u4e2aProgressBar\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\n\n### ViewHolder\u5c01\u88c5\n\n\u5bf9\u4e8e\u4e00\u4e2a\u901a\u7528\u7684\u5e93\u6765\u8bf4\uff1a\n1. \u5916\u90e8\u8c03\u7528\u8005\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\n2. RecyclerView\u7684Item\u5e03\u5c40\n3. Item\u52a0\u8f7d\u6570\u636e\u7684\u65b9\u5f0f\n4. Item\u70b9\u51fb\u4e8b\u4ef6\u7684\u5904\u7406\n\n\u8fd9\u51e0\u70b9\u90fd\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u7b2c\u4e00\u70b9\u9700\u8981\u4f7f\u7528\u6cdb\u578b\uff0c\u5373\u7531\u8c03\u7528\u8005\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff1b\u540e\u9762\u4e09\u70b9\u90fd\u53ef\u4ee5\u5728ViewHolder\u4e2d\u5904\u7406\u3002\u8fd9\u91cc\u5c01\u88c5\u4e00\u4e2a\u7ee7\u627f\u81ea`RecyclerView.ViewHolder`\u7684\u62bd\u8c61\u7c7b`OneVH<T>`\uff0c\u5177\u4f53\u7531\u8c03\u7528\u8005\u5b9e\u73b0\n```java\npublic abstract class OneVH<T> extends RecyclerView.ViewHolder {\n\n    public OneVH(View itemView) {\n        super(itemView);\n    }\n\n    public OneVH(ViewGroup parent, int layoutRes) {\n        super(LayoutInflater.from(parent.getContext()).inflate(layoutRes, parent, false));\n    }\n\n    public abstract void bindView(int position, T t);\n}\n```\n\u4e00\u4e2a\u7b80\u5355\u7684`OneVH<T>`\u5b9e\u73b0\u7c7b\u5982\u4e0b\n```java\n    class TextVH extends OneVH<UserInfo> {\n\n        public TextVH(ViewGroup parent) {//1.\u8bbe\u7f6eitem\u5e03\u5c40\u6587\u4ef6\n            super(parent, android.R.layout.simple_list_item_1);\n        }\n\n        @Override\n        public void bindView(int position, final UserInfo o) {//2.\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\u548c\u8bbe\u7f6e\u6570\u636e\n            itemView.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    Toast.makeText(v.getContext(), o.getName(), Toast.LENGTH_SHORT).show();\n                }\n            });\n            TextView tvName = itemView.findViewById(android.R.id.text1);\n            tvName.setText(o.getName());\n            tvName.setBackgroundColor(Color.GREEN);\n        }\n    }\n```\n\n### OnCreateVHListener\u5c01\u88c5\n\u5c01\u88c5\u597dViewHolder\u4e4b\u540e\uff0c\u5e76\u4e0d\u662f\u76f4\u63a5\u521b\u5efaViewHolder\u5bf9\u8c61\u4f20\u5165Adapter\u7684\uff0c\u56e0\u4e3aAdapter\u4e2d\u7684onCreateViewHolder\u65b9\u6cd5\u521b\u5efaViewHolder\u7684\u65f6\u673a\u548c\u6570\u91cf\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3OnCreateVHListener\n```java\npublic interface OnCreateVHListener<S extends OneVH, T>{\n        /**\n         * \u521b\u5efaViewHolder\n         * @param parent RecyclerView\n         * @return S extends OneVH\n         */\n        S onCreateHolder(ViewGroup parent);\n}\n```\nAdapter\u4e2d\u9700\u8981\u521b\u5efaViewHolder\u65f6\uff0c\u8c03\u7528OnCreateVHListener\u7684onCreateHolder\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684OneVH\u5b9e\u73b0\u5bf9\u8c61\n```java\n    @Override\n    public S onCreateViewHolder(ViewGroup parent, int viewType) {\n        ...\n        return onCreateVHListener.onCreateHolder(parent);\n    }\n```\n\n> \u56e0\u4e3aOnCreateVHListener\u80fd\u8fd4\u56de\u5177\u4f53OneVH<T>\u5b9e\u73b0\u5bf9\u8c61\uff0c\u6240\u4ee5Adapter\u53ea\u4f9d\u8d56OnCreateVHListener\uff0c\u4e0d\u4f9d\u8d56OneVH\u3002\u4e5f\u5c31\u662f\u8bf4\u5916\u90e8\u8c03\u7528\u8005\u53ea\u9700\u8981\u4f20\u4e00\u4e2aOnCreateVHListener\u5b9e\u73b0\u7c7b\u7ed9OneRecyclerView\u5c31\u884c\uff08OneRecyclerView\u4f20\u7ed9Adapter\uff09\n\n---\n###### \u7ecf\u8fc7\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u5df2\u7ecf\u80fd\u5f88\u65b9\u4fbf\u5730\u4f7f\u7528\u5355\u4e00ViewType\u7684RecyclerView\u4e86\u3002\u8c03\u7528\u8005\u53ea\u8981\u5b9e\u73b0\u81ea\u5df1\u7684ViewHolder\uff0c\u4e0d\u9700\u8981\u5173\u5fc3\u5176\u4ed6\u3002\u4e0b\u9762\u4ecb\u7ecd\u5728\u6b64\u57fa\u7840\u4e0a\u591a\u79cdViewType\u7684\u5b9e\u73b0 ######\n---\n\n### \u5b9e\u73b0\u591a\u79cdViewType\n\u9996\u5148\u5206\u6790\u4e00\u4e0bViewType\u7684\u539f\u7406\u3002Adapter\u4e2d\u8ddfViewType\u76f8\u5173\u7684\u4e3b\u8981\u662f`getItemViewType()`\u548c`onCreateViewHolder()`\u65b9\u6cd5\n```java\n    @Override\n    public int getItemViewType(int position) {\n    }\n\n    @Override\n    public S onCreateViewHolder(ViewGroup parent, int viewType) {\n    }\n```\n`getItemViewType()`\u65b9\u6cd5\u7528\u4e8e\u786e\u5b9a\u5f53\u524d\u4f4d\u7f6e\u7684item\u5c5e\u4e8e\u54ea\u79cd\u7c7b\u578b\uff0c\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u7c7b\u578bviewType\u7684int\u503c\n`onCreateViewHolder()`\u65b9\u6cd5\u5219\u662f\u6839\u636e\u7c7b\u578bviewType\u83b7\u53d6\u5bf9\u5e94\u7684ViewHolder\n\n\u5e38\u89c4\u601d\u8def\u601d\u8003\uff0c\u8fd9\u91cc\u9700\u8981\u8bb0\u5f55\u4e24\u79cd\u5bf9\u5e94\u5173\u7cfb\uff1a\n1. \u4f4d\u7f6eposition\u4e0eviewType\u7684\u5bf9\u5e94\u5173\u7cfb\n2. viewType\u4e0eViewHolder\u7684\u5bf9\u5e94\u5173\u7cfb\n\n\u90a3\u5c31\u9700\u8981\u4e24\u4e2aMap\u6765\u4fdd\u5b58\uff0c\u4e5f\u8bb8\u518d\u52a0\u4e00\u4e2a\u7c7b\u7ba1\u7406\u5b83\u4eec\u3002\u80fd\u5426\u5c06\u8fd9\u4e24\u4e2aMap\u5408\u5e76\u6210\u4e00\u4e2a\uff1f\u6216\u8005\u6839\u672c\u4e0d\u7528Map\uff1f\n\n**\u5148\u8003\u8651\u7b2c\u4e8c\u4e2a\u5bf9\u5e94\u5173\u7cfb**\uff0c\u7531\u4e8e\u524d\u9762\u5df2\u7ecf\u5c06ViewHolder\u7c7b\u578b\u7ed1\u5b9a\u5230OnCreateVHListener\u63a5\u53e3\u4e0a\uff0c\u4e0d\u540c\u7684viewType\u4e5f\u5c31\u5bf9\u5e94\u4e86\u4e0d\u540c\u7684OnCreateVHListener\u5bf9\u8c61\u3002\u6bd4\u5982\u67093\u79cdItem\u7c7b\u578b\uff0c\u90a3\u4e48\u5c31\u67093\u4e2aOnCreateVHListener\u5bf9\u8c61\uff0c\u8fd93\u4e2aviewType\u75283\u4e2a\u4e0d\u540cint\u503c\u5206\u522b\u5bf9\u5e94\u3002\n\n\u5176\u5b9e\u7528Map\u662f\u4e00\u79cd\u5197\u4f59\uff0c3\u4e2a\u6216\u66f4\u591aint\u503c\u5b8c\u5168\u53ef\u4ee5\u7528`0,1,2...`\u8868\u793a\uff0c\u90a3\u4e483\u4e2aOnCreateVHListener\u53ef\u4ee5\u76f4\u63a5\u7528`List<OnCreateVHListener>`\u4fdd\u5b58\uff0c\u6bcf\u4e2aOnCreateVHListener\u5728List\u4e2d\u7684\u5e8f\u53f7\u5c31\u662f\u5b83\u7684viewType\uff01\n\n**\u63a5\u7740\u8003\u8651\u7b2c\u4e00\u4e2a\u5bf9\u5e94\u5173\u7cfb**\uff0c\u6839\u636eposition\u83b7\u53d6viewType\u503c\uff0c\u5728\u6709\u4e86`List<OnCreateVHListener>`\u7684\u57fa\u7840\u4e0a\uff0cviewType\u5c31\u662fOnCreateVHListener\u5728List\u4e2d\u7684\u5e8f\u53f7\u3002\u76f4\u63a5\u83b7\u53d6\u8fd9\u4e2a\u5e8f\u53f7\u5e76\u4e0d\u597d\u5b9e\u73b0\uff0c\u80fd\u5426\u5148\u83b7\u53d6OnCreateVHListener\uff0c\u518d\u904d\u5386`List<OnCreateVHListener>`\u83b7\u5f97\u5b83\u7684\u4f4d\u7f6e\uff1f\n\n\u6839\u636eposition\u83b7\u53d6OnCreateVHListener\u4e5f\u4e0d\u65b9\u4fbf\uff0c\u8fd9\u4e2a\u5bf9\u5e94\u5173\u7cfb\u662f\u8c03\u7528\u8005\u5b9a\u4e49\u7684\uff0c\u9700\u8981\u7ed9\u5916\u90e8\u63d0\u4f9b\u4e00\u79cd\u5f88\u81ea\u7136\u7684\u5b9a\u4e49\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u6ce8\u518c\u7c7b\u578b\u6216\u5b9a\u4e49\u4e00\u4e2aManager\u7c7b\u3002**\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u5bf9\u5e94\u5173\u7cfb\uff0c\u6bcf\u4e2aOnCreateVHListener\u53ea\u9700\u8981\u77e5\u9053\u5bf9\u5e94\u7684position\u662f\u4e0d\u662f\u81ea\u5df1\u5c31\u884c\u4e86\u3002**\n\n\u8fd9\u6837\u5728OnCreateVHListener\u63a5\u53e3\u4e2d\u6dfb\u52a0\u4e00\u4e2a`isCreate(int position, T t)`\u65b9\u6cd5\uff0c\u53c2\u6570\u662f\u4f4d\u7f6eposition\u548c\u5bf9\u5e94\u4f4d\u7f6e\u7684\u6570\u636e\uff0c\u8c03\u7528\u8005\u901a\u8fc7\u8fd9\u4e24\u4e2a\u53c2\u6570\u5224\u65ad\u8be5\u4f4d\u7f6e\u662f\u4e0d\u662f\u5bf9\u5e94\u7684ViewHolder\n```java\npublic interface OnCreateVHListener<S extends OneVH, T>{\n        /**\n         * \u521b\u5efaViewHolder\n         * @param parent RecyclerView\n         * @return S extends OneVH\n         */\n        S onCreateHolder(ViewGroup parent);\n\n        /**\n         * \u6839\u636e\u5f53\u524d\u4f4d\u7f6e\u6216\u6570\u636e\u5224\u65ad\u662f\u5426\u521b\u5efaS\u7c7b\u578b\u7684ViewHolder\n         * @param position\n         * @param t\n         * @return\n         */\n        boolean isCreate(int position, T t);\n}\n```\n\u5728Adapter\u7684getItemViewType\u65b9\u6cd5\u4e2d\u904d\u5386`List<OnCreateVHListener>`\uff0c\u8c03\u7528`isCreate()`\u65b9\u6cd5\uff0c\u5982\u679c\u7ed3\u679c\u662ftrue\uff0c\u5c31\u8fd4\u56de\u5f53\u524d\u5e8f\u53f7\uff0c\u8fd9\u4e2a\u5e8f\u53f7\u5c31\u662fviewType\n```java\n\n    @Override\n    public int getItemViewType(int position) {\n        ...\n        int pos = position - headerVHList.size();\n        T t = data.get(pos);\n\n        for(int i = 0; i < listeners.size(); i++){\n            OnCreateVHListener<S,T> listener = listeners.get(i);\n            if(listener.isCreate(pos, t)){\n                return i;\n            }\n        }\n        return TYPE_NORMAL_MIN;\n    }\n```\n\u6700\u7ec8\uff0cposition\u3001viewType\u3001ViewHolder\u3001OnCreateVHListener\u5c31\u5168\u90e8\u5173\u8054\u8d77\u6765\u4e86\u3002\u4ee3\u4ef7\u53ea\u662f\u5728Adapter\u4e2d\u6dfb\u52a0\u4e00\u4e2a`List<OnCreateVHListener>`\uff08\u521d\u59cb\u5316\u65f6\u4f20\u8fdb\u6765\uff09\u3001OnCreateVHListener\u63a5\u53e3\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b9\u6cd5\u3002\n\n> \u867d\u7136\u5728getItemViewType\u65b9\u6cd5\u91cc\u8fdb\u884c\u4e86\u904d\u5386\u64cd\u4f5c\uff0c\u4f46\u662f\u8003\u8651\u523099%\u7684\u5217\u8868Item\u7c7b\u578b\u662f\u4e2a\u4f4d\u6570\uff0c\u800c\u4e14\u5224\u65ad\u7c7b\u578b\u4e0d\u662f\u8017\u65f6\u64cd\u4f5c\uff0c\u5e26\u6765\u7684\u6027\u80fd\u5f71\u54cd\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\n\nOnCreateVHListener\u91cc\u9762\u5b9a\u4e49\u7684\u4e24\u4e2a\u65b9\u6cd5\uff0c\u4e0d\u4ec5\u5173\u8054\u4e86ViewHolder\u7c7b\u578b\uff0c\u8fd8\u5173\u8054\u4e86\u4e0eposition\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u5916\u90e8\u8c03\u7528\u8005\u4f7f\u7528\u51e0\u79cdItem\u7c7b\u578b\uff0c\u4f20\u5165\u51e0\u4e2aOnCreateVHListener\u5b9e\u73b0\u7c7b\u5c31\u884c\u4e86\u3002\u5b9e\u9645\u4f7f\u7528\u5982\u4e0b\n```java\n        mOneRecyclerView.init(\n                new SwipeRefreshLayout.OnRefreshListener() {\n                    @Override\n                    public void onRefresh() {\n                        requestData(false);\n                    }\n                },\n                new OneLoadingLayout.OnLoadMoreListener() {\n                    @Override\n                    public void onLoadMore() {\n                        requestData(true);\n                    }\n                },\n                new OnCreateVHListener() {\n                    @Override\n                    public OneVH onCreateHolder(ViewGroup parent) {\n                        return new UserInfoVH(parent);\n                    }\n\n                    @Override\n                    public boolean isCreate(int position, Object o) {\n                        return position % 3 > 0;\n                    }\n                },\n                new OnCreateVHListener() {\n                    @Override\n                    public OneVH onCreateHolder(ViewGroup parent) {\n                        return new TextVH(parent);\n                    }\n\n                    @Override\n                    public boolean isCreate(int position, Object o) {\n                        return position % 3 == 0;\n                    }\n                }\n        );\n```\n`OneRecyclerView.init()`\u65b9\u6cd5\u524d\u9762\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u662f\u4e0b\u62c9\u5237\u65b0\u548c\u52a0\u8f7d\u66f4\u591a\u7684\u56de\u8c03\uff0c\u540e\u9762\u4e24\u4e2a\u53c2\u6570\u7ed9OneRecyclerView\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u4f20\u5165\u4e86\u4e24\u4e2aOnCreateVHListener\uff0c\u5206\u522b\u5bf9\u5e94\u4e24\u4e2aOneVH\u5b50\u7c7b\uff1aUserInfoVH\u548cTextVH\u3002\u524d\u8005\u7684`isCreate()`\u5728`position % 3 > 0`\u65f6\u8fd4\u56detrue\uff0c\u540e\u8005\u7684`isCreate()`\u5728`position % 3 == 0`\u65f6\u8fd4\u56detrue\u3002\u4e5f\u5c31\u662f\u4f4d\u7f6e`0,3,6,9...`\u663e\u793aTextVH\u5bf9\u5e94\u7684\u5e03\u5c40\uff0c\u4f4d\u7f6e`1,2,4,5,7,8...`\u663e\u793aUserInfoVH\u5bf9\u5e94\u7684\u5e03\u5c40\u3002\u8fd9\u662f\u4e00\u79cd\u4ea4\u66ff\u663e\u793a\u7684\u6548\u679c\uff08\u5982\u6700\u4e0a\u9762\u56fe\u4e8corv_types.gif\u6240\u793a\uff09\u3002\n\n## \u603b\u7ed3\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u5176\u5b9e\u5b9e\u73b0\u4ee3\u7801\u5e76\u4e0d\u590d\u6742\uff0c\u53ea\u7528\u5230\u5e38\u89c1\u7684\u7ee7\u627f\u3001\u5c01\u88c5\u3001\u591a\u6001\u3001\u63a5\u53e3\u3001\u62bd\u8c61\u7c7b\u3001\u6cdb\u578b\uff0c\u6570\u636e\u7ed3\u6784\u53ea\u7528\u5230List\u3002\u539f\u56e0\u4e00\u65b9\u9762\u662f\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u9ad8\u7ea7\u6280\u672f\u81ea\u5df1\u8fd8\u6709\u5f85\u5b66\u4e60\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u7684\u786e\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5177\u5907\u5e38\u89c1\u529f\u80fd\u3001\u7b80\u5355\u6613\u7528\u7684RecyclerView\u5c0f\u6846\u67b6\uff0c\u8fd9\u4e9b\u5c31\u591f\u4e86\u3002\u81ea\u5df1\u5b9e\u73b0\u4e00\u904d\u6216\u8005\u7814\u7a76\u4e00\u904d\u4ee3\u7801\u4f1a\u5bf9RecyclerView\u7684\u539f\u7406\u548c\u7684Java\u57fa\u7840\u6280\u672f\u6709\u8f83\u597d\u7684\u7406\u89e3\u3002\n\nGithub\u5730\u5740\u5982\u4e0b\uff0c\u6b22\u8fce`fork`\u548c`star`\n> https://github.com/rome753/OneRecyclerView\n", "mt_excerpt": "", "title": "\u4f7f\u7528RecyclerView\uff0c\u4e00\u53e5\u4ee3\u7801\u5c31\u591f\u4e86", "dateCreated": "20220719T20:20:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495606.html", "permalink": "https://www.cnblogs.com/rome753/p/16495606.html", "postid": 16495606, "description": "\u5b89\u5353\u4e2d\u4f7f\u7528\u76f8\u673a\u4ece\u6765\u5c31\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u3002\n\nCamera1\u8981\u81ea\u5df1\u7ba1\u7406Camera\u76f8\u673a\u5b9e\u4f8b\uff0c\u8981\u5904\u7406SufraceView\u76f8\u5173\u7684\u4e00\u5806\u4e1c\u897f\uff0c\u8fd8\u6709\u9884\u89c8\u5c3a\u5bf8\u8ddf\u753b\u9762\u5c3a\u5bf8\u7684\u9009\u62e9\uff0c\u9875\u9762\u751f\u547d\u5468\u671f\u5207\u6362\u7b49\u7b49\u95ee\u9898\u3002\u3002\u3002\n\n\u540e\u6765\u63a8\u51fa\u4e86Camera2\uff0c\u4ece[\u5b98\u65b9Demo](https://github.com/googlesamples/android-Camera2Basic)\n\u5c31\u4e0a\u5343\u884c\u4ee3\u7801\u6765\u770b\uff0cCamera2\u5e76\u4e0d\u89e3\u51b3\u7528\u8d77\u6765\u590d\u6742\u7684\u95ee\u9898\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u8c03\u7528\u63a5\u53e3\uff0c\u53ef\u5b9a\u5236\u6027\u66f4\u597d\uff0c\u7ed3\u679c\u5c31\u662f\u5bf9\u666e\u901a\u5f00\u53d1\u8005\u6765\u8bf4\u66f4\u96be\u7528\u4e86\u3002\u3002\u3002\n\n\u7ec8\u4e8eGoogle\u4e5f\u610f\u8bc6\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u63a8\u51fa\u4e86\u6700\u7ec8\u7248CameraX. CameraX\u5b9e\u9645\u4e0a\u8fd8\u662f\u7528\u7684Camera2\uff0c\u4f46\u5b83\u5bf9\u8c03\u7528API\u8fdb\u884c\u4e86\u5f88\u597d\u7684\u5c01\u88c5\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u65b9\u4fbf\u3002\u5b98\u65b9\u6559\u7a0b\u4e5f\u5f88\u8be6\u7ec6\uff0c\u5982\u4e0b\uff1a\n[https://codelabs.developers.google.com/codelabs/camerax-getting-started/#0](https://codelabs.developers.google.com/codelabs/camerax-getting-started/#0)\n\n\u5b98\u65b9\u7528\u7684Kotlin\u4ee3\u7801\uff0c\u6211\u8f6c\u6210\u4e86Java\uff0c\u5176\u5b9e\u7528\u8d77\u6765\u5dee\u4e0d\u591a\u3002\n\n> \u6ce8\u610f\uff1aCameraX\u8ddfCamera2\u4e00\u6837\u6700\u4f4e\u652f\u6301API21\uff0c\u4e5f\u5c31\u662f5.0\u53ca\u4ee5\u4e0a\u3002\n\u5f00\u53d1\u73af\u5883\u7528Android Studio3.3\u53ca\u4ee5\u4e0a\uff0c\u4f9d\u8d56\u5e93\u90fd\u7528androidx\u7684\n\n## 1 \u5bfc\u5165\u4f9d\u8d56\n\u5728app\u7684build.gradle\u4e2d\u52a0\u5165\n\n```java\n\n    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'\n\n    // Use the most recent version of CameraX, currently that is alpha04\n    def camerax_version = \"1.0.0-alpha04\"\n    implementation \"androidx.camera:camera-core:${camerax_version}\"\n    implementation \"androidx.camera:camera-camera2:${camerax_version}\"\n```\n\n## 2 \u5e03\u5c40\u6587\u4ef6\u548c\u6743\u9650\n\u653e\u4e00\u4e2aTextureView\u5c31\u884c\u4e86\n\n```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        tools:context=\".MainActivity\">\n\n    <TextureView\n            android:id=\"@+id/view_finder\"\n            android:layout_width=\"640px\"\n            android:layout_height=\"640px\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintEnd_toEndOf=\"parent\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>\n```\n\u6743\u5728AndroidManifest.xml\u4e2d\u52a0\u5165\u76f8\u673a\u6743\u9650\n```java\n<uses-permission android:name=\"android.permission.CAMERA\" />\n```\n\u5e76\u52a0\u5165\u52a8\u6001\u7533\u8bf7\u6743\u9650\u4ee3\u7801\uff0c\u8fd9\u91cc\u7701\u7565\u6389\uff08\u4f60\u8981\u5728App\u5b89\u88c5\u540e\u624b\u52a8\u6253\u5f00\u76f8\u673a\u6743\u9650\uff09\u3002\n\n\n## 3 \u542f\u52a8\u76f8\u673a\n\u7ed9TextureView\u8bbe\u7f6e\u5e03\u5c40\u53d8\u5316\u7684\u76d1\u542c\uff0c\u7528updateTransform()\u66f4\u65b0\u76f8\u673a\u9884\u89c8\uff0c\u7136\u540estartCamera()\u542f\u52a8\u76f8\u673a\n```java\n\n        TextureView viewFinder = findViewById(R.id.view_finder);\n        viewFinder.addOnLayoutChangeListener(new View.OnLayoutChangeListener() {\n            @Override\n            public void onLayoutChange(View view, int i, int i1, int i2, int i3, int i4, int i5, int i6, int i7) {\n                updateTransform();\n            }\n        });\n\n        viewFinder.post(new Runnable() {\n            @Override\n            public void run() {\n                startCamera();\n            }\n        });\n```\n\n\u66f4\u65b0\u76f8\u673a\u9884\u89c8\uff1a\u4e3b\u8981\u662f\u7ed9TextureView\u8bbe\u7f6e\u4e00\u4e2a\u65cb\u8f6c\u7684\u77e9\u9635\u53d8\u5316\uff0c\u9632\u6b62\u9884\u89c8\u65b9\u5411\u4e0d\u5bf9\n```java\n    private void updateTransform() {\n        Matrix matrix = new Matrix();\n        // Compute the center of the view finder\n        float centerX = viewFinder.getWidth() / 2f;\n        float centerY = viewFinder.getHeight() / 2f;\n\n        float[] rotations = {0,90,180,270};\n        // Correct preview output to account for display rotation\n        float rotationDegrees = rotations[viewFinder.getDisplay().getRotation()];\n\n        matrix.postRotate(-rotationDegrees, centerX, centerY);\n\n        // Finally, apply transformations to our TextureView\n        viewFinder.setTransform(matrix);\n    }\n\n```\n\n\u542f\u52a8\u76f8\u673a\uff1a\u521b\u5efaPreviewConfig\u548cPreview\u8fd9\u4e24\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u9884\u89c8\u56fe\u50cf\u7684\u5c3a\u5bf8\u548c\u6bd4\u4f8b\uff0c\u5728OnPreviewOutputUpdateListener\u56de\u8c03\u4e2d\u7528setSurfaceTexture\u65b9\u6cd5\uff0c\u5c06\u76f8\u673a\u56fe\u50cf\u8f93\u51fa\u5230TextureView\u3002\u6700\u540e\u7528CameraX.bindToLifecycle\u65b9\u6cd5\u5c06\u76f8\u673a\u4e0e\u5f53\u524d\u9875\u9762\u7684\u751f\u547d\u5468\u671f\u7ed1\u5b9a\u3002\n```java\n    private void startCamera() {\n        // 1. preview\n        PreviewConfig previewConfig = new PreviewConfig.Builder()\n                .setTargetAspectRatio(new Rational(1, 1))\n                .setTargetResolution(new Size(640,640))\n                .build();\n\n        Preview preview = new Preview(previewConfig);\n        preview.setOnPreviewOutputUpdateListener(new Preview.OnPreviewOutputUpdateListener() {\n            @Override\n            public void onUpdated(Preview.PreviewOutput output) {\n                ViewGroup parent = (ViewGroup) viewFinder.getParent();\n                parent.removeView(viewFinder);\n                parent.addView(viewFinder, 0);\n\n                viewFinder.setSurfaceTexture(output.getSurfaceTexture());\n                updateTransform();\n            }\n        });\n\n        CameraX.bindToLifecycle(this, preview);\n```\n\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u57fa\u672c\u7684\u76f8\u673a\u9884\u89c8\u529f\u80fd\u3002\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u90fd\u5f88\u7b80\u5355\u660e\u4e86\uff0c\u5bf9\u5916\u53ea\u4f9d\u8d56\u4e00\u4e2aTextureView\u3002\u751f\u547d\u5468\u671f\u81ea\u52a8\u7ed1\u5b9a\uff0c\u8fd9\u610f\u5473\u7740\u4ee3\u7801\u53ef\u4ee5\u5199\u5728\u4e00\u5757\uff0c\u5728\u4e00\u5904\u8c03\u7528\u3002\u4e0d\u50cf\u4ee5\u524d\u8fd9\u91cc\u63d2\u4e00\u6bb5\u4ee3\u7801\uff0c\u90a3\u91cc\u63d2\u4e00\u6bb5\u4ee3\u7801\u3002\n\n\u8fd8\u6709\u6700\u5927\u7684\u597d\u5904\uff0c\u5c31\u662f\u53ef\u6269\u5c55\u6027\u3002\u76f8\u673a\u9884\u89c8\u4f7f\u7528\u4e86PreviewConfig\u548cPreview\u4e24\u4e2a\u5bf9\u8c61\uff0c\u52a0\u5165\u65b0\u7684\u76f8\u673a\u529f\u80fd\u540c\u6837\u662f\u52a0\u4e24\u4e2a\u5bf9\u8c61XXXConfig\u548cXXX\uff0c\u5176\u4ed6\u5730\u65b9\u90fd\u4e0d\u540c\u6539\uff01\n\n\u52a0\u5165\u62cd\u7167\u529f\u80fd\u5c31\u52a0\u5165ImageCaptureConfig\u548cImageCapture\uff0c\u52a0\u5165\u56fe\u50cf\u5206\u6790\u529f\u80fd\u5c31\u52a0\u5165ImageAnalysisConfig\u548cImageAnalysis\uff0c\u975e\u5e38\u65b9\u4fbf\u7edf\u4e00\u3002\n\n## 4 \u62cd\u7167\n\u521b\u5efaImageCaptureConfig\u548cImageCapture\u8fd9\u4e24\u4e2a\u5bf9\u8c61\uff0c\u7528imageCapture.takePicture\u65b9\u6cd5\u4f20\u5165\u76f8\u7247\u4fdd\u5b58\u5730\u5740\u5c31\u884c\u4e86\u3002\u5f53\u7136\u5728\u751f\u547d\u5468\u671f\u7ed1\u5b9a\u4e2d\u4e5f\u52a0\u4e0aimageCapture\u3002\n\n> ImageCaptureConfig\u53ef\u4ee5\u5b9a\u5236\u76f8\u7247\u5c3a\u5bf8\u548c\u957f\u5bbd\u6bd4\u4f8b\uff0c\u8fd9\u91cc\u7684\u5c3a\u5bf8\u548c\u6bd4\u4f8b\u8ddf\u76f8\u673a\u9884\u89c8\u7684\u5c3a\u5bf8\u6bd4\u4f8b\u65e0\u5173\uff0c\u6211\u6d4b\u8bd5\u4f20\u5165\u4efb\u4f55\u6bd4\u4f8b\u90fd\u80fd\u5f97\u5230\u56fe\u7247\u3002\n\n```java\n\n        // 2. capture\n        ImageCaptureConfig imageCaptureConfig = new ImageCaptureConfig.Builder()\n                .setTargetAspectRatio(new Rational(1,1))\n                .setCaptureMode(ImageCapture.CaptureMode.MIN_LATENCY)\n                .build();\n        final ImageCapture imageCapture = new ImageCapture(imageCaptureConfig);\n        viewFinder.setOnLongClickListener(new View.OnLongClickListener() {\n            @Override\n            public boolean onLongClick(View view) {\n                File photo = new File(getExternalCacheDir() + \"/\" + System.currentTimeMillis() + \".jpg\");\n                imageCapture.takePicture(photo, new ImageCapture.OnImageSavedListener() {\n                    @Override\n                    public void onImageSaved(@NonNull File file) {\n                        showToast(\"saved \" + file.getAbsolutePath());\n                    }\n\n                    @Override\n                    public void onError(@NonNull ImageCapture.UseCaseError useCaseError, @NonNull String message, @Nullable Throwable cause) {\n                        showToast(\"error \" + message);\n                        cause.printStackTrace();\n                    }\n                });\n                return true;\n            }\n        });\n\n        CameraX.bindToLifecycle(this, preview, imageCapture);\n```\n\n## 5 \u56fe\u7247\u5206\u6790\n\u56fe\u7247\u5206\u6790\u540d\u5b57\u5f88\u9ad8\u5927\u4e0a\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u56fe\u50cf\u6570\u636e\u56de\u8c03\uff0c\u5b9e\u65f6\u83b7\u53d6\u76f8\u673a\u7684\u56fe\u50cf\u6570\u636e\uff0c\u53ef\u4ee5\u81ea\u5df1\u5904\u7406\u8fd9\u4e9b\u56fe\u50cf\u3002\n\n\u521b\u5efaImageAnalysisConfig\u548cImageAnalysis\u8fd9\u4e24\u4e2a\u5bf9\u8c61\uff0c\u521b\u5efa\u4e00\u4e2aHandlerThread\u7528\u4e8e\u5728\u5b50\u7ebf\u7a0b\u4e2d\u5904\u7406\u6570\u636e\uff0c\u521b\u5efa\u4e00\u4e2aImageAnalysis.Analyzer\u63a5\u53e3\u5b9e\u73b0\u7c7b\uff0c\u5728analyze(ImageProxy imageProxy, int rotationDegrees)\u56de\u8c03\u65b9\u6cd5\u4e2d\u5c31\u80fd\u62ff\u5230\u56fe\u50cf\u6570\u636e\u4e86\u3002\u5f53\u7136ImageAnalysis\u5bf9\u8c61\u4e5f\u8981\u7ed1\u5b9a\u751f\u547d\u5468\u671f\u3002\n\n> \u6211\u8fd9\u91cc\u5206\u6790\u56fe\u50cf\u6570\u636e\u7528\u4e86\u4e4b\u524d\u5199\u7684\u4e00\u4e2a\u5de5\u5177YUVDetectView\uff0c\u6765\u5206\u6790\u56fe\u50cf\u5c5e\u4e8e\u54ea\u79cdYUV420\u683c\u5f0f\u3002\n\n```java\n        // 3. analyze\n        HandlerThread handlerThread = new HandlerThread(\"Analyze-thread\");\n        handlerThread.start();\n\n        ImageAnalysisConfig imageAnalysisConfig = new ImageAnalysisConfig.Builder()\n                .setCallbackHandler(new Handler(handlerThread.getLooper()))\n                .setImageReaderMode(ImageAnalysis.ImageReaderMode.ACQUIRE_LATEST_IMAGE)\n                .setTargetAspectRatio(new Rational(2, 3))\n//                .setTargetResolution(new Size(600, 600))\n                .build();\n\n        ImageAnalysis imageAnalysis = new ImageAnalysis(imageAnalysisConfig);\n        imageAnalysis.setAnalyzer(new MyAnalyzer());\n\n        CameraX.bindToLifecycle(this, preview, imageCapture, imageAnalysis);\n\n\n\n    private class MyAnalyzer implements ImageAnalysis.Analyzer {\n\n        @Override\n        public void analyze(ImageProxy imageProxy, int rotationDegrees) {\n            final Image image = imageProxy.getImage();\n            if(image != null) {\n                Log.d(\"chao\", image.getWidth() + \",\" + image.getHeight());\n                imageView.input(image);\n            }\n        }\n    }\n```\n\n## Github\u5730\u5740\n[https://github.com/rome753/android-YuvTools](https://github.com/rome753/android-YuvTools)\n\uff08CameraX\u4ee3\u7801\u5728camerax\u5305\u4e0b\u9762\uff09\n", "mt_excerpt": "", "title": "\u5f00\u59cb\u4f7f\u7528Android-CameraX", "dateCreated": "20220719T20:19:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495608.html", "permalink": "https://www.cnblogs.com/rome753/p/16495608.html", "postid": 16495608, "description": "## \u65b0\u7248\u4f7f\u7528\u65b9\u6cd5\n\nGithub\u5730\u5740\uff1ahttps://github.com/rome753/ActivityTaskView\n\n1.  \u5b89\u88c5ActivityTaskView release app\uff0c\u542f\u52a8\u5e76\u7ed9\u4e88\u60ac\u6d6e\u7a97\u6743\u9650\nhttps://github.com/rome753/ActivityTaskView/releases\n\u6216\u8005\u4ece [Google Play](https://play.google.com/store/apps/details?id=cc.rome753.activitytask)\u4e0b\u8f7d\u5b89\u88c5\u3002\n\n2.  \u5728\u4f60\u5f00\u53d1\u7684App\u4e2d\u52a0\u5165\u5982\u4e0b\u7c7bhttps://github.com/rome753/ActivityTaskView/blob/master/app/src/main/java/cc/rome753/demo/ActivityTaskHelper.java\n3.  \u5728\u4f60\u5f00\u53d1\u7684App\u7684Application\u7684onCreate()\u4e2d\u52a0\u5165\u4ee3\u7801\n\n```\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        if(BuildConfig.DEBUG) {\n            ActivityTaskHelper.init(this);\n        }\n    }\n```\n4. \u542f\u52a8\u4f60\u7684App\uff0c\u5728ActivityTaskView\u7684\u60ac\u6d6e\u7a97\u4e2d\u80fd\u770b\u5230App\u4e2d\u6240\u6709Activity\u548cFragment\u7684\u751f\u547d\u5468\u671f\u3002\n\n---\n\n\n\n## LaunchMode\u5206\u6790\n\u6709\u4e86\u8fd9\u4e2a\u5de5\u5177\uff0c\u5206\u6790Activity\u7684LaunchMode\u5c31\u5f88\u76f4\u89c2\u4e86\uff0c\u4e00\u56fe\u80dc\u5343\u8a00\u3002\n\n#### standard mode\n\u6807\u51c6\u6a21\u5f0f\uff0c\u542f\u52a8\u76f4\u63a5\u52a0\u5230\u6808\u9876\uff0c\u9500\u6bc1\u540e\u79fb\u9664\u3002\n![s.gif](https://rome753.github.io/cdn/1896166-9152cbf5ff9bef0c.gif)\n\n#### singletop mode\n\u6808\u9876\u552f\u4e00\uff0c\u5982\u679c\u6808\u9876\u5b58\u5728\u5c31\u4e0d\u4f1a\u91cd\u590d\u542f\u52a8\uff0c\u4fdd\u8bc1\u6808\u9876\u4e0d\u4f1a\u6709\u4e24\u4e2a\u76f8\u540c\u7684Activtiy\n![s-to.gif](https://rome753.github.io/cdn/1896166-c19e639a6e851b50.gif)\n\n\n#### singletask mode\n\u6808\u5185\u552f\u4e00\uff0c\u5982\u679c\u6808\u5185\u5b58\u5728\uff0c\u518d\u6b21\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u628a\u5b83\u4e0a\u9762\u7684\u5176\u4ed6Activity\u5168\u90e8\u6e05\u9664\uff08\u8c03\u7528onDestroy\uff09\n![s-ta.gif](https://rome753.github.io/cdn/1896166-4cb07f2d2a8bdb3f.gif)\n\n\n#### singleinstance mode\n\u72ec\u5360\u4e00\u6808\uff0c\u542f\u52a8\u65f6\u4f1a\u5efa\u7acb\u65b0\u6808\u5207\u6362\u8fc7\u53bb\uff0c\u5982\u679c\u542f\u52a8\u4e86\u666e\u901aActivity\u53c8\u4f1a\u5207\u6362\u56de\u539f\u6765\u7684\u5171\u4eab\u6808\uff08\u65b0\u6808\u4ecd\u7136\u5b58\u5728\uff0c\u4f1a\u5728\u6808\u5185\u552f\u4e00\u7684Activity\u7ed3\u675f\u65f6\u5173\u95ed\uff09\n![s-in.gif](https://rome753.github.io/cdn/1896166-b95c16f731199038.gif)\n\n\n---\n\n\n# \u6280\u672f\u5b9e\u73b0\n\nActivity\u662f\u5b89\u5353\u5f00\u53d1\u4e2d\u6700\u91cd\u8981\u7684\u5143\u7d20\uff0c\u56e0\u4e3aAPP\u7edd\u5927\u90e8\u5206\u4f7f\u7528\u90fd\u662f\u64cd\u4f5c\u5b83\u3002\u67d0\u4e2a\u5e94\u7528\u7684Activity\u90fd\u662f\u653e\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u6808\u4e2d\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u67e5\u770b\u4efb\u52a1\u6808\u548c\u6808\u4e2d\u7684\u6d3b\u52a8\u3002\n\n1. ADB\u547d\u4ee4\n\n> adb shell dumpsys activity activities\n\n\u8be5\u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97\u624b\u673a\u4e2d\u6240\u6709\u6d3b\u52a8\u7684\u8be6\u7ec6\u6570\u636e\uff0c\u7136\u800c\u8981\u4ece\u4e2d\u627e\u5230\u4f60\u60f3\u5206\u6790\u7684\u6d3b\u52a8\u6709\u70b9\u9ebb\u70e6\uff0c\u800c\u4e14\u5fc5\u987b\u8fde\u7740\u7535\u8111\u3002\n\n2. \u4f7f\u7528ActivityManager\n```java\nActivityManager am = (ActivityManager)getSystemService(Context.ACTIVITY_SERVICE);\nList<RunningTaskInfo> runningTaskInfoList =  am.getRunningTasks(10);\nfor (RunningTaskInfo runningTaskInfo : runningTaskInfoList) {\n    log(\"id: \" + runningTaskInfo.id);\n    log(\"description: \" + runningTaskInfo.description);\n    log(\"number of activities: \" + runningTaskInfo.numActivities);\n    log(\"topActivity: \" + runningTaskInfo.topActivity);\n    log(\"baseActivity: \" + runningTaskInfo.baseActivity.toString());\n}\n```\n\n\u8be5\u65b9\u6cd5\u53ea\u80fd\u83b7\u53d6\u5230\u4efb\u52a1\u6808\u7684\u6808\u9876\u548c\u6808\u5e95\u7684\u6d3b\u52a8\uff0c\u64cd\u4f5c\u8d77\u6765\u4e5f\u9ebb\u70e6\u3002\n\n\u603b\u4e4b\uff0c\u76ee\u524d\u8fd8\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\u80fd\u76f4\u89c2\u5730\u89c2\u5bdfActivity\u4efb\u52a1\u6808\u548cActivity\u4e2d\u7684Fragment\uff0c\u50cf\u4e0b\u56fe\u8fd9\u6837\uff1a\n![overview.gif](https://rome753.github.io/cdn/1896166-b2993bbabe437988.gif)\n\n\n## \u539f\u7406\n**Android4.0**\u4ee5\u540eApplication\u652f\u6301`ActivityLifecycleCallbacks`\u548c`FragmentLifecycleCallbacks`\u7684\u751f\u547d\u5468\u671f\u56de\u8c03\u3002\n\n### ActivityLifecycleCallbacks\n```java\napplication.registerActivityLifecycleCallbacks(new Application.ActivityLifecycleCallbacks() {\n            @Override\n            public void onActivityCreated(Activity activity, Bundle savedInstanceState) {\n            }\n\n            @Override\n            public void onActivityStarted(Activity activity) {\n            }\n\n            @Override\n            public void onActivityResumed(Activity activity) {\n            }\n\n            @Override\n            public void onActivityPaused(Activity activity) {\n            }\n\n            @Override\n            public void onActivityStopped(Activity activity) {\n            }\n\n            @Override\n            public void onActivitySaveInstanceState(Activity activity, Bundle outState) {\n            }\n\n            @Override\n            public void onActivityDestroyed(Activity activity) {\n            }\n        });\n```\n\u5728Application\u4e2d\u6ce8\u518c\u8fd9\u4e2a\u56de\u8c03\uff0c\u5c31\u80fd\u76d1\u542c\u5230\u6240\u6709Activity\u7684\u751f\u547d\u5468\u671f\u4e86\uff0c\u518d\u4e5f\u4e0d\u7528\u5f80\u4e00\u4e2a\u4e2aActivity\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5\u91cc\u9762\u52a0log\u4e86\uff0c\u5728\u8fd9\u4e2a\u56de\u8c03\u91cc\u7edf\u4e00\u641e\u5b9a\u3002  \n\n\u6709\u4e86\u56de\u8c03\u76d1\u542c\uff0c\u5c31\u53ef\u4ee5\u4eceAPP\u542f\u52a8\u5f00\u59cb\uff0c\u7ba1\u7406\u5efa\u7acb\u7684\u6bcf\u4e00\u4e2aActivity\uff0c\u800cActivity\u7684getTaskId()\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5230\u8fd9\u4e2aActivity\u5c5e\u4e8e\u54ea\u4e2a\u4efb\u52a1\u6808\u3002  \n\nActivity\u548c\u4efb\u52a1\u6808\u90fd\u6709\u4e86\uff0c\u540e\u9762\u53ea\u662f\u60f3\u4e2a\u65b9\u6cd5\u5c55\u793a\u7684\u95ee\u9898\u3002\n\n### FragmentLifecycleCallbacks\n```java\nprivate class FragmentLifecycleImpl extends FragmentManager.FragmentLifecycleCallbacks{\n\n        @Override\n        public void onFragmentPreAttached(FragmentManager fm, Fragment f, Context context) {\n        }\n\n        @Override\n        public void onFragmentAttached(FragmentManager fm, Fragment f, Context context) {\n        }\n\n        @Override\n        public void onFragmentCreated(FragmentManager fm, Fragment f, Bundle savedInstanceState) {\n        }\n\n        @Override\n        public void onFragmentActivityCreated(FragmentManager fm, Fragment f, Bundle savedInstanceState) {\n        }\n\n        @Override\n        public void onFragmentViewCreated(FragmentManager fm, Fragment f, View v, Bundle savedInstanceState) {\n        }\n\n        @Override\n        public void onFragmentStarted(FragmentManager fm, Fragment f) {\n            handleFragment(f);\n        }\n\n        @Override\n        public void onFragmentResumed(FragmentManager fm, Fragment f) {\n        }\n\n        @Override\n        public void onFragmentPaused(FragmentManager fm, Fragment f) {\n        }\n\n        @Override\n        public void onFragmentStopped(FragmentManager fm, Fragment f) {\n        }\n\n        @Override\n        public void onFragmentSaveInstanceState(FragmentManager fm, Fragment f, Bundle outState) {\n        }\n\n        @Override\n        public void onFragmentViewDestroyed(FragmentManager fm, Fragment f) {\n        }\n\n        @Override\n        public void onFragmentDestroyed(FragmentManager fm, Fragment f) {\n        }\n\n        @Override\n        public void onFragmentDetached(FragmentManager fm, Fragment f) {\n        }\n    }\n```\n\u540c\u7406\uff0c\u5728Activity\u542f\u52a8\u65f6\u53ef\u4ee5\u7ed9\u5b83\u6ce8\u518cFragmentLifecycleCallbacks\u6765\u76d1\u542cActivity\u4e2dFragment\u7684\u53d8\u5316\u3002\u4e0d\u540c\u4e8eActivity\u5728Task\u4e2d\u662f\u7ebf\u6027\u7684\u6570\u636e\u7ed3\u6784\uff0cFragment\u5728Activity\u4e2d\u662f\u6811\u72b6\u7684\uff1a\u4e00\u4e2aActivity\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2aFragment\uff0c\u6bcf\u4e2aFragment\u53c8\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u5b50Fragment\u3002\u56e0\u6b64\u672c\u5730\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6811FTree\u3002\n\nFTree.java\n```java\npublic class FTree {\n\n    private String tab1 = \"\" + '\\u2502';            // |\n    private String tab2 = \"\" + '\\u2514' + '\\u2500'; // |_\n    private String tab3 = \"\" + '\\u251c' + '\\u2500'; // |-\n\n    private Node root;\n\n    public FTree() {\n        root = new Node(\"\");\n    }\n\n    public void add(List<String> list, String lifecycle) {\n        lifeMap.put(list.get(0), lifecycle);\n        Node node = root;\n        while (!list.isEmpty()) {\n            String s = list.remove(list.size() - 1);\n            if (!node.children.containsKey(s)) {\n                Node newNode = new Node(s);\n                node.children.put(s, newNode);\n\n            }\n            node = node.children.get(s);\n        }\n    }\n\n    public void remove(List<String> list) {\n        if (list.isEmpty()) return;\n        lifeMap.remove(list.get(0));\n        Node node = root;\n        while (list.size() > 1) {\n            String s = list.remove(list.size() - 1);\n            if (node.children.containsKey(s)) {\n                node = node.children.get(s);\n            } else return;\n        }\n        String last = list.get(list.size() - 1);\n        node.children.remove(last);\n    }\n\n    public List<String> convertToList(){\n        List<String> res = new ArrayList<>();\n        convert(res, root, \"\", true);\n        return res;\n    }\n\n    private void convert(List<String> res, Node node, String pre, boolean end){\n        if(node != root){\n            String s = pre + (end ? tab2 : tab3) + node.name;\n            res.add(s);\n        }\n        int i = 0;\n        for(Map.Entry<String, Node> entry : node.children.entrySet()){\n            i++;\n            boolean subEnd = i == node.children.size();\n            String subPre = pre + (node == root ? \"\" : (end ? \"        \" : tab1 + \"   \"));\n            convert(res, entry.getValue(), subPre, subEnd);\n        }\n    }\n\n    private static class Node {\n\n        String name;\n        HashMap<String, Node> children;\n\n        Node(String name) {\n            this.name = name;\n            this.children = new HashMap<>();\n        }\n    }\n\n    public String getLifecycle(String name) {\n        return lifeMap.get(name);\n    }\n\n    private HashMap<String, String> lifeMap = new HashMap<>();\n    public void updateLifecycle(String key, String value) {\n        lifeMap.put(key, value);\n    }\n}\n```\n\u5176\u4e2d\u5b50Fragment\u524d\u9762\u52a0\u4e0a\u5236\u8868\u7b26\u53f7\uff0c\u5c55\u793a\u5230UI\u65f6\u4fbf\u4e8eTextview\u6587\u672c\u5bf9\u9f50\u3002\n\n### \u60ac\u6d6e\u7a97\n\u8981\u5728\u5f00\u53d1\u4e2d\u76f4\u89c2\u3001\u52a8\u6001\u5730\u5c55\u793a\u4efb\u52a1\u6808\uff0c\u540c\u65f6\u4e0d\u80fd\u5f71\u54cd\u5f53\u524d\u9875\u9762\uff0c\u4f7f\u7528\u60ac\u6d6e\u7a97\u662f\u6700\u597d\u7684\u65b9\u6cd5\u3002\n```java\nWindowManager windowManager = (WindowManager)app.getSystemService(Context.WINDOW_SERVICE);\nWindowManager.LayoutParams params = new WindowManager.LayoutParams();\nparams.type = WindowManager.LayoutParams.TYPE_PHONE;\nparams.format = PixelFormat.RGBA_8888;\nparams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;\nparams.width = WindowManager.LayoutParams.WRAP_CONTENT;\nparams.height = WindowManager.LayoutParams.WRAP_CONTENT;\nparams.gravity = Gravity.START | Gravity.TOP;\nparams.x = 0;\nparams.y = app.getResources().getDisplayMetrics().heightPixels;\nwindowManager.addView(activityTaskView, params);\n\n```\n\u6dfb\u52a0\u60ac\u6d6e\u7a97\u7528\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4e86\uff0c\u52a0\u4e0a\u60ac\u6d6e\u7a97\u6743\u9650\u3002\n```xml\n<uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" />\n```\n\n\u60ac\u6d6e\u7a97\u52a0\u4e0a\u89e6\u6478\u79fb\u52a8\uff0c\u81ea\u52a8\u8d34\u8fb9\uff0c\u70b9\u51fb\u5207\u6362\u6700\u5c0f\u5316\u548c\u957f\u6309\u56de\u5230\u4e3b\u754c\u9762\u3002\n```java\n\n    float mInnerX;\n    float mInnerY;\n    long downTime;\n\n    @Override\n        public boolean onTouchEvent(MotionEvent event) {\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                downTime = System.currentTimeMillis();\n                mInnerX = event.getX();\n                mInnerY = event.getY();\n                postDelayed(this, 300);\n                break;\n            case MotionEvent.ACTION_MOVE:\n                float x = event.getRawX();\n                float y = event.getRawY();\n                WindowManager.LayoutParams params = (WindowManager.LayoutParams) getLayoutParams();\n                params.x = (int) (x - mInnerX);\n                params.y = (int) (y - mInnerY - mStatusHeight);\n                updateLayout(params);\n\n                if(Math.abs(event.getX() - mInnerX) > 20\n                        || Math.abs(event.getY() - mInnerY) > 20) {\n                    removeCallbacks(this);\n                }\n                break;\n            case MotionEvent.ACTION_UP:\n                removeCallbacks(this);\n                if(System.currentTimeMillis() - downTime < 100\n                        && Math.abs(event.getX() - mInnerX) < 20\n                        && Math.abs(event.getY() - mInnerY) < 20) {\n                    doClick();\n                }\n                moveToBorder();\n                break;\n\n        }\n        return true;\n    }\n\n    private void doClick() {\n        boolean visible = mTaskView.getVisibility() == VISIBLE;\n        mTaskView.setVisibility(visible ? GONE : VISIBLE);\n        mTinyView.setVisibility(!visible ? GONE : VISIBLE);\n    }\n\n    private void doLongClick() {\n        Intent intent = new Intent(getContext().getApplicationContext(), MainActivity.class);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        getContext().getApplicationContext().startActivity(intent);\n    }\n\n    private void updateLayout(WindowManager.LayoutParams params){\n        WindowManager windowManager = (WindowManager) getContext().getSystemService(Context.WINDOW_SERVICE);\n        if(windowManager != null) {\n            windowManager.updateViewLayout(this, params);\n        }\n    }\n\n    private void moveToBorder() {\n        WindowManager.LayoutParams p = (WindowManager.LayoutParams) getLayoutParams();\n        Log.d(\"chao\", \"x \" + p.x + \" \" + ((mScreenWidth - getWidth()) / 2));\n\n        if(p.x <= (mScreenWidth - getWidth()) / 2) { // move left\n            p.x = 0;\n        } else { // move right\n            p.x = mScreenWidth;\n        }\n        updateLayout(p);\n    }\n\n```\n\n### ActivityTaskView\u7684\u89c6\u56fe\n![overview.png](https://rome753.github.io/cdn/1896166-4456869f69cb557f.png)\n\n\u89c6\u56fe\u5206\u4e3a\u4e09\u5c42\uff1a\n\u6700\u5916\u5c42\u662fActivityTask\u6d3b\u52a8\u6808\uff0c\u5b83\u662f\u4eceActivity\u4e2d\u53d6\u5f97\u7684\u3002\u4e0d\u540c\u7684App\u81ea\u7136\u662f\u4e0d\u540c\u7684\u6808\uff08\u5305\u540d\u4e0d\u540c\uff09\uff0c\u4e00\u4e2aApp\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u6808\uff08\u5305\u540d\u76f8\u540c\uff0chashcode\u4e0d\u540c\uff09\uff1b\n\u4e2d\u95f4\u5c42\u662f\u6d3b\u52a8\u6808\u4e2d\u7684Activity\uff0c\u5728\u6bcf\u4e2a\u6808\u4e2d\u662f\u7ebf\u6027\u6392\u5217\u7684\uff1b\n\u6700\u5185\u5c42\u662fAcitivity\u4e2d\u7684Fragment\uff0c\u4e00\u4e2aActivity\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2aFragment\uff0c\u4e00\u4e2aFragment\u4e2d\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u5b50Fragment\uff0c\u56e0\u6b64\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6811\u6765\u663e\u793a\u3002\n\n> \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u80fd\u51c6\u786e\u5730\u8868\u793a\u5f53\u524dAPP\u7684\u6d3b\u52a8\u6808\u548cFragment\u3002\u9664\u4e86APP\u88ab\u5f02\u5e38\u6740\u6b7b\uff0c\u6b64\u65f6\u4e0d\u4f1a\u6709\u751f\u547d\u5468\u671f\u56de\u8c03\uff0c\u60ac\u6d6e\u7a97\u4e5f\u4e0d\u4f1a\u5237\u65b0\u3002\n\n\n### \u5ef6\u65f6\u6d88\u606f\u961f\u5217\n\u5f88\u591a\u65f6\u5019Activity\u7684\u751f\u547d\u5468\u671f\u8f6c\u6362\u592a\u5feb\uff0c\u6bd4\u5982\u4eceonStart\u5230onPause\uff0c\u6216\u4ece\u4e00\u4e2aActivity\u7684onPause\u5230\u53e6\u4e00\u4e2aActivity\u7684onResume\uff0c\u5982\u679c\u5b9e\u65f6\u628a\u8fd9\u4e9b\u53d8\u5316\u53cd\u6620\u5230ActivityTaskView\u4e0a\uff0c\u5c31\u5f88\u96be\u770b\u6e05\u4e2d\u95f4\u7684\u53d8\u5316\u8fc7\u7a0b\u3002\u56e0\u6b64\u5728\u65b0\u7248\u672c\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5ef6\u65f6\u6d88\u606f\u961f\u5217\uff0c\u601d\u8def\u5982\u4e0b\uff1a\n\u751f\u547d\u5468\u671f\u4ea7\u751f\u65f6\uff0c\u5148\u5c06\u5bf9\u5e94\u7684\u4fe1\u606f\u6dfb\u52a0\u5230\u4e00\u4e2aQueue\u961f\u5217\u4e2d\uff0c\u7528\u4e00\u4e2aHandler\u4ece\u961f\u5217\u4e2d\u53d6\u6d88\u606f\uff0c\u5982\u679c\u672c\u6b21\u53d6\u6d88\u606f\u8ddd\u4e0a\u4e00\u6b21\u53d6\u6d88\u606f\u7684\u95f4\u9694\u65f6\u95f4\u5c0f\u4e8e\u89c4\u5b9aDELAY\uff0c\u90a3\u4e48\u5c31\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u91cd\u65b0\u53d6\u3002\u6ee1\u8db3\u65f6\u95f4\u95f4\u9694\u624d\u628a\u751f\u547d\u5468\u671f\u53cd\u6620\u5230\u754c\u9762\u4e0a\u3002\n```java\n    private static class QueueHandler extends Handler {\n\n        private Queue<LifecycleInfo> queue;\n        private long lastTime;\n\n        QueueHandler() {\n            super(Looper.getMainLooper());\n            lastTime = 0;\n            queue = new LinkedList<>();\n        }\n\n        void send(LifecycleInfo info) {\n            queue.add(info);\n            sendEmptyMessage(0);\n        }\n\n        @Override\n        public void handleMessage(Message msg) {\n            if (System.currentTimeMillis() - lastTime < interval) {\n                sendEmptyMessageDelayed(0, interval / 5);\n            } else {\n                lastTime = System.currentTimeMillis();\n                LifecycleInfo info = queue.poll();\n                if (info != null && activityTaskView != null) {\n                    if (info.fragments != null) {\n                        if (info.lifecycle.contains(\"PreAttach\")) {\n                            activityTaskView.addF(info);\n                        } else if (info.lifecycle.contains(\"Detach\")) {\n                            activityTaskView.removeF(info);\n                        } else {\n                            activityTaskView.updateF(info);\n                        }\n                    } else {\n                        if (info.lifecycle.contains(\"Create\")) {\n                            activityTaskView.add(info);\n                        } else if (info.lifecycle.contains(\"Destroy\")) {\n                            activityTaskView.remove(info);\n                        } else {\n                            activityTaskView.update(info);\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n```\n\n## \u5e7f\u64ad\u89e3\u8026\n\u5982\u679c\u6bcf\u4e2aApp\u89c2\u5bdf\u751f\u547d\u5468\u671f\u90fd\u8981\u52a0\u4f9d\u8d56\u5e93\u3001\u7533\u8bf7\u60ac\u6d6e\u7a97\u6743\u9650\u4f1a\u5f88\u9ebb\u70e6\uff0c\u5bf9\u4e8e\u4e00\u4e2aApp\u6765\u8bf4\uff0c\u6700\u4e3b\u8981\u7684\u662f\u66b4\u9732\u5b83\u7684\u751f\u547d\u5468\u671f\uff0c\u60ac\u6d6e\u7a97\u5c55\u793a\u5b8c\u5168\u53ef\u4ee5\u7edf\u4e00\u4ea4\u7ed9\u53e6\u4e00\u4e2aApp\u5904\u7406\uff0c\u8fd9\u6837\u5bf9\u88ab\u89c2\u5bdfApp\u8026\u5408\u6700\u5c0f\u3002\n\n\u57fa\u4e8e\u8fd9\u6837\u7684\u601d\u8def\uff0c\u5c06\u539f\u6765\u7684ActivityTaskView\u4f9d\u8d56\u5e93\u6253\u5305\u6210\u72ec\u7acb\u7684App\uff0c\u5b83\u8d1f\u8d23\u63a5\u6536\u5176\u4ed6App\u7684\u751f\u547d\u5468\u671f\uff0c\u5c55\u793a\u5230\u81ea\u5df1\u7684\u60ac\u6d6e\u7a97\u4e0a\u3002\u8fd9\u5c31\u6d89\u53ca\u5230\u4e24\u4e2aApp\u4e4b\u95f4\u7684\u8de8\u8fdb\u7a0b\u901a\u4fe1\u4e86\uff0c\u8fd9\u4e2a\u9700\u6c42\u4e2d\u53ea\u9700\u8981\u5355\u5411\u901a\u4fe1\uff0c\u4f7f\u7528\u5e7f\u64ad\u662f\u6700\u65b9\u4fbf\u7684\u3002\u88ab\u89c2\u5bdfApp\u6ce8\u518c\u751f\u547d\u5468\u671f\u76d1\u542c\uff0c\u5e76\u53d1\u9001\u5e7f\u64ad\u7ed9ActivityTaskView\uff0cActivityTaskView\u63a5\u6536\u548c\u89e3\u6790\u5e7f\u64ad\uff0c\u7136\u540e\u5237\u65b0\u60ac\u6d6e\u7a97UI\u3002\n\n\u73b0\u5728\u5728\u624b\u673a\u4e2d\u88c5\u4e86ActivityTaskView\u7684\u524d\u63d0\u4e0b\uff0c\u4f60\u5f00\u53d1\u7684App\u4e0d\u7528\u6dfb\u52a0\u4f9d\u8d56\u5e93\uff0c\u4e5f\u4e0d\u7528\u7533\u8bf7\u60ac\u6d6e\u7a97\u6743\u9650\uff0c\u5b9e\u9645\u4e0a\u53ea\u8981\u52a0\u4e00\u4e2a\u53d1\u9001\u5e7f\u64ad\u7684\u65b9\u6cd5\uff0c\u5c31\u80fd\u89c2\u5bdf\u5b83\u7684\u751f\u547d\u5468\u671f\u4e86\u3002\n\n## View\u7f13\u5b58\u6c60\n\u52a0\u5165Fragment\u4e4b\u540e\uff0c\u7531\u4e8e\u6bcf\u4e2aFragment\u5c31\u670913\u4e2a\u751f\u547d\u5468\u671f\uff0c\u751f\u547d\u5468\u671f\u5237\u65b0\u53d8\u5f97\u975e\u5e38\u9891\u7e41\uff0c\u6bcf\u6b21\u5237\u65b0\u91cd\u5efa\u89c6\u56fe\u4f1a\u91cd\u590d\u521b\u5efa\u5f88\u591aView\uff0c\u975e\u5e38\u5f71\u54cdActivityTaskView\u7684\u6027\u80fd\u548c\u8017\u7535\u3002\u8003\u8651\u5230\u89c6\u56fe\u4e2d\u4e3b\u8981\u90fd\u662fTextview\uff0c\u5237\u65b0\u65f6\u5b83\u4eec\u4ec5\u4ec5\u662f\u989c\u8272\u6587\u672c\u7b49\u5c5e\u6027\u6709\u4e00\u4e9b\u53d8\u5316\uff0c\u6ca1\u5fc5\u8981\u91cd\u65b0\u521b\u5efa\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7f13\u5b58\u6c60\u628a\u5b83\u4eec\u7f13\u5b58\u8d77\u6765\u3002\u89c6\u56fe\u9500\u6bc1\u65f6\u5c06\u5b83\u4eec\u4fdd\u5b58\u5230ViewPool\u4e2d\uff0c\u89c6\u56fe\u91cd\u5efa\u65f6\u518d\u4eceViewPool\u4e2d\u53d6\u51fa\u6765\u4f7f\u7528\u3002\n\nViewPool.java\n```java\npublic class ViewPool extends Observable {\n\n    LinkedList<ATextView> pool = new LinkedList<>();\n    HashMap<String,FragmentTaskView> map = new HashMap<>();\n\n    private static ViewPool factory = new ViewPool();\n    public static ViewPool get() {\n        return factory;\n    }\n\n    public void recycle(ViewGroup viewGroup) {\n        if(viewGroup != null) {\n            for(int i = 0; i < viewGroup.getChildCount(); i++) {\n                View view = viewGroup.getChildAt(i);\n                if(view instanceof ATextView) {\n                    AUtils.removeParent(view);\n                    view.setTag(null);\n                    pool.add((ATextView) view);\n                } else if(view instanceof FragmentTaskView) {\n                    // don't recycle\n                } else if(view instanceof ViewGroup) {\n                    recycle((ViewGroup) view);\n                }\n            }\n        }\n    }\n\n    public ATextView getOne(Context context) {\n        ATextView view;notifyObservers();\n        if(pool.isEmpty()) {\n            view = new ATextView(context);\n            addObserver(view);\n        } else {\n            view = pool.remove();\n        }\n        return view;\n    }\n\n    public void notifyLifecycleChange(LifecycleInfo info) {\n        setChanged();\n        notifyObservers(info);\n    }\n\n\n    public FragmentTaskView getF(String activity) {\n        return map.get(activity);\n    }\n\n    public FragmentTaskView addF(Context context, String activity) {\n        FragmentTaskView view = new FragmentTaskView(context);\n        map.put(activity, view);\n        return view;\n    }\n\n    public void removeF(String activity) {\n        map.remove(activity);\n    }\n\n    public void clearF() {\n        map.clear();\n    }\n}\n\n```\n", "mt_excerpt": "", "title": "ActivityTaskView--\u76f4\u89c2\u7684Activity\u4efb\u52a1\u6808\u548cLaunchMode\u5206\u6790\u5de5\u5177", "dateCreated": "20220719T20:19:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495603.html", "permalink": "https://www.cnblogs.com/rome753/p/16495603.html", "postid": 16495603, "description": "# \u7b80\u4ecb\nActivity\u662f\u56db\u5927\u7ec4\u4ef6\u4e2d\u6700\u91cd\u8981\u7684\u4e00\u4e2a\uff0c\u4e5f\u662f\u5e73\u65f6\u5f00\u53d1\u4e2d\u63a5\u89e6\u6700\u591a\u7684\u3002\u4e0eActivity\u542f\u52a8\u884c\u4e3a\u76f8\u5173\u7684\u5c31\u662f\u5b83\u7684\u542f\u52a8\u6a21\u5f0f\uff0cStandard\u3001SingleTop\u3001SingleTask\u3001SingleInstance\u8fd94\u79cdlaunchMode\u76f8\u4fe1\u5927\u5bb6\u4e0d\u964c\u751f\uff0c\u5982\u679c\u4e0d\u592a\u719f\u6089\u53ef\u4ee5\u770b\u8fd9\u91cc\uff1a\n> https://www.jianshu.com/p/c34483bb5c0f\n\nOK\uff0c\u719f\u6089\u4e864\u79cdlaunchMode\u540e\u76f8\u4fe1\u4f60\u5df2\u7ecf\u5bf9Activity\u4efb\u52a1\u6808\u6709\u4e00\u4e9b\u7406\u89e3\u4e86\uff0c\u80fd\u5e94\u5bf9\u4e00\u4e9b\u5e38\u89c1\u7684\u5f00\u53d1\u573a\u666f\u4e86\u3002\u7136\u800c\uff0c\u9664\u4e864\u79cdlaunchMode\uff0c\u8fd8\u6709\u66f4\u590d\u6742\u7684\u63a7\u5236Activity\u884c\u4e3a\u7684\u65b9\u5f0f\uff0c\u90a3\u5c31\u662f\u7ed9\u542f\u52a8Activity\u7684Intent\u6dfb\u52a0flag\uff0c\u4f7f\u7528 *Intent.addFlags(int flags)* \u65b9\u6cd5\u3002\u770b\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u603b\u5171\u670920\u79cd\uff1a\n```java\n        Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT,\n        Intent.FLAG_ACTIVITY_CLEAR_TASK,\n        Intent.FLAG_ACTIVITY_CLEAR_TOP,\n        Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET,\n        Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS,\n        Intent.FLAG_ACTIVITY_FORWARD_RESULT,\n        Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY,\n        Intent.FLAG_ACTIVITY_LAUNCH_ADJACENT,\n        Intent.FLAG_ACTIVITY_MULTIPLE_TASK,\n        Intent.FLAG_ACTIVITY_NEW_DOCUMENT,\n        Intent.FLAG_ACTIVITY_NEW_TASK,\n        Intent.FLAG_ACTIVITY_NO_ANIMATION,\n        Intent.FLAG_ACTIVITY_NO_HISTORY,\n        Intent.FLAG_ACTIVITY_NO_USER_ACTION,\n        Intent.FLAG_ACTIVITY_PREVIOUS_IS_TOP,\n        Intent.FLAG_ACTIVITY_REORDER_TO_FRONT,\n        Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED,\n        Intent.FLAG_ACTIVITY_RETAIN_IN_RECENTS,\n        Intent.FLAG_ACTIVITY_SINGLE_TOP,\n        Intent.FLAG_ACTIVITY_TASK_ON_HOME,\n```\n\u8fd9\u4e48\u591a\u4f30\u8ba1\u5927\u5bb6\u4e00\u770b\u5c31\u6655\u4e86\uff0c\u6211\u4e00\u5f00\u59cb\u4e5f\u662f\u8fd9\u6837\u3002\u4e0d\u8fc7\uff0c\u4ed4\u7ec6\u770b\u6bcf\u4e00\u6761\u7684\u6587\u6863\uff0c\u628a\u5b83\u6dfb\u52a0\u5230\u4f60\u8981\u542f\u52a8\u7684Activity\u4e0a\uff0c\u7136\u540e\u89c2\u5bdfActivity\u7684\u884c\u4e3a\uff0c\u8fd9\u6837\u5c31\u5bb9\u6613\u5f04\u660e\u767d\u5b83\u7684\u542b\u4e49\u3002\n\n# \u76f8\u5173\u6982\u5ff5\n\u5728\u5206\u6790\u5177\u4f53\u7684flag\u4e4b\u524d\uff0c\u4ecb\u7ecd\u4e00\u4e9bActivity\u4efb\u52a1\u6808\u76f8\u5173\u7684\u6982\u5ff5\uff1aActivity\u3001task\u3001tasks\u3001recent tasks list\u3002\u8fd9\u4e9b\u6982\u5ff5\u90fd\u662f\u62bd\u8c61\u7684\uff0c\u9664\u4e86Activity\u548crecent tasks list\u770b\u5f97\u89c1\u4e4b\u5916\uff0c\u5176\u4ed6\u90fd\u662f\u770b\u4e0d\u89c1\u6478\u4e0d\u7740\u7684\u3002\u5982\u679c\u6ca1\u6709\u76f4\u89c2\u7684\u89c6\u89c9\u611f\u53d7\uff0c\u5373\u4f7f\u6211\u8bf4\u5f97\u5929\u82b1\u4e71\u5760\u4f60\u4e5f\u53ef\u80fd\u8fd8\u662f\u4e91\u91cc\u96fe\u91cc\uff0c\u800c\u6709\u4e86\u56fe\u751a\u81f3\u52a8\u753b\u76f4\u63a5\u5c55\u793a\u5b83\u4eec\u5c31\u4e0d\u4e00\u6837\u4e86\u3002\u4e0b\u9762\u8fd9\u4e2a\u5de5\u5177\u80fd\u5f88\u597d\u5730\u5e2e\u52a9\u6211\u4eec\uff1a\n> https://github.com/rome753/ActivityTaskView\n\n\u6709\u4e86ActivityTaskView\uff0c\u5c31\u80fd\u7ed3\u5408\u56fe\u6765\u5206\u6790\u4e86\u3002\n\n### 1. Activity \u6d3b\u52a8\uff0c\u8fd9\u4e2a\u5c31\u4e0d\u7528\u89e3\u91ca\u4e86\n\n### 2. task \u4efb\u52a1\n![task.png](http://upload-images.jianshu.io/upload_images/1896166-2dbdcb376656571e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\u5b83\u662f\u5e94\u7528\u4e2d\u7684\u653e\u7f6e\u6d3b\u52a8\u7684\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6808\u7684\u7ed3\u6784\u3002\u6808\u9876\u7684\u662f\u6700\u4e0a\u9762\u7684\u6d3b\u52a8\uff0c\u4e5f\u5c31\u662f\u7528\u6237\u76f4\u63a5\u770b\u5230\u7684\u9875\u9762\uff0c\u9876\u90e8\u4ee5\u4e0b\u7684\u6d3b\u52a8\u90fd\u5904\u4e8eonStop\u72b6\u6001\uff08\u5982\u679c\u662f\u53ef\u89c1\u7684\uff0c\u90a3\u4e48\u5904\u4e8eonPause\u72b6\u6001\uff09\u3002\u4e00\u822c\u8fde\u7eed\u6309\u8fd4\u56de\u952e\u80fd\u81ea\u9876\u5411\u4e0b\u9500\u6bc1\u6d3b\u52a8\u3002\u4e0a\u56fe\u4e2d\u7684\u60ac\u6d6e\u7a97\u8868\u793a\u4e00\u4e2a\u4efb\u52a1\uff0c\u5728\u8fd9\u4e2a\u4efb\u52a1\u4e2d\u542f\u52a8\u4e8620\u591a\u4e2a\u6d3b\u52a8\u3002\n\n### 3. tasks \u4e00\u4e2a\u5e94\u7528\u7684\u6240\u6709\u4efb\u52a1\n![tasks.png](http://upload-images.jianshu.io/upload_images/1896166-a5c960f61ee9a78b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\u867d\u7136\u5355\u4e2atask\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\u5e94\u7528\uff0c\u4f46\u662f\u4e00\u4e2a\u5e94\u7528\u53ef\u4ee5\u6709\u591a\u4e2atask\uff0c\u521b\u5efa\u65b0\u7684task\u6709\u597d\u51e0\u79cd\u65b9\u6cd5\u3002\u4e0a\u56fe\u4e2d\u7684\u60ac\u6d6e\u7a97\u7684\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u4efb\u52a1\uff0c\u5728\u8fd9\u4e2a\u5e94\u7528\u4e2d\u4e00\u5171\u521b\u5efa\u4e86\u4e09\u4e2a\u4efb\u52a1\u3002\n\n### 4. recent tasks list \u6700\u8fd1\u4efb\u52a1\u5217\u8868\n![recentTasks.png](http://upload-images.jianshu.io/upload_images/1896166-408185b5a4f65515.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\u8001\u7684\u5b89\u5353\u7cfb\u7edf\u4e2d\u957f\u6309home\u952e\u51fa\u73b0\u7684\u9875\u9762\uff0c\u65b0\u7684\u7cfb\u7edf\u76f4\u63a5\u6309\u5bfc\u822a\u680f\u4e2d\u7684\u6b63\u65b9\u5f62\u6309\u94ae\u3002\u8fd9\u4e2a\u5217\u8868\u8868\u793a\u6700\u8fd1\u542f\u52a8\u7684\u5e94\u7528\u7684tasks\uff0c\u8868\u4e2d\u6bcf\u4e00\u9879\u8868\u793a\u4e00\u4e2a\u5165\u53e3\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u4e2a\u5e94\u7528\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u4e2a\u5165\u53e3\uff0c\u56e0\u4e3a\u5e94\u7528\u53ef\u80fd\u6709\u591a\u4e2a\u4efb\u52a1\uff0c\u5f53\u7136\u4e0d\u4e00\u5b9a\u6bcf\u4e2a\u4efb\u52a1\u90fd\u4f1a\u51fa\u73b0\u5728\u5217\u8868\u4e2d\u3002\n\n# \u5206\u6790flags\n\u4e0b\u9762\u7ed3\u5408\u52a8\u753b\u6765\u5206\u6790Intent\u4e2d\u6dfb\u52a0\u7684flags\u3002\n\n### 1. FLAG_ACTIVITY_CLEAR_TASK\n```\n    /**\n     * If set in an Intent passed to {@link Context#startActivity Context.startActivity()},\n     * this flag will cause any existing task that would be associated with the\n     * activity to be cleared before the activity is started.  That is, the activity\n     * becomes the new root of an otherwise empty task, and any old activities\n     * are finished.  This can only be used in conjunction with {@link #FLAG_ACTIVITY_NEW_TASK}.\n     */\n```\n\n    1. \u672cflag\u80fd\u9020\u6210\u5728\u65b0\u6d3b\u52a8\u542f\u52a8\u524d\uff0c\u4e0e\u65b0\u6d3b\u52a8\u5173\u8054\u7684\u4efb\u52a1\u88ab\u6e05\u7a7a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u65b0\u6d3b\u52a8\u6210\u4e3a\u65b0\u4efb\u52a1\u7684\u6839\uff0c\u65e7\u7684\u6d3b\u52a8\u90fd\u88ab\u7ed3\u675f\u4e86\u3002\u672cflag\u53ea\u80fd\u4e0eFLAG_ACTIVITY_NEW_TASK\u8054\u5408\u4f7f\u7528\u3002\n![clearTask.gif](http://upload-images.jianshu.io/upload_images/1896166-e144f57a1644c4ff.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_CLEAR_TASK = 0X00008000;\n\n### 2. FLAG_ACTIVITY_CLEAR_TOP\n```\n    /**\n     * If set, and the activity being launched is already running in the\n     * current task, then instead of launching a new instance of that activity,\n     * all of the other activities on top of it will be closed and this Intent\n     * will be delivered to the (now on top) old activity as a new Intent.\n     *\n     * <p>For example, consider a task consisting of the activities: A, B, C, D.\n     * If D calls startActivity() with an Intent that resolves to the component\n     * of activity B, then C and D will be finished and B receive the given\n     * Intent, resulting in the stack now being: A, B.\n     *\n     * <p>The currently running instance of activity B in the above example will\n     * either receive the new intent you are starting here in its\n     * onNewIntent() method, or be itself finished and restarted with the\n     * new intent.  If it has declared its launch mode to be \"multiple\" (the\n     * default) and you have not set {@link #FLAG_ACTIVITY_SINGLE_TOP} in\n     * the same intent, then it will be finished and re-created; for all other\n     * launch modes or if {@link #FLAG_ACTIVITY_SINGLE_TOP} is set then this\n     * Intent will be delivered to the current instance's onNewIntent().\n     *\n     * <p>This launch mode can also be used to good effect in conjunction with\n     * {@link #FLAG_ACTIVITY_NEW_TASK}: if used to start the root activity\n     * of a task, it will bring any currently running instance of that task\n     * to the foreground, and then clear it to its root state.  This is\n     * especially useful, for example, when launching an activity from the\n     * notification manager.\n     *\n     * <p>See\n     * <a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back\n     * Stack</a> for more information about tasks.\n     */\n```\n\n     1. \u65b0\u6d3b\u52a8\u5df2\u5728\u5f53\u524d\u4efb\u52a1\u4e2d\u65f6\uff0c\u5728\u65b0\u6d3b\u52a8\u4e0a\u9762\u7684\u6d3b\u52a8\u4f1a\u88ab\u5173\u95ed\uff0c\u65b0\u6d3b\u52a8\u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8\uff0c\u53ea\u4f1a\u63a5\u6536new intent\u3002\n     2. \u65b0\u6d3b\u52a8\u5df2\u5728\u4efb\u52a1\u6700\u4e0a\u9762\u65f6\uff1a\u5982\u679c\u542f\u52a8\u6a21\u5f0f\u662f\"multiple\" (\u9ed8\u8ba4\u7684)\uff0c\u5e76\u4e14\u6ca1\u6dfb\u52a0FLAG_ACTIVITY_SINGLE_TOP\uff0c\u90a3\u4e48\u6d3b\u52a8\u4f1a\u88ab\u9500\u6bc1\u91cd\u65b0\u521b\u5efa\uff1b\u5982\u679c\u542f\u52a8\u6a21\u5f0f\u662f\u5176\u4ed6\u7684\uff0c\u6216\u8005\u6dfb\u52a0\u4e86FLAG_ACTIVITY_SINGLE_TOP\uff0c\u90a3\u4e48\u53ea\u4f1a\u8c03\u7528\u6d3b\u52a8\u7684onNewIntent()\u3002\n     3. \u8ddfFLAG_ACTIVITY_NEW_TASK\u8054\u5408\u4f7f\u7528\u6548\u679c\u5f88\u597d\uff1a\u5982\u679c\u7528\u4e8e\u542f\u52a8\u4e00\u4e2a\u4efb\u52a1\u4e2d\u7684\u6839\u6d3b\u52a8\uff0c\u4f1a\u628a\u8be5\u4efb\u52a1\u79fb\u5230\u524d\u9762\u5e76\u6e05\u7a7a\u81f3root\u72b6\u6001\u3002\u8fd9\u7279\u522b\u6709\u7528\uff0c\u6bd4\u5982\u7528\u4e8e\u4ecenotification manager\u4e2d\u542f\u52a8\u6d3b\u52a8\u3002\n![clearTop.gif](http://upload-images.jianshu.io/upload_images/1896166-5fc09e40500bce54.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_CLEAR_TOP = 0x04000000;\n    \n### 3. FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET\n```\n    /**\n     * @deprecated As of API 21 this performs identically to\n     * {@link #FLAG_ACTIVITY_NEW_DOCUMENT} which should be used instead of this.\n     */\n```\n\n     1. \u5df2\u5e9f\u5f03\u3002API 21\u540e\u7528FLAG_ACTIVITY_NEW_DOCUMENT\u3002\n![clearWhenTaskReset.gif](http://upload-images.jianshu.io/upload_images/1896166-62238e677def462d.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET = 0x00080000;\n\n### 4. FLAG_ACTIVITY_MULTIPLE_TASK\n```\n    /**\n     * This flag is used to create a new task and launch an activity into it.\n     * This flag is always paired with either {@link #FLAG_ACTIVITY_NEW_DOCUMENT}\n     * or {@link #FLAG_ACTIVITY_NEW_TASK}. In both cases these flags alone would\n     * search through existing tasks for ones matching this Intent. Only if no such\n     * task is found would a new task be created. When paired with\n     * FLAG_ACTIVITY_MULTIPLE_TASK both of these behaviors are modified to skip\n     * the search for a matching task and unconditionally start a new task.\n     *\n     * <strong>When used with {@link #FLAG_ACTIVITY_NEW_TASK} do not use this\n     * flag unless you are implementing your own\n     * top-level application launcher.</strong>  Used in conjunction with\n     * {@link #FLAG_ACTIVITY_NEW_TASK} to disable the\n     * behavior of bringing an existing task to the foreground.  When set,\n     * a new task is <em>always</em> started to host the Activity for the\n     * Intent, regardless of whether there is already an existing task running\n     * the same thing.\n     *\n     * <p><strong>Because the default system does not include graphical task management,\n     * you should not use this flag unless you provide some way for a user to\n     * return back to the tasks you have launched.</strong>\n     *\n     * See {@link #FLAG_ACTIVITY_NEW_DOCUMENT} for details of this flag's use for\n     * creating new document tasks.\n     *\n     * <p>This flag is ignored if one of {@link #FLAG_ACTIVITY_NEW_TASK} or\n     * {@link #FLAG_ACTIVITY_NEW_DOCUMENT} is not also set.\n     *\n     * <p>See\n     * <a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back\n     * Stack</a> for more information about tasks.\n     *\n     * @see #FLAG_ACTIVITY_NEW_DOCUMENT\n     * @see #FLAG_ACTIVITY_NEW_TASK\n     */\n```\n\n     1. \u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u4efb\u52a1\uff0c\u5e76\u542f\u52a8\u4e00\u4e2a\u6d3b\u52a8\u653e\u8fdb\u53bb\uff1b\n    \u603b\u662f\u8ddfFLAG_ACTIVITY_NEW_DOCUMENT\u6216\u8005FLAG_ACTIVITY_NEW_TASK\u4e00\u8d77\u4f7f\u7528\uff1b\n    \u5355\u72ec\u7528FLAG_ACTIVITY_NEW_DOCUMENT\u6216\u8005FLAG_ACTIVITY_NEW_TASK\u65f6\uff0c\u4f1a\u5728\u5df2\u5b58\u5728\u7684\u4efb\u52a1\u4e2d\u5bfb\u627e\u5339\u914d\u7684Intent\uff0c\u627e\u4e0d\u5230\u624d\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u4efb\u52a1\uff1b\n    \u4f7f\u7528\u4e86\u672cflag\u4e0d\u4f1a\u5bfb\u627e\u5339\u914d\u7684Intent\uff0c\u65e0\u6761\u4ef6\u521b\u5efa\u4e00\u4e2a\u65b0\u4efb\u52a1\u3002\n    2. **\u7528\u4e86FLAG_ACTIVITY_NEW_TASK\u5c31\u4e0d\u8981\u7528\u672cflag\uff0c\u9664\u975e\u4f60\u542f\u52a8\u7684\u662f\u5e94\u7528\u7684launcher\u3002** \u8ddfFLAG_ACTIVITY_NEW_TASK\u8054\u5408\u4f7f\u7528\u80fd\u9632\u6b62\u628a\u5df2\u5b58\u5728\u7684\u4efb\u52a1\u79fb\u5230\u524d\u9762\uff0c\u4f1a\u4e3a\u65b0\u6d3b\u52a8\u521b\u5efa\u4e00\u4e2a\u65b0\u4efb\u52a1\uff0c\u65e0\u8bba\u5df2\u5b58\u5728\u7684\u4efb\u52a1\u4e2d\u6709\u6ca1\u6709\u65b0\u6d3b\u52a8\u3002\n    3. \u56e0\u4e3a\u9ed8\u8ba4\u5b89\u5353\u7cfb\u7edf\u4e2d\u6ca1\u6709\u63d0\u4f9b\u53ef\u89c6\u5316\u7684\u4efb\u52a1\u7ba1\u7406\uff0c\u6240\u4ee5\u4f60\u4e0d\u5e94\u8be5\u4f7f\u7528\u672cflag\uff0c\u9664\u975e\u7ed9\u7528\u6237\u63d0\u4f9b\u53ef\u4ee5\u56de\u5230\u5176\u4ed6\u4efb\u52a1\u7684\u65b9\u6cd5\u3002\n    4. \u5355\u72ec\u7528\u672cflag\u800c\u4e0d\u7528FLAG_ACTIVITY_NEW_DOCUMENT\u6216\u8005FLAG_ACTIVITY_NEW_TASK\u662f\u65e0\u6548\u7684\u3002\n![multiTask1.gif](http://upload-images.jianshu.io/upload_images/1896166-3e04bf232cb33e17.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)![multiTask2.gif](http://upload-images.jianshu.io/upload_images/1896166-18e198a677422e9d.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_MULTIPLE_TASK = 0x08000000;\n\n### 5. FLAG_ACTIVITY_NEW_DOCUMENT\n```\n    /**\n     * This flag is used to open a document into a new task rooted at the activity launched\n     * by this Intent. Through the use of this flag, or its equivalent attribute,\n     * {@link android.R.attr#documentLaunchMode} multiple instances of the same activity\n     * containing different documents will appear in the recent tasks list.\n     *\n     * <p>The use of the activity attribute form of this,\n     * {@link android.R.attr#documentLaunchMode}, is\n     * preferred over the Intent flag described here. The attribute form allows the\n     * Activity to specify multiple document behavior for all launchers of the Activity\n     * whereas using this flag requires each Intent that launches the Activity to specify it.\n     *\n     * <p>Note that the default semantics of this flag w.r.t. whether the recents entry for\n     * it is kept after the activity is finished is different than the use of\n     * {@link #FLAG_ACTIVITY_NEW_TASK} and {@link android.R.attr#documentLaunchMode} -- if\n     * this flag is being used to create a new recents entry, then by default that entry\n     * will be removed once the activity is finished.  You can modify this behavior with\n     * {@link #FLAG_ACTIVITY_RETAIN_IN_RECENTS}.\n     *\n     * <p>FLAG_ACTIVITY_NEW_DOCUMENT may be used in conjunction with {@link\n     * #FLAG_ACTIVITY_MULTIPLE_TASK}. When used alone it is the\n     * equivalent of the Activity manifest specifying {@link\n     * android.R.attr#documentLaunchMode}=\"intoExisting\". When used with\n     * FLAG_ACTIVITY_MULTIPLE_TASK it is the equivalent of the Activity manifest specifying\n     * {@link android.R.attr#documentLaunchMode}=\"always\".\n     *\n     * Refer to {@link android.R.attr#documentLaunchMode} for more information.\n     *\n     * @see android.R.attr#documentLaunchMode\n     * @see #FLAG_ACTIVITY_MULTIPLE_TASK\n     */\n```\n\n     1. \u672cflag\u4f1a\u7ed9\u542f\u52a8\u7684\u6d3b\u52a8\u5f00\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\u8bb0\u5f55\u3002\u4f7f\u7528\u4e86\u672cflag\u6216documentLaunchMode\u5c5e\u6027\u65f6\uff0c\u76f8\u540c\u6d3b\u52a8\u7684\u591a\u5b9e\u4f8b\u4f1a\u5728\u6700\u8fd1\u4efb\u52a1\u5217\u8868\u4e2d\u4ea7\u751f\u4e0d\u540c\u7684\u8bb0\u5f55\u3002\n     2. \u4f7f\u7528\u672cflag\u6bd4\u4f7f\u7528documentLaunchMode\u5c5e\u6027\u66f4\u597d\uff0c\u56e0\u4e3adocumentLaunchMode\u5c5e\u6027\u4f1a\u8ddf\u6d3b\u52a8\u7ed1\u5b9a\uff0c\u800cflag\u53ea\u5728\u9700\u8981\u65f6\u6dfb\u52a0\u3002\n     3. \u6ce8\u610f\u672cflag\u7684\u9ed8\u8ba4\u8bcd\u4e49\uff0c\u6d3b\u52a8\u9500\u6bc1\u540e\u6700\u8fd1\u4efb\u52a1\u5217\u8868\u4e2d\u7684\u5165\u53e3\u4e0d\u4f1a\u79fb\u9664\u3002\u8fd9\u8ddf\u4f7f\u7528FLAG_ACTIVITY_NEW_TASK\u4e0d\u4e00\u6837\uff0c\u540e\u8005\u6d3b\u52a8\u9500\u6bc1\u540e\u5165\u53e3\u4f1a\u9a6c\u4e0a\u79fb\u9664\u3002\u4f60\u53ef\u4ee5\u7528FLAG_ACTIVITY_RETAIN_IN_RECENTS\u6539\u53d8\u8fd9\u4e2a\u884c\u4e3a\u3002\n     4. \u672cflag\u53ef\u4ee5\u8ddfFLAG_ACTIVITY_MULTIPLE_TASK\u8054\u5408\u4f7f\u7528\u3002\u5355\u72ec\u4f7f\u7528\u65f6\u8ddfmanifest\u6d3b\u52a8\u4e2d\u5b9a\u4e49documentLaunchMode=\"intoExisting\"\u6548\u679c\u76f8\u540c\uff0c\u8054\u5408\u4f7f\u7528\u65f6\u8ddfmanifest\u6d3b\u52a8\u4e2d\u5b9a\u4e49documentLaunchMode=\"always\"\u6548\u679c\u76f8\u540c\u3002\n![newDocument.gif](http://upload-images.jianshu.io/upload_images/1896166-1534160365ead6ec.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_NEW_DOCUMENT = FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET;\n\n### 6. FLAG_ACTIVITY_NEW_TASK\n```\n    /**\n     * If set, this activity will become the start of a new task on this\n     * history stack.  A task (from the activity that started it to the\n     * next task activity) defines an atomic group of activities that the\n     * user can move to.  Tasks can be moved to the foreground and background;\n     * all of the activities inside of a particular task always remain in\n     * the same order.  See\n     * <a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back\n     * Stack</a> for more information about tasks.\n     *\n     * <p>This flag is generally used by activities that want\n     * to present a \"launcher\" style behavior: they give the user a list of\n     * separate things that can be done, which otherwise run completely\n     * independently of the activity launching them.\n     *\n     * <p>When using this flag, if a task is already running for the activity\n     * you are now starting, then a new activity will not be started; instead,\n     * the current task will simply be brought to the front of the screen with\n     * the state it was last in.  See {@link #FLAG_ACTIVITY_MULTIPLE_TASK} for a flag\n     * to disable this behavior.\n     *\n     * <p>This flag can not be used when the caller is requesting a result from\n     * the activity being launched.\n     */\n```\n\n     1. \u65b0\u6d3b\u52a8\u4f1a\u6210\u4e3a\u5386\u53f2\u6808\u4e2d\u7684\u65b0\u4efb\u52a1\uff08\u4e00\u7ec4\u6d3b\u52a8\uff09\u7684\u5f00\u59cb\u3002\n     2. \u901a\u5e38\u7528\u4e8e\u5177\u6709\"launcher\"\u884c\u4e3a\u7684\u6d3b\u52a8\uff1a\u8ba9\u7528\u6237\u5b8c\u6210\u4e00\u7cfb\u5217\u4e8b\u60c5\uff0c\u5b8c\u5168\u72ec\u7acb\u4e8e\u4e4b\u524d\u7684\u6d3b\u52a8\u3002\n     3. \u5982\u679c\u65b0\u6d3b\u52a8\u5df2\u5b58\u5728\u4e8e\u4e00\u4e2a\u4e3a\u5b83\u8fd0\u884c\u7684\u4efb\u52a1\u4e2d\uff0c\u90a3\u4e48\u4e0d\u4f1a\u542f\u52a8\uff0c\u53ea\u4f1a\u628a\u8be5\u4efb\u52a1\u79fb\u5230\u5c4f\u5e55\u6700\u524d\u3002\n     4. \u5982\u679c\u65b0\u6d3b\u52a8\u8981\u8fd4\u56deresult\u7ed9\u542f\u52a8\u81ea\u5df1\u7684\u6d3b\u52a8\uff0c\u5c31\u4e0d\u80fd\u7528\u8fd9\u4e2aflag\u3002\n![newTask.gif](http://upload-images.jianshu.io/upload_images/1896166-0b515d633517eeba.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_NEW_TASK = 0x10000000;\n\n### 7. FLAG_ACTIVITY_NO_ANIMATION\n```\n    /**\n     * If set in an Intent passed to {@link Context#startActivity Context.startActivity()},\n     * this flag will prevent the system from applying an activity transition\n     * animation to go to the next activity state.  This doesn't mean an\n     * animation will never run -- if another activity change happens that doesn't\n     * specify this flag before the activity started here is displayed, then\n     * that transition will be used.  This flag can be put to good use\n     * when you are going to do a series of activity operations but the\n     * animation seen by the user shouldn't be driven by the first activity\n     * change but rather a later one.\n     */\n```\n\n     1. \u672cflag\u4f1a\u963b\u6b62\u7cfb\u7edf\u5c55\u793a\u6d3b\u52a8\u7684\u5f53\u524d\u72b6\u6001\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb\u52a8\u753b\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6c38\u8fdc\u6ca1\u6709\u52a8\u753b -- \u5982\u679c\u53e6\u4e00\u9879\u6d3b\u52a8\u7684\u6539\u53d8\u5728\u5f53\u524d\u5c55\u793a\u7684\u6d3b\u52a8\u542f\u52a8\u524d\u53d1\u751f\u5e76\u4e14\u6ca1\u6709\u4f7f\u7528\u672cflag\uff0c\u90a3\u4e48\u52a8\u753b\u8fd8\u4f1a\u5c55\u793a\u3002\u5f53\u4f60\u8981\u8fdb\u884c\u4e00\u7cfb\u5217\u6d3b\u52a8\u64cd\u4f5c\uff0c\u4f46\u662f\u7528\u6237\u770b\u5230\u7684\u52a8\u753b\u4e0d\u5e94\u8be5\u7531\u7b2c\u4e00\u9879\u6539\u53d8\u6765\u9a71\u52a8\uff0c\u800c\u662f\u7531\u4e0b\u4e00\u9879\u3002\n![noAnimation.gif](http://upload-images.jianshu.io/upload_images/1896166-272a722a8d938066.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_NO_ANIMATION = 0X00010000;\n\n### 8. FLAG_ACTIVITY_NO_HISTORY\n```\n    /**\n     * If set, the new activity is not kept in the history stack.  As soon as\n     * the user navigates away from it, the activity is finished.  This may also\n     * be set with the {@link android.R.styleable#AndroidManifestActivity_noHistory\n     * noHistory} attribute.\n     *\n     * <p>If set, {@link android.app.Activity#onActivityResult onActivityResult()}\n     * is never invoked when the current activity starts a new activity which\n     * sets a result and finishes.\n     */\n```\n\n     1. \u65b0\u6d3b\u52a8\u4e0d\u4f1a\u4fdd\u7559\u5728\u5386\u53f2\u6808\u4e2d\uff0c\u4e00\u65e6\u7528\u6237\u5207\u6362\u5230\u5176\u4ed6\u9875\u9762\uff0c\u65b0\u6d3b\u52a8\u4f1a\u9a6c\u4e0a\u9500\u6bc1\u3002\n     2. \u65e7\u6d3b\u52a8\u7684onActivityResult()\u65b9\u6cd5\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u89e6\u53d1\u3002\n![noHistory.gif](http://upload-images.jianshu.io/upload_images/1896166-da092317a3866659.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_NO_HISTORY = 0x40000000;\n\n### 9. FLAG_ACTIVITY_REORDER_TO_FRONT\n```\n    /**\n     * If set in an Intent passed to {@link Context#startActivity Context.startActivity()},\n     * this flag will cause the launched activity to be brought to the front of its\n     * task's history stack if it is already running.\n     *\n     * <p>For example, consider a task consisting of four activities: A, B, C, D.\n     * If D calls startActivity() with an Intent that resolves to the component\n     * of activity B, then B will be brought to the front of the history stack,\n     * with this resulting order:  A, C, D, B.\n     *\n     * This flag will be ignored if {@link #FLAG_ACTIVITY_CLEAR_TOP} is also\n     * specified.\n     */\n```\n\n     1. \u5982\u679c\u65b0\u6d3b\u52a8\u5df2\u5728\u4efb\u52a1\u4e2d\uff0c\u7528\u672cflag\u542f\u52a8\u4f1a\u5c06\u5b83\u79fb\u5230\u4efb\u52a1\u7684\u5386\u53f2\u6808\u7684\u524d\u9762\u3002\n     2. \u5982\u679c\u7528\u4e86FLAG_ACTIVITY_CLEAR_TOP\uff0c\u672cflag\u5c31\u65e0\u6548\u3002\n![reorderToFront.gif](http://upload-images.jianshu.io/upload_images/1896166-dac34d5f2a09989c.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_REORDER_TO_FRONT = 0X00020000;\n\n### 10. FLAG_ACTIVITY_RETAIN_IN_RECENTS\n```\n    /**\n     * By default a document created by {@link #FLAG_ACTIVITY_NEW_DOCUMENT} will\n     * have its entry in recent tasks removed when the user closes it (with back\n     * or however else it may finish()). If you would like to instead allow the\n     * document to be kept in recents so that it can be re-launched, you can use\n     * this flag. When set and the task's activity is finished, the recents\n     * entry will remain in the interface for the user to re-launch it, like a\n     * recents entry for a top-level application.\n     * <p>\n     * The receiving activity can override this request with\n     * {@link android.R.attr#autoRemoveFromRecents} or by explcitly calling\n     * {@link android.app.Activity#finishAndRemoveTask()\n     * Activity.finishAndRemoveTask()}.\n     */\n```\n\n     1. \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7531FLAG_ACTIVITY_NEW_DOCUMENT\u521b\u5efa\u7684\u65b0\u7eaa\u5f55\uff0c\u7528\u6237\u5173\u95ed\u65f6\uff08\u6309\u8fd4\u56de\u952e\u6216\u5176\u4ed6\u65b9\u5f0f\u7ed3\u675f\uff09\u5b83\u5728\u6700\u8fd1\u4efb\u52a1\u4e2d\u7684\u5165\u53e3\u4f1a\u88ab\u79fb\u9664\u3002\u5982\u679c\u4f60\u60f3\u4fdd\u7559\u5165\u53e3\uff0c\u5c31\u7528\u672cflag\u3002\n     2. \u63a5\u6536\u7684\u6d3b\u52a8\u53ef\u4ee5\u7528autoRemoveFromRecents\u5c5e\u6027\u6216\u8005\u8c03\u7528Activity.finishAndRemoveTask()\u6765\u8986\u76d6\u672c\u8bf7\u6c42\u3002\n![retainInRecents.gif](http://upload-images.jianshu.io/upload_images/1896166-9ed44108fbee242d.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_RETAIN_IN_RECENTS = 0x00002000;\n\n### 11. FLAG_ACTIVITY_SINGLE_TOP\n```\n    /**\n     * If set, the activity will not be launched if it is already running\n     * at the top of the history stack.\n     */\n```\n\n     1. \u65b0\u6d3b\u52a8\u5df2\u5b58\u5728\u5386\u53f2\u6808\u7684\u9876\u7aef\u65f6\u5c31\u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8\u3002\n![singleTop.gif](http://upload-images.jianshu.io/upload_images/1896166-ba54a2c9613b7337.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    public static final int FLAG_ACTIVITY_SINGLE_TOP = 0x20000000;\n\n\n### 12. FLAG_ACTIVITY_FORWARD_RESULT\n```\n    /**\n     * If set and this intent is being used to launch a new activity from an\n     * existing one, then the reply target of the existing activity will be\n     * transfered to the new activity.  This way the new activity can call\n     * {@link android.app.Activity#setResult} and have that result sent back to\n     * the reply target of the original activity.\n     */\n```\n\n     1. \uff08\u5f53\u524d\u6d3b\u52a8\u7531\u6e90\u6d3b\u52a8\u542f\u52a8\uff09\u672cintent\u4ece\u5f53\u524d\u6d3b\u52a8\u542f\u52a8\u65b0\u6d3b\u52a8\u65f6\uff0c\u6e90\u6d3b\u52a8\u7684\u63a5\u6536\u76ee\u6807\u4f1a\u4ece\u5f53\u524d\u6d3b\u52a8\u8f6c\u79fb\u4e3a\u65b0\u6d3b\u52a8\u3002\u65b0\u6d3b\u52a8\u8c03\u7528setResult\u7684\u6570\u636e\u4f1a\u4f20\u9001\u7ed9\u6e90\u6d3b\u52a8\u3002\n\n    public static final int FLAG_ACTIVITY_FORWARD_RESULT = 0x02000000;\n\n### 13. FLAG_ACTIVITY_PREVIOUS_IS_TOP\n```\n    /**\n     * If set and this intent is being used to launch a new activity from an\n     * existing one, the current activity will not be counted as the top\n     * activity for deciding whether the new intent should be delivered to\n     * the top instead of starting a new one.  The previous activity will\n     * be used as the top, with the assumption being that the current activity\n     * will finish itself immediately.\n     */\n```\n\n     1. \u672cintent\u4ece\u5f53\u524d\u6d3b\u52a8\u542f\u52a8\u65b0\u6d3b\u52a8\u65f6\uff0c\u5f53\u524d\u6d3b\u52a8\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u9876\u7aef\u6d3b\u52a8\uff0c\u4e0d\u7ba1\u662f\u51b3\u5b9a\u4f20intent\u7ed9\u9876\u7aef\u8fd8\u662f\u542f\u52a8\u65b0\u6d3b\u52a8\u3002\u65b0\u6d3b\u52a8\u88ab\u5f53\u505a\u9876\u7aef\u6d3b\u52a8\u4f7f\u7528\uff0c\u5047\u8bbe\u5f53\u524d\u6d3b\u52a8\u7acb\u5373\u9500\u6bc1\u4e86\u3002\n\n    public static final int FLAG_ACTIVITY_PREVIOUS_IS_TOP = 0x01000000;\n\n### 14. FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS\n```\n    /**\n     * If set, the new activity is not kept in the list of recently launched\n     * activities.\n     */\n```\n\n     1. \u65b0\u6d3b\u52a8\u4e0d\u4f1a\u4fdd\u5b58\u5728\u6700\u8fd1\u542f\u52a8\u7684\u6d3b\u52a8\u5217\u8868\u4e2d\u3002\n\n    public static final int FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS = 0x00800000;\n\n### 15. FLAG_ACTIVITY_BROUGHT_TO_FRONT\n```\n    /**\n     * This flag is not normally set by application code, but set for you by\n     * the system as described in the\n     * {@link android.R.styleable#AndroidManifestActivity_launchMode\n     * launchMode} documentation for the singleTask mode.\n     */\n```\n\n     1. \u672cflag\u4e00\u822c\u4e0d\u7531\u5e94\u7528\u4ee3\u7801\u8bbe\u7f6e\uff0csingleTask\u6a21\u5f0f\u65f6\u7cfb\u7edf\u4f1a\u7ed9\u4f60\u8bbe\u7f6e\u3002\n\n    public static final int FLAG_ACTIVITY_BROUGHT_TO_FRONT = 0x00400000;\n\n### 16. FLAG_ACTIVITY_RESET_TASK_IF_NEEDED\n```\n    /**\n     * If set, and this activity is either being started in a new task or\n     * bringing to the top an existing task, then it will be launched as\n     * the front door of the task.  This will result in the application of\n     * any affinities needed to have that task in the proper state (either\n     * moving activities to or from it), or simply resetting that task to\n     * its initial state if needed.\n     */\n```\n\n     1. \u65b0\u6d3b\u52a8\u5728\u65b0\u4efb\u52a1\u4e2d\u542f\u52a8\u6216\u8005\u88ab\u653e\u5230\u4e00\u4e2a\u5df2\u5b58\u5728\u4efb\u52a1\u7684\u9876\u7aef\u65f6\uff0c\u4f1a\u88ab\u5f53\u505a\u4efb\u52a1\u7684\u524d\u95e8\u6765\u542f\u52a8\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4efb\u4f55\u76f8\u5173\u6027\u7684\u6d3b\u52a8\u5728\u9002\u5f53\u72b6\u6001\u4e0b\u9700\u8981\u62e5\u6709\u8fd9\u4e2a\u4efb\u52a1\uff08\u65e0\u8bba\u79fb\u52a8\u6d3b\u52a8\u5230\u5b83\u91cc\u9762\u6216\u8005\u662f\u79fb\u8d70\uff09\uff0c\u6216\u8005\u5728\u9700\u8981\u65f6\u7b80\u5355\u5730\u91cd\u7f6e\u4efb\u52a1\u5230\u521d\u59cb\u72b6\u6001\u3002\n\n    public static final int FLAG_ACTIVITY_RESET_TASK_IF_NEEDED = 0x00200000;\n\n### 17. FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY\n```\n    /**\n     * This flag is not normally set by application code, but set for you by\n     * the system if this activity is being launched from history\n     * (longpress home key).\n     */\n```\n\n     1. \u672cflag\u4e00\u822c\u4e0d\u7531\u5e94\u7528\u4ee3\u7801\u8bbe\u7f6e\uff0c\u6d3b\u52a8\u4ece\u5386\u53f2\u6808\u4e2d\u542f\u52a8\uff08\u957f\u6309home\u952e\uff09\u65f6\u7cfb\u7edf\u4f1a\u7ed9\u4f60\u8bbe\u7f6e\u3002\n\n    public static final int FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY = 0x00100000;\n\n\n### 18. FLAG_ACTIVITY_NO_USER_ACTION\n```\n    /**\n     * If set, this flag will prevent the normal {@link android.app.Activity#onUserLeaveHint}\n     * callback from occurring on the current frontmost activity before it is\n     * paused as the newly-started activity is brought to the front.\n     *\n     * <p>Typically, an activity can rely on that callback to indicate that an\n     * explicit user action has caused their activity to be moved out of the\n     * foreground. The callback marks an appropriate point in the activity's\n     * lifecycle for it to dismiss any notifications that it intends to display\n     * \"until the user has seen them,\" such as a blinking LED.\n     *\n     * <p>If an activity is ever started via any non-user-driven events such as\n     * phone-call receipt or an alarm handler, this flag should be passed to {@link\n     * Context#startActivity Context.startActivity}, ensuring that the pausing\n     * activity does not think the user has acknowledged its notification.\n     */\n```\n\n     1. \u672cflag\u4f1a\u963b\u6b62\u5f53\u524d\u6700\u524d\u9762\u6d3b\u52a8\u7684onUserLeaveHint\u56de\u8c03\uff0c\u5728\u5b83\u88ab\u65b0\u542f\u52a8\u7684\u6d3b\u52a8\u9020\u6210paused\u72b6\u6001\u65f6\u3002\n     2. \u901a\u5e38\uff0c\u4e00\u4e2a\u6d3b\u52a8\u5728\u53d7\u5230\u7528\u6237\u64cd\u4f5c\u800c\u4ece\u524d\u9762\u79fb\u8d70\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u4e0a\u9762\u7684\u56de\u8c03\u3002\u8be5\u56de\u8c03\u6807\u5fd7\u7740\u6d3b\u52a8\u751f\u547d\u5468\u671f\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u5728\u8be5\u70b9\u6d3b\u52a8\u4f1a\u9690\u85cf\u5b83\u60f3\u8981\u663e\u793a\u7684\u201d\u76f4\u5230\u7528\u6237\u770b\u5230\u201c\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u95ea\u70c1\u7684LED\u706f\u3002\n     3. \u5982\u679c\u4e00\u4e2a\u6d3b\u52a8\u66fe\u7ecf\u7531\u975e\u7528\u6237\u9a71\u52a8\u7684\u4e8b\u4ef6\u6bd4\u5982\u6765\u7535\u6216\u95f9\u949f\u542f\u52a8\uff0c\u5e94\u8be5\u5728startActivity\u4e2d\u6dfb\u52a0\u672cflag\uff0c\u4ee5\u4fdd\u8bc1\u6682\u505c\u65f6\u6d3b\u52a8\u77e5\u9053\u7528\u6237\u5e76\u6ca1\u6709\u770b\u5230\u901a\u77e5\u3002\n\n    public static final int FLAG_ACTIVITY_NO_USER_ACTION = 0x00040000;\n\n\n### 19. FLAG_ACTIVITY_TASK_ON_HOME\n```\n    /**\n     * If set in an Intent passed to {@link Context#startActivity Context.startActivity()},\n     * this flag will cause a newly launching task to be placed on top of the current\n     * home activity task (if there is one).  That is, pressing back from the task\n     * will always return the user to home even if that was not the last activity they\n     * saw.   This can only be used in conjunction with {@link #FLAG_ACTIVITY_NEW_TASK}.\n     */\n```\n\n     1. \u672cflag\u4f1a\u9020\u6210\u65b0\u7684\u542f\u52a8\u4efb\u52a1\u653e\u5728\u5f53\u524d\u4e3b\u9875\u6d3b\u52a8\u4efb\u52a1\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u7684\u9876\u7aef\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4efb\u52a1\u4e2d\u6309\u8fd4\u56de\u952e\u603b\u662f\u4f1a\u56de\u5230\u4e3b\u9875\uff0c\u5373\u4f7f\u4e0a\u4e00\u4e2a\u7528\u6237\u770b\u5230\u7684\u6d3b\u52a8\u4e0d\u662f\u4e3b\u9875\u3002\u672cflag\u53ea\u80fd\u4e0eFLAG_ACTIVITY_NEW_TASK\u8054\u5408\u4f7f\u7528\u3002\n\n    public static final int FLAG_ACTIVITY_TASK_ON_HOME = 0X00004000;\n\n\n### 20. FLAG_ACTIVITY_LAUNCH_ADJACENT\n```\n    /**\n     * This flag is only used in split-screen multi-window mode. The new activity will be displayed\n     * adjacent to the one launching it. This can only be used in conjunction with\n     * {@link #FLAG_ACTIVITY_NEW_TASK}. Also, setting {@link #FLAG_ACTIVITY_MULTIPLE_TASK} is\n     * required if you want a new instance of an existing activity to be created.\n     */\n```\n\n     1. \u672cflag\u53ea\u5728\u5206\u5c4f\u591a\u7a97\u53e3\u6a21\u5f0f\u4e0b\u4f7f\u7528\u3002\u65b0\u6d3b\u52a8\u4f1a\u663e\u793a\u5728\u65e7\u6d3b\u52a8\u65c1\u8fb9\u3002\u672cflag\u53ea\u80fd\u8ddfFLAG_ACTIVITY_NEW_TASK\u8054\u5408\u4f7f\u7528\u3002\u5e76\u4e14\u5982\u679c\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u5df2\u5b58\u5728\u6d3b\u52a8\u7684\u65b0\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8981\u8bbe\u7f6eFLAG_ACTIVITY_MULTIPLE_TASK\u3002\n\n    public static final int FLAG_ACTIVITY_LAUNCH_ADJACENT = 0x00001000\n", "mt_excerpt": "", "title": "Intent-addFlags()-\u542f\u52a8Activity\u768420\u79cdflags\u5168\u89e3\u6790", "dateCreated": "20220719T20:18:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495600.html", "permalink": "https://www.cnblogs.com/rome753/p/16495600.html", "postid": 16495600, "description": "# \u539f\u9898\nWrite a program to solve a Sudoku puzzle by filling the empty cells.\n\nA\u00a0sudoku solution must satisfy\u00a0**all of\u00a0the following rules**:\n\n1.  Each of the digits\u00a0`1-9`\u00a0must occur exactly\u00a0once in each row.\n2.  Each of the digits\u00a0`1-9`\u00a0must occur\u00a0exactly once in each column.\n3.  Each of the the digits\u00a0`1-9`\u00a0must occur exactly once in each of the 9\u00a0`3x3`\u00a0sub-boxes of the grid.\n\nEmpty cells are indicated by the character\u00a0`'.'`.\n\n![\u6c42\u89e3](http://upload-images.jianshu.io/upload_images/1896166-2bb3a1b021c9ace6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![\u89e3\u7b54](http://upload-images.jianshu.io/upload_images/1896166-911e4bb0bae4a952.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**Note:**\n\n*   The given board\u00a0contain only digits\u00a0`1-9`\u00a0and the character\u00a0`'.'`.\n*   You may assume that the given Sudoku puzzle will have a single unique solution.\n*   The given board size is always\u00a0`9x9`.\n\n# \u89e3\u6cd5\n\n\u6570\u72ec\u6e38\u620f\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6e38\u620f\uff0c\u6bcf\u4e00\u884c\u3001\u6bcf\u4e00\u5217\u548c\u6bcf\u4e00\u4e2a\u5c0f\u4e5d\u683c\u4e2d\u586b\u51651~9\u4e0d\u91cd\u590d\u7684\u6570\u5b57\u3002\n\n1. \u4f7f\u7528\u5e8f\u53f7i=0~80\u904d\u5386\u4e5d\u5bab\u683c\uff0c\u518d\u7528`y = i / 9; x = i % 9;`\u8f6c\u6362\u6210\u5750\u6807\u3002\u4e00\u822c\u4f7f\u7528x\u548cy\u5750\u6807\u4e5f\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u8fd9\u6837\u9700\u8981\u4e24\u91cd\u5faa\u73af\uff0c\u9012\u5f52\u8d77\u6765\u4e5f\u9ebb\u70e6\u4e00\u70b9\u3002\n2. \u5224\u65ad\u540c\u4e00\u884c\u3001\u540c\u4e00\u5217\u4e2d\u7684\u6570\u5b57\u90fd\u7b80\u5355\uff0c\u5224\u65ad\u540c\u5728\u4e00\u4e2a\u5c0f\u4e5d\u683c\u4e2d\u6709\u4e00\u4e2a\u6280\u5de7\uff0c\u5148\u8ba1\u7b97`xx = x / 3 * 3, yy = y / 3 * 3;`\uff0c\u65e0\u8bba(x,y)\u662f\u591a\u5c11\uff0c(xx,yy)\u90fd\u662f(x,y)\u6240\u5728\u7684\u5c0f\u4e5d\u683c\u4e2d\u7684\u5de6\u4e0b\u89d2\uff0c\u4ece(xx,yy)\u51fa\u53d1\uff0c\u904d\u5386\u5c0f\u4e5d\u683c\u5c31\u6bd4\u8f83\u5bb9\u6613\u4e86\u3002\n3. \u76f4\u63a5\u5728\u539f\u6570\u7ec4\u4e2d\u8bb0\u5f55\u7b54\u6848\uff0c\u7136\u540e\u9012\u5f52\u6c42\u89e3\uff0c\u5982\u679c\u89e3\u7b54\u5931\u8d25\uff0c\u5c31\u628a\u8bb0\u5f55\u7684\u8be5\u7b54\u6848\u6e05\u7a7a\u3002\u8fd9\u79cd\u65b9\u6cd5\u5728\u9012\u5f52\u4e2d\u7ecf\u5e38\u7528\u5230\uff0c\u597d\u5904\u662f\u4e0d\u9700\u8981\u5360\u7528\u989d\u5916\u7684\u5185\u5b58\uff0c\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u201d\u810f\u6570\u636e\u201d\u5e72\u6270\u3002\n4. \u9012\u5f52\u65b9\u6cd5solveSudoku(char[][] board, int i)\u8f93\u5165\u7684\u4f4d\u7f6ei\u4e00\u5b9a\u662f\u6ca1\u586b\u7684\u4f4d\u7f6e\uff0c\u67e5\u627e\u4e0b\u4e00\u4e2a\u6ca1\u586b\u7684\u4f4d\u7f6ek\u7528\u8fd9\u53e5\u8bdd\u5c31\u884c\u4e86`while(++k < 81 && board[k / 9][k % 9] != '.') ;`\n\n\u7b97\u6cd5\u5982\u4e0b\uff0c\u672c\u7b97\u6cd5\u51fb\u8d25\u4e8692%\u7684java\u89e3\u6cd5\u3002\n```\n    public static void solveSudoku(char[][] board) {\n        int k = -1;\n        while(++k < 81 && board[k / 9][k % 9] != '.') ;\n        if(k < 81) solveSudoku(board, k);\n    }\n    \n    public static boolean solveSudoku(char[][] board, int i) {\n        int y = i / 9;\n        int x = i % 9;\n        for(char c = '1'; c <= '9'; c++) {\n            if(check(board, i, c)) {\n                board[y][x] = c;\n                int k = i;\n                while(++k < 81 && board[k / 9][k % 9] != '.') ;\n                if(k == 81) return true;\n                if(solveSudoku(board, k)) return true;\n                board[y][x] = '.';\n            }\n        }\n        return false;\n    }\n    \n    public static boolean check(char[][] board, int index, char c) {\n        int y = index / 9;\n        int x = index % 9;\n        int xx = x / 3 * 3, yy = y / 3 * 3;\n        for(int i = 0; i < 9; i++) {\n            if(board[y][i] == c) return false;\n            if(board[i][x] == c) return false;\n            if(board[yy + i / 3][xx + i % 3] == c) return false;\n        }\n        return true;\n    }\n```\n", "mt_excerpt": "", "title": "LeetCode37--Sudoku-Solver-\u6570\u72ec\u6e38\u620f\u6c42\u89e3", "dateCreated": "20220719T20:17:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495602.html", "permalink": "https://www.cnblogs.com/rome753/p/16495602.html", "postid": 16495602, "description": "\u5728\u591a\u7ebf\u7a0b\u4fee\u6539\u5bf9\u8c61a\u7684\u65f6\u5019\uff0c\u5373\u4f7f\u52a0\u4e86\u7a7a\u5224\u65ad\u4e5f\u5bb9\u6613\u53d1\u751f\u7a7a\u6307\u9488\u3002\n\n\u56e0\u4e3a\u5728\u5224\u65ada\u4e0d\u4e3a\u7a7a\u540e\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u521a\u597d\u628aa\u7f6e\u7a7a\uff0c\u8fd9\u65f6\u53bb\u4f7f\u7528a\u65f6\u5c31\u89e6\u53d1\u7a7a\u6307\u9488\u5f02\u5e38\u4e86\u3002\n```java\nif (a != null) {\n  a.foo();\n}\n```\n\n\u591a\u7ebf\u7a0b\u5e76\u53d1\u6a21\u62df\uff1a\u4e00\u4e2a\u7ebf\u7a0b\u95f4\u969410ms\u4e0d\u505c\u5730\u8bfb\u5b57\u7b26\u4e32str\u7684\u957f\u5ea6\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6bcf5ms\u628astr\u7f6e\u7a7a\u6216\u8005\u91cd\u65b0\u8d4b\u503c\u3002\n\n```java\npublic class Test{\n\n    static String str = \"str\";\n\n    public static void main(String[] args) {\n\n        new Thread(new Runnable(){\n\n            @Override\n            public void run() {\n                while(true) {\n                    if (str != null) {\n                        System.out.println(str.length());\n                    }\n                    sleep(10);\n                }\n            }\n        }).start();\n\n        new Thread(new Runnable(){\n        \n            @Override\n            public void run() {\n                while(true) {\n                    if (str == null) {\n                        str = \"newStr\";\n                    } else {\n                        str = null;\n                    }\n                    sleep(5);\n                }\n            }\n        }).start();\n    }\n\n    private static void sleep(long time) {\n        try {\n            Thread.sleep(time);\n        } catch (Exception e) {\n            // ignore\n        }\n    }\n}\n```\n\u8fd0\u884c\u5f88\u5feb\u5c31\u4f1a\n```java\nException in thread \"Thread-0\" java.lang.NullPointerException\n        at app.Test$1.run(Test.java:16)\n        at java.lang.Thread.run(Thread.java:748)\n```\n\n\u5982\u679c\u4e0d\u7528try-catch\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cftemp\u5f15\u7528str\uff0c\u5224\u65ad\u548c\u4f7f\u7528temp\u4e0d\u4f1a\u7a7a\u6307\u9488\n```java\npublic class Test{\n\n    static String str = \"str\";\n\n    public static void main(String[] args) {\n\n        new Thread(new Runnable(){\n\n            @Override\n            public void run() {\n                while(true) {\n                    // if (str != null) {\n                    //     System.out.println(str.length());\n                    // }\n\n                    String temp = str;\n                    if (temp != null) {\n                        System.out.println(temp.length());\n                    }\n                    sleep(10);\n                }\n            }\n        }).start();\n\n        new Thread(new Runnable(){\n        \n            @Override\n            public void run() {\n                while(true) {\n                    if (str == null) {\n                        str = \"newStr\";\n                    } else {\n                        str = null;\n                    }\n                    sleep(5);\n                }\n            }\n        }).start();\n    }\n\n    private static void sleep(long time) {\n        try {\n            Thread.sleep(time);\n        } catch (Exception e) {\n            // ignore\n        }\n    }\n}\n```\n", "mt_excerpt": "", "title": "Java\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u9632\u6b62\u7a7a\u6307\u9488", "dateCreated": "20220719T20:17:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495596.html", "permalink": "https://www.cnblogs.com/rome753/p/16495596.html", "postid": 16495596, "description": "![](https://rome753.github.io/cdn/27131676-6842bfdfaadfb305.pngp\n)\n\nhttps://www.cnblogs.com/hokky/p/8529042.html\n\u8fd9\u7bc7\u6587\u7ae0\u603b\u7ed3\u5f97\u975e\u5e38\u597d\uff0c\u56fe\u8868\u5f88\u8be6\u7ec6\uff0c\u662fPython\u7684\u3002\u4e0b\u9762\u6211\u7528Java\u5b9e\u73b0\u4e00\u4e0b\u3002\n\n# 1 \u6bd4\u8f83\u7c7b\u6392\u5e8f\n\n## 1.1 \u5192\u6ce1\u6392\u5e8f\n\u6bd4\u8f83\u548c\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u6570\uff0c\u6bcf\u4e00\u8d9f\u5c06\u6700\u5927\u7684\u6570\u79fb\u52a8\u5230\u6700\u540e\u4e00\u4f4d\uff08\u53c2\u4e0e\u6bd4\u8f83\u7684\uff09\u3002\u4e0b\u4e00\u8d9f\u6700\u540e\u4e00\u4f4d\u4e0d\u52a8\uff0c\u5bf9\u5269\u4e0b\u7684\u6570\u91cd\u590d\u524d\u9762\u7684\u64cd\u4f5c\u3002\n\n```java\n    static void bubbleSort(int[] arr) {\n        for (int i = 0; i < arr.length - 1; i++) {\n            for (int j = 0; j < arr.length - 1 - i; j++) {\n                if (arr[j] > arr[j + 1]) {\n                    int temp = arr[j];\n                    arr[j] = arr[j + 1];\n                    arr[j + 1] = temp;\n                }\n            }\n        }\n    }\n```\n## 1.2 \u9009\u62e9\u6392\u5e8f\n\u6bcf\u4e00\u8d9f\u6bd4\u8f83\u51fa\u6700\u5c0f\u7684\u6570\uff0c\u653e\u5230\u7b2c\u4e00\u4f4d\uff08\u53c2\u4e0e\u6bd4\u8f83\u7684\uff09\u3002\u4e0b\u4e00\u8d9f\uff0c\u7b2c\u4e00\u4f4d\u4e0d\u52a8\uff0c\u5bf9\u5269\u4e0b\u7684\u6570\u91cd\u590d\u524d\u9762\u7684\u64cd\u4f5c\u3002\n\n```java\n    static void selectSort(int[] arr) {\n        for (int i = 0; i < arr.length - 1; i++) {\n            int min = arr[i];\n            int minI = i;\n            for (int j = i + 1; j < arr.length; j++) {\n                if (arr[j] < min) {\n                    min = arr[j];\n                    minI = j;\n                }\n            }\n            int temp = arr[i];\n            arr[i] = arr[minI];\n            arr[minI] = temp;\n        }\n    }\n```\n## 1.3 \u63d2\u5165\u6392\u5e8f\n\u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\uff0c\u5c06\u5de6\u8fb9\u6570\u7ec4\u89c6\u4e3a\u6392\u597d\u5e8f\u7684\uff0c\u628a\u5de6\u8fb9\u6570\u7ec4\u7684\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6570\u63d2\u5165\u5230\u5de6\u8fb9\u6570\u7ec4\u4e2d\u3002\u63d2\u5165\u65b9\u6cd5\u662f\u5bf9\u5de6\u8fb9\u6570\u7ec4\u4ece\u53f3\u5411\u5de6\u6bd4\u8f83\u548c\u53f3\u79fb\u3002\u6bcf\u4e00\u8d9f\u5de6\u8fb9\u6570\u7ec4\u5411\u53f3\u6269\u5927\u4e00\u4f4d\u3002\n```java\n    static void insertSort(int[] arr) {\n        for (int i = 1; i < arr.length; i++) {\n            int cur = arr[i];\n            int j = i - 1;\n            for (; j >= 0; j--) {\n                if (arr[j] > cur) {\n                    arr[j + 1] = arr[j];\n                } else {\n                    break;\n                }\n            }\n            arr[j + 1] = cur;\n        }\n    }\n```\n\n## 1.4 \u5e0c\u5c14\u6392\u5e8f\n\n\u9009\u4e00\u4e2agap\uff08\u95f4\u9694\uff09\uff0c\u5c06\u6570\u7ec4\u5206\u6210gap\u7ec4\uff08k = 0 ~ gap-1\uff09\n```\n0, 0 + gap, 0 + gap * 2...\n1, 1 + gap, 1 + gap * 2...\nk, k + gap, k + gap * 2...\n```\n\u5bf9\u6bcf\u7ec4\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\u3002\u7136\u540egap\u7f29\u51cf\uff0c\u91cd\u590d\u524d\u9762\u7684\u64cd\u4f5c\u3002\n\n> gap\u7684\u9009\u62e9\u5bf9\u7b97\u6cd5\u6548\u7387\u662f\u6709\u5f71\u54cd\u7684\uff0c\u7b80\u5355\u7684\u505a\u6cd5\u662f\u521d\u59cb\u503c\u4f7f\u7528\u6570\u7ec4\u957f\u5ea6n/2\uff0c\u4e0b\u4e00\u6b21gap\u51cf\u534a\uff0c\u76f4\u5230gap=1\u3002\u6709\u5174\u8da3\u53ef\u4ee5\u7814\u7a76\u9009\u62e9\u4e0d\u540cgap\u7684\u6548\u7387\u3002\n\n> \u5e0c\u5c14\u6392\u5e8f\u662f\u63d2\u5165\u6392\u5e8f\u7684\u9ad8\u7ea7\u7248\u3002\u4e5f\u53ef\u4ee5\u8bf4\u63d2\u5165\u6392\u5e8f\u662f gap = 1 \u7684\u5e0c\u5c14\u6392\u5e8f\uff0c\u63d2\u5165\u6392\u5e8f\u662f\u5e0c\u5c14\u6392\u5e8f\u7684\u6700\u540e\u4e00\u6b65\u3002\u4e0b\u9762\u7684\u7b97\u6cd5\u6211\u7279\u610f\u4f7f\u7528\u4e86\u8ddf\u524d\u9762\u63d2\u5165\u6392\u5e8f\u76f8\u540c\u7684\u5faa\u73af\u53d8\u91cfi\u3001j\uff0c\u53ef\u4ee5\u660e\u663e\u770b\u51fa\u5185\u90e8\u7684\u63d2\u5165\u6392\u5e8f\u3002\n\n```java\n    static void shellSort(int[] arr) {\n        int gap = arr.length / 2;\n        while(gap >= 1) {\n            // \u5206\u4e3agap\u7ec4\n            for (int k = 0; k < gap; k++) {\n                // \u5bf9\u6bcf\u7ec4\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\n                for (int i = k + gap; i < arr.length; i += gap) {\n                    int cur = arr[i];\n                    int j = i - gap;\n                    for (; j >= 0; j -= gap) {\n                        if (arr[j] > cur) {\n                            arr[j + gap] = arr[j];\n                        } else {\n                            break;\n                        }\n                    }\n                    arr[j + gap] = cur;\n                }\n            }\n            gap /= 2;\n        }\n    }\n```\n\n## 1.5 \u5feb\u901f\u6392\u5e8f\n\u9009\u4e00\u4e2abase\uff08\u57fa\u51c6\u503c\uff09\uff0c\u4e00\u822c\u9009\u6570\u7ec4\u7b2c\u4e00\u4f4d\uff0c\u4ece\u5de6\u53f3\u4e24\u8fb9\u540c\u65f6\u5f80\u4e2d\u95f4\u6bd4\u8f83\u548c\u4ea4\u6362\uff0c\u4fdd\u8bc1\u6570\u7ec4\u5de6\u8fb9\u7684\u6570\u90fd\u5c0f\u4e8ebase\uff0c\u53f3\u8fb9\u7684\u90fd\u5927\u4e8ebase\u3002\u7136\u540e\u5206\u522b\u5c06\u5de6\u8fb9\u548c\u53f3\u8fb9\u5f53\u6210\u5b50\u6570\u7ec4\u9012\u5f52\u8c03\u7528\u524d\u9762\u7684\u64cd\u4f5c\uff0c\u76f4\u5230\u6570\u7ec4\u957f\u5ea6\u4e3a1\u3002\n\n> \u5feb\u901f\u6392\u5e8f\u8ddf\u5192\u6ce1\u6392\u5e8f\u4e00\u6837\u662f\u57fa\u4e8e\u4ea4\u6362\u7684\uff0c\u53ef\u4ee5\u5f53\u505a\u5192\u6ce1\u6392\u5e8f\u7684\u9ad8\u7ea7\u7248\u3002\u5b83\u7684\u4ee3\u7801\u975e\u5e38\u5bf9\u79f0\u6709\u89c4\u5f8b\uff0c\u8fb9\u754c\u503c\u7684\u5224\u65ad\u9700\u8981\u975e\u5e38\u4e25\u8c28\u3002\n\n```java\n    private static void quickSort(int[] arr, int low, int high) {\n        if (low >= high) {\n            return;\n        }\n        int i = low;\n        int j = high;\n        int base = arr[i];\n        while (i < j) {\n            while (i < j && arr[j] >= base) {\n                j--;\n            }\n            if (i < j) {\n                arr[i] = arr[j];\n            }\n            while (i < j && arr[i] < base) {\n                i++;\n            }\n            if (i < j) {\n                arr[j] = arr[i];\n            }\n        }\n        arr[i] = base;\n        quickSort(arr, low, i - 1);\n        quickSort(arr, i + 1, high);\n    }\n```\n\n# 1.6 \u5806\u6392\u5e8f\n\u5c06\u6570\u7ec4\u770b\u505a\u4e00\u79cd\u7279\u6b8a\u7684\u6570\u636e\u7ed3\u6784\uff1a\u5927\u9876\u5806\u3002\u5b83\u662f\u4e00\u9897\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u5b83\u7684\u5de6\u53f3\u5b50\u8282\u70b9\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u7684\u503c\u3002\u6784\u5efa\u5b8c\u5927\u9876\u5806\u540e\uff0c\u6839\u8282\u70b9\u5c31\u662f\u6570\u7ec4\u6700\u5927\u503c\uff0c\u628a\u5b83\u8ddf\u6700\u540e\u4e00\u4f4d\u4ea4\u6362\u3002\u8fd9\u6837\u6700\u5927\u503c\u5c31\u653e\u5230\u6700\u540e\u4e0d\u52a8\uff0c\u5bf9\u5269\u4e0b\u7684\u6570\u91cd\u65b0\u6574\u5806\uff08**\u6ce8\u610f\u662f\u6574\u5806\u4e0d\u662f\u5efa\u5806\uff01**\uff09\uff0c\u7136\u540e\u4ea4\u6362\u6700\u5927\u503c\uff0c\u91cd\u590d\u524d\u9762\u7684\u64cd\u4f5c\u3002\n\n\u6211\u770b\u7684\u51e0\u4e4e\u6240\u6709\u7684\u8d44\u6599\u90fd\u6ca1\u6709\u5f3a\u8c03\u201c**\u5efa\u5806**\u201d\u548c\u201c**\u6574\u5806**\u201d\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u8fc7\u7a0b\u3002\n- \u5efa\u5806\uff08\u521b\u5efa\u5806\uff09\u53ea\u6709\u7b2c\u4e00\u6b21\u9700\u8981\uff0c\u5b83\u662f\u4ece\u4e0b\u5411\u4e0a\u904d\u5386\u8282\u70b9\uff08\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u4f4d\u7f6e\u662f\u6570\u7ec4\u957f\u5ea6n / 2 - 1\uff09\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u6574\u5806\u3002\u5efa\u5806\u5b8c\u6210\u540e\uff0c\u540e\u9762\u7684\u64cd\u4f5c\u4e0d\u4f1a\u5f7b\u5e95\u6253\u4e71\u5806\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u5efa\u5806\uff0c\u53ea\u9700\u8981\u6574\u5806\u3002\n- \u6574\u5806\uff08\u8c03\u6574\u5806\uff09\u662f\u5c06\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u6700\u5927\u503c\u548c\u5f53\u524d\u8282\u70b9\u6bd4\u8f83\uff0c\u5982\u679c\u5b50\u8282\u70b9\u7684\u503c\u66f4\u5927\uff0c\u5c31\u8ddf\u5f53\u524d\u8282\u70b9\u4ea4\u6362\uff0c\u7136\u540e\u5bf9\u4ea4\u6362\u540e\u7684\u5b50\u8282\u70b9\u8fdb\u884c\u9012\u5f52\u6574\u5806\u3002\n\n> \u56e0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b50\u8282\u70b9\u4f4d\u7f6e\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97 \u2014\u2014 \u8282\u70b9\u4f4d\u7f6e i\uff0c\u5de6\u5b50\u8282\u70b9\u662f i * 2 + 1\uff0c\u53f3\u5b50\u8282\u70b9\u662f i * 2 + 2\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u5faa\u73af\u4ee3\u66ff\u9012\u5f52\u3002\n\n> \u5806\u6392\u5e8f\u8ddf\u9009\u62e9\u6392\u5e8f\u4e00\u6837\u6bcf\u6b21\u9009\u51fa\u6700\u5927\u503c\u653e\u5230\u672b\u5c3e\uff0c\u53ef\u4ee5\u5f53\u4f5c\u9009\u62e9\u6392\u5e8f\u7684\u9ad8\u7ea7\u7248\u3002\n\n```java\n   static void heapSort(int[] arr) {\n        heapBuild(arr, arr.length);\n        for (int len = arr.length; len > 0; len--) {\n            int temp = arr[0];\n            arr[0] = arr[len - 1];\n            arr[len - 1] = temp;\n            heapAdjust(arr, 0, len - 1);\n        }\n    }\n\n    // \u5efa\u5806\n    private static void heapBuild(int[] arr, int len) {\n        for (int i = len / 2 - 1; i >= 0; i--) {\n            heapAdjust(arr, i, len);\n        }\n    }\n\n    // \u6574\u5806\n    private static void heapAdjust(int[] arr, int i, int len) {\n        // if (i >= len) { // \u6ca1\u6709\u5b50\u8282\u70b9\n        //     return;\n        // }\n        while (i < len) {\n            int left = i * 2 + 1;\n            if (left >= len) {\n                return;\n            }\n            int right = left + 1;\n            int iNext = i;\n            if (right >= len || arr[left] > arr[right]) { // \u6ca1\u6709\u53f3\u8282\u70b9\u6216\u5de6\u8fb9\u5927\u4e8e\u53f3\u8fb9\n                if (arr[left] > arr[i]) {\n                    iNext = left;\n                }\n            } else { // \u6709\u53f3\u8282\u70b9\u4e14\u53f3\u8fb9\u4e0d\u5c0f\u4e8e\u5de6\u8fb9\n                if (arr[right] > arr[i]) {\n                    iNext = right;\n                }\n            }\n            if (iNext == i) {\n                return;\n            }\n            int temp = arr[iNext];\n            arr[iNext] = arr[i];\n            arr[i] = temp;\n\n            i = iNext;\n        }\n        // heapAdjust(arr, iNext, len);\n    }\n```\n\n# 1.7 \u5f52\u5e76\u6392\u5e8f\n\u5c06\u6570\u7ec4\u5206\u6210\u5de6\u53f3\u4e24\u4e2a\u5b50\u6570\u7ec4\uff0c\u5bf9\u5b83\u4eec\u5206\u522b\u8fdb\u884c\u9012\u5f52\u5f52\u5e76\u6392\u5e8f\uff0c\u6392\u5e8f\u4e4b\u540e\u518d\u5c06\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u5408\u5e76\uff0c\u5408\u5e76\u65b9\u6cd5\u662f\uff1a\u4ece\u5de6\u5411\u53f3\u540c\u65f6\u904d\u5386\u4e24\u4e2a\u6570\u7ec4\uff0c\u6bd4\u8f83\u5927\u5c0f\uff0c\u5c06\u5c0f\u7684\u653e\u8fdb\u7f13\u5b58\u6570\u7ec4\u91cc\uff0c\u5750\u6807\u53f3\u79fb\uff1b\u540c\u65f6\u904d\u5386\u5b8c\u540e\u518d\u4ece\u5f53\u524d\u4f4d\u7f6e\u5206\u522b\u904d\u5386\u4e24\u4e2a\u6570\u7ec4\u4e00\u6b21\uff0c\u5c06\u4e0a\u6b21\u6ca1\u904d\u5386\u5b8c\u7684\u5143\u7d20\u5168\u90e8\u653e\u8fdb\u7f13\u5b58\u6570\u7ec4\uff0c\u7136\u540e\u5c06\u7f13\u5b58\u6570\u7ec4\u590d\u5236\u5230\u539f\u6570\u7ec4\u3002\n\n> \u5f52\u5e76\u6392\u5e8f\u5229\u7528\u9012\u5f52\u601d\u60f3\uff0c\u975e\u5e38\u5de7\u5999\uff1a\u5408\u5e76\u5b50\u6570\u7ec4\u524d\uff0c\u8ba4\u4e3a\u5b50\u6570\u7ec4\u6392\u5e8f\u597d\u4e86\uff1b\u5b50\u6570\u7ec4\u8ba4\u4e3a\u5b50\u5b50\u6570\u7ec4\u6392\u5e8f\u597d\u4e86...\u76f4\u5230\u78b0\u5230\u6570\u7ec4\u957f\u5ea61\u7684\u9012\u5f52\u6536\u655b\u6761\u4ef6\uff0c\u624d\u771f\u6b63\u5f00\u59cb\u5408\u5e76\u6570\u7ec4\uff0c\u5408\u5e76\u5b8c\u540e\u4e0a\u5c42\u6570\u7ec4\u5f00\u59cb\u5408\u5e76\uff0c\u7136\u540e\u4e0a\u4e0a\u5c42...\u76f4\u5230\u6700\u5916\u5c42\u5408\u5e76\u5b8c\u6210\u3002\n\n```java\n    static void mergeSort(int[] arr) {\n        mergeSort(arr, 0, arr.length - 1, new int[arr.length]);\n    }\n\n    private static void mergeSort(int[] arr, int low, int high, int[] temp) {\n        if (low >= high) {\n            return;\n        }\n        int mid = (high + low) / 2;\n        mergeSort(arr, low, mid, temp);\n        mergeSort(arr, mid + 1, high, temp);\n        merge(arr, low, mid, high, temp);\n    }\n\n    private static void merge(int[] arr, int low, int mid, int high, int[] temp) {\n        int i0 = low, j0 = mid;\n        int i1 = mid + 1, j1 = high;\n        int k = low;\n        while(i0 <= j0 && i1 <= j1) {\n            if (arr[i0] < arr[i1]) {\n                temp[k++] = arr[i0++];\n            } else {\n                temp[k++] = arr[i1++];\n            }\n        }\n        while(i0 <= j0) {\n            temp[k++] = arr[i0++];\n        }\n        while(i1 <= j1) {\n            temp[k++] = arr[i1++];\n        }\n        for (int i  = low; i <= high; i++) {\n            arr[i] = temp[i];\n        }\n    }\n\n```\n\n# 1.8 \u7b97\u6cd5\u6548\u7387\u6bd4\u8f83\n\n```java\n    public static void main(String[] args) {\n        check(\"bubble\");\n        check(\"select\");\n        check(\"insert\");\n        check(\"shell\");\n        check(\"quick\");\n        check(\"merge\");\n        check(\"heap\");\n    }\n\n    static void check(String name) {\n        int n = 10000;\n        int[] arr = new int[n];\n        Random r = new Random();\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = r.nextInt(n);\n        }\n        long t = System.currentTimeMillis();\n        switch (name) {\n            case \"bubble\":\n                bubbleSort(arr);\n                break;\n            case \"select\":\n                selectSort(arr);\n                break;\n            case \"insert\":\n                insertSort(arr);\n                break;\n            case \"shell\":\n                shellSort(arr);\n                break;\n            case \"quick\":\n                quickSort(arr);\n                break;\n            case \"merge\":\n                mergeSort(arr);\n                break;\n            case \"heap\":\n                heapSort(arr);\n                break;\n            default:\n                break;\n        }\n        t = System.currentTimeMillis() - t;\n        System.out.println(name + \"Sort\\t\" + \"time(ms): \" + t);\n    }\n```\n\u751f\u6210\u4e00\u4e2a\u957f\u5ea6n\u7684\u968f\u673a\u6570\u7ec4\uff0c\u8ba1\u7b97\u4e0d\u540c\u6392\u5e8f\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\uff0cn\u4ece\u4e00\u4e07\u589e\u52a0\u5230\u4e00\u5343\u4e07\uff08\u8d85\u8fc7\u5341\u4e07\u540e\u53ea\u8ba1\u7b97\u9ad8\u7ea7\u6392\u5e8f\u7684\uff09\u3002\n\n```\nn = 10000\nbubbleSort      time(ms): 50\nselectSort      time(ms): 19\ninsertSort      time(ms): 26\nshellSort       time(ms): 4\nquickSort       time(ms): 2\nmergeSort       time(ms): 2\nheapSort        time(ms): 3\n\nn = 100000\nbubbleSort      time(ms): 10922\nselectSort      time(ms): 1068\ninsertSort      time(ms): 1974\nshellSort       time(ms): 19\nquickSort       time(ms): 29\nmergeSort       time(ms): 17\nheapSort        time(ms): 24\n\nn = 1000000\nshellSort       time(ms): 153\nquickSort       time(ms): 105\nmergeSort       time(ms): 117\nheapSort        time(ms): 144\n\nn = 10000000\nshellSort       time(ms): 2393\nquickSort       time(ms): 948\nmergeSort       time(ms): 1195\nheapSort        time(ms): 1849\n```\n\u4ece\u8017\u65f6\u53ef\u4ee5\u7b80\u5355\u5206\u6790\u51fa\u51e0\u70b9\uff1a\n- \u7b80\u5355\u6392\u5e8f\uff08\u5192\u6ce1\u3001\u9009\u62e9\u3001\u63d2\u5165\uff09\u7684\u8017\u65f6\u8fdc\u8fdc\u8d85\u8fc7\u9ad8\u7ea7\u6392\u5e8f\u3002\u51e0\u79cd\u7b80\u5355\u6392\u5e8f\u8017\u65f6\u63a5\u8fd1\uff0c\u51e0\u79cd\u9ad8\u7ea7\u6392\u5e8f\u8017\u65f6\u4e5f\u63a5\u8fd1\u3002\n- \u7b80\u5355\u6392\u5e8f\u91cc\uff1a\u6570\u91cf\u589e\u52a0\u540e\u5192\u6ce1\u6392\u5e8f\u8017\u65f6\u662f\u5176\u4ed6\u7684\u51e0\u500d\uff0c\u56e0\u4e3a\u5b83\u6267\u884c\u4e86\u66f4\u591a\u65e0\u6548\u7684\u4ea4\u6362\u64cd\u4f5c\u3002\n- \u9ad8\u7ea7\u6392\u5e8f\u91cc\uff1a\u6570\u91cf\u5341\u4e07\u5de6\u53f3\u65f6\uff0c\u5e0c\u5c14\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u66f4\u5feb\uff0c\u5176\u4ed6\u6570\u91cf\u90fd\u662f\u5feb\u901f\u6392\u5e8f\u548c\u5f52\u5e76\u6392\u5e8f\u6700\u5feb\uff08\u8fd9\u4e24\u79cd\u6392\u5e8f\u90fd\u662f\u9012\u5f52\u5206\u6cbb\u7684\u601d\u60f3\uff09\u3002\n\n# 2 \u975e\u6bd4\u8f83\u6392\u5e8f\n\n## 2.1 \u8ba1\u6570\u6392\u5e8f\n\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7136\u540e\u628a\u6b21\u6570\u8f6c\u6362\u6210\u6570\u5b57\u6570\u7ec4\u3002\n\n\u5b83\u53ea\u80fd\u7528\u6765\u7ed9\u6570\u5b57\u6392\u5e8f\uff0c\u800c\u4e14\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u5143\u7d20\u5e76\u4e0d\u662f\u539f\u6765\u7684\u6570\u7ec4\u5143\u7d20\uff0c\u76f8\u5f53\u4e8e\u5168\u90e8\u6362\u4e86\u4e00\u904d\uff0c\u867d\u7136\u6570\u503c\u76f8\u540c\u3002\n\n```java\n    static void countSort(int[] arr) {\n        int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;\n        for (int a : arr) {\n            if (a < min) {\n                min = a;\n            }\n            if (a > max) {\n                max = a;\n            }\n        }\n        int[] bucket = new int[max - min + 1];\n        for (int a : arr) {\n            bucket[a - min]++;\n        }\n        int cur = min;\n        int i = 0;\n        for (int b: bucket) {\n            while(b-- > 0) {\n                arr[i++] = cur;\n            }\n            cur++;\n        }\n    }\n```\n## 2.2 \u6876\u6392\u5e8f\n\u5148\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u6839\u636e\u6570\u5b57\u5927\u5c0f\u7ed9\u6570\u5b57\u5206\u7ec4\uff0c\u4e5f\u5c31\u662f\u653e\u5230\u4e0d\u540c\u7684\u201c\u6876\u201d\u91cc\u3002\u518d\u5bf9\u6876\u91cc\u7684\u6570\u5b57\u7528\u67d0\u79cd\u65b9\u6cd5\u6392\u5e8f\u3002\u7531\u4e8e\u6bcf\u4e2a\u6876\u7684\u5927\u5c0f\u4e0d\u786e\u5b9a\uff0c\u53ea\u80fd\u7528\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784`List`\u4fdd\u5b58\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6876\u91cc\u7684\u6570\u5b57\u6211\u76f4\u63a5\u7528`Collections.sort`\u65b9\u6cd5\u6392\u5e8f\u4e86\u3002\n\n```java\n    static void bucketSort(int[] arr) {\n        int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;\n        for (int a : arr) {\n            if (a < min) {\n                min = a;\n            }\n            if (a > max) {\n                max = a;\n            }\n        }\n        int dis = max - min;\n        if (dis == 0) {\n            return;\n        }\n        int bMAX = 1000;\n        int bn = dis < bMAX ? dis : bMAX;\n        int gap = dis / bn + 1;\n        List<List<Integer>> bucket = new ArrayList<>();\n        for (int i = 0; i < bn; i++) {\n            bucket.add(new ArrayList<>());\n        }\n        for (int a: arr) {\n            int i = (a - min) / gap;\n            bucket.get(i).add(a);\n        }\n        int k = 0;\n        for (int i = 0; i < bn; i++) {\n            List<Integer> bi = bucket.get(i);\n            Collections.sort(bi);\n            for (int b: bi) {\n                arr[k++] = b;\n            }\n        }\n    }\n```\n\n## 2.3 \u57fa\u6570\u6392\u5e8f\n\u628a\u6570\u5b57\u6309\u5341\u8fdb\u5236\u7684\u6bcf\u4e00\u4f4d\u6392\u5e8f\u3002\u5efa\u7acb0~9\u5341\u4e2a\u6876\uff0c\u5148\u6309\u4e2a\u4f4d\u662f\u51e0\u628a\u6570\u5b57\u653e\u8fdb\u5bf9\u5e94\u7684\u6876\u91cc\uff1b\u7136\u540e\u6309\u6876\u91cc\u987a\u5e8f\u53d6\u51fa\u6765\uff0c\u6309\u6570\u5b57\u7684\u5341\u4f4d\u653e\u8fdb\u6876\u91cc...\u76f4\u5230\u6700\u5927\u6570\u5b57\u7684\u6700\u9ad8\u4f4d\u4e3a\u6b62\u3002\n\n\u5b83\u4e5f\u662f\u4e00\u79cd\u6876\u6392\u5e8f\uff0c\u6bcf\u4e2a\u6876\u7684\u5927\u5c0f\u4e5f\u4e0d\u786e\u5b9a\uff0c\u9700\u8981\u7528`List`\u4fdd\u5b58\u3002\u5b83\u904d\u5386\u7684\u6b21\u6570\u662f\u6700\u5927\u6570\u5b57\u7684\u5341\u8fdb\u5236\u4f4d\u6570\uff0c\u6bcf\u6b21\u904d\u5386\u9700\u8981\u628a\u6570\u5b57\u4ece\u6570\u7ec4\u5012\u8fdb\u6876\u91cc\uff0c\u904d\u5386\u5b8c\u518d\u653e\u56de\u6570\u7ec4\u3002\n\n```java\n    static void radixSort(int[] arr) {\n        int max = Integer.MIN_VALUE;\n        for (int a : arr) {\n            if (a > max) {\n                max = a;\n            }\n        }\n        List<List<Integer>> bucket;\n        int m = 1;\n        while(m < max) {\n            bucket = new ArrayList<>();\n            for (int i = 0; i < 10; i++) {\n                bucket.add(new ArrayList<>());\n            }\n            for (int a: arr) {\n                int i = a / m % 10;\n                bucket.get(i).add(a);\n            }\n            int k = 0;\n            for (List<Integer> list: bucket) {\n                for (int a: list) {\n                    arr[k++] = a;\n                }\n            }\n            m *= 10;\n        }\n    }\n```\n\n## 2.4 \u7b97\u6cd5\u6548\u7387\u6bd4\u8f83\n\n\n```java\nn = 10000\ncountSort       time(ms): 2\nbucketSort      time(ms): 22\nradixSort       time(ms): 10\n\nn = 100000\ncountSort       time(ms): 11\nbucketSort      time(ms): 79\nradixSort       time(ms): 26\n\nn = 1000000\ncountSort       time(ms): 20\nbucketSort      time(ms): 280\nradixSort       time(ms): 238\n\nn = 10000000\ncountSort       time(ms): 168\nbucketSort      time(ms): 2172\nradixSort       time(ms): 2726\n```\n\u7b80\u5355\u5206\u6790\n- \u56e0\u4e3a\u53ea\u904d\u5386\u4e00\u904d\uff0c\u6240\u4ee5\u8ba1\u6570\u6392\u5e8f\u7684\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u6bd4\u53e6\u5916\u4e24\u79cd\u5feb10\u500d\uff0c\u6bd4\u524d\u9762\u8868\u73b0\u6700\u597d\u7684\u5feb\u901f\u6392\u5e8f\u8fd8\u5feb5\u500d\uff01\n- \u56e0\u4e3a\u9700\u8981\u7528\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff0c\u6876\u6392\u5e8f\u548c\u57fa\u6570\u6392\u5e8f\u6bd4\u5176\u4ed6\u7684\u9ad8\u7ea7\u6392\u5e8f\u81f3\u5c11\u6162\u4e00\u500d\u3002\n\n# 3 \u641e\u7b11\u7c7b\u6392\u5e8f\n\n# 3.1 \u7761\u7720\u6392\u5e8f\n\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u5f00\u542f\u5b50\u7ebf\u7a0b\uff0c\u6309\u6570\u5b57\u5927\u5c0f\u8bbe\u7f6e\u4e0d\u540c\u7684\u5ef6\u65f6\uff0c\u6309\u5ef6\u65f6\u7ed3\u675f\u7684\u65f6\u95f4\u5c06\u6570\u5b57\u653e\u5230\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\u4e2d\u3002\n\n> \u867d\u7136\u662f\u641e\u7b11\u7c7b\uff0c\u4f46\u662f\u7761\u7720\u6392\u5e8f\u7684\u786e\u662f\u53ef\u4ee5\u5de5\u4f5c\u7684\uff01\u5e76\u4e14\u662f\u5c06\u65f6\u95f4\u8f6c\u6362\u6210\u7a7a\u95f4\u7684\u601d\u60f3\u3002\u4e3a\u4e86\u5e76\u53d1\u5b89\u5168\uff0c\u65b0\u7684\u96c6\u5408\u4f7f\u7528\u4e86\u7ebf\u7a0b\u5b89\u5168\u7684Vector\u3002\u7761\u7720\u65f6\u95f4\u4e0d\u80fd\u8bbe\u7f6e\u5f97\u592a\u5c0f\uff0c\u9700\u8981\u7edf\u4e00\u653e\u5927\u4e00\u4e9b\uff0c\u5426\u5219\u4f1a\u53d7\u5230CPU\u8c03\u5ea6\u7b49\u65f6\u95f4\u5f71\u54cd\u3002\n\n```java\n    static void sleepSort(int[] arr) {\n        Vector<Integer> temp = new Vector<>();\n        for (int a: arr) {\n            Thread t = new Thread(){\n                @Override\n                public void run() {\n                    try {\n                        Thread.sleep(a * 10);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    temp.add(a);\n                    if (temp.size() == arr.length) {\n                        for (int i = 0; i < arr.length; i++) {\n                            arr[i] = temp.get(i);\n                        }\n                    }\n                };\n            };\n            t.start();\n        }\n    }\n```\n", "mt_excerpt": "", "title": "Java-10\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u5b9e\u73b0\u548c\u6bd4\u8f83", "dateCreated": "20220719T20:16:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495597.html", "permalink": "https://www.cnblogs.com/rome753/p/16495597.html", "postid": 16495597, "description": "![image.png](https://rome753.github.io/cdn/1896166-a530fdf68b20d5b4.png)\n\n![image.png](https://rome753.github.io/cdn/1896166-d9bee58932c41437.png)\n\n\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5171\u4e94\u79cd\uff1a\n\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u3001\u5355\u4f8b\u6a21\u5f0f\u3001\u5efa\u9020\u8005\u6a21\u5f0f\u3001\u539f\u578b\u6a21\u5f0f\u3002\n\u7ed3\u6784\u578b\u6a21\u5f0f\uff0c\u5171\u4e03\u79cd\uff1a\n\u9002\u914d\u5668\u6a21\u5f0f\u3001\u88c5\u9970\u5668\u6a21\u5f0f\u3001\u4ee3\u7406\u6a21\u5f0f\u3001\u5916\u89c2\u6a21\u5f0f\u3001\u6865\u63a5\u6a21\u5f0f\u3001\u7ec4\u5408\u6a21\u5f0f\u3001\u4eab\u5143\u6a21\u5f0f\u3002\n\u884c\u4e3a\u578b\u6a21\u5f0f\uff0c\u5171\u5341\u4e00\u79cd\uff1a\n\u7b56\u7565\u6a21\u5f0f\u3001\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u3001\u89c2\u8005\u6a21\u5f0f\u3001\u8fed\u4ee3\u5668\u6a21\u5f0f\u3001\u8d23\u4efb\u94fe\u6a21\u5f0f\u3001\u547d\u4ee4\u6a21\u5f0f\u3001\u5907\u5fd8\u5f55\u6a21\u5f0f\u3001\u72b6\u6001\u6a21\u5f0f\u3001\u8bbf\u95ee\u8005\u6a21\u5f0f\u3001\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3001\u89e3\u91ca\u5668\u6a21\u5f0f\u3002\n\nhttps://www.runoob.com/design-pattern/design-pattern-tutorial.html\nJava\u7684\u5b8c\u6574\u603b\u7ed3\uff0c\u67e5\u8be2\u5f88\u65b9\u4fbf\n\nhttps://github.com/JsonChao/Awesome-Android-Notebook/blob/master/notes/Android%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E9%A1%BB%E6%8E%8C%E6%8F%A1%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md\nJava\u4e2d\u7684\u5e38\u7528\u603b\u7ed3\nhttps://www.cnblogs.com/pony1223/p/7608955.html\n\u5f88\u8be6\u7ec6\uff0c\u6709\u56fe\nhttps://zhuanlan.zhihu.com/p/136592911\n\u51e0\u79cd\u5e38\u7528\u7684\u4ecb\u7ecd\uff0cdemo\u5f88\u751f\u52a8\n\n\u4e0a\u9762\u662f\u627e\u7684\u4e00\u4e9b\u8d44\u6599\u3002\n\n# \u524d\u8a00\n\u8bbe\u8ba1\u6a21\u5f0f\u5bf9\u8f6f\u4ef6\u5f00\u53d1\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u7406\u89e3\u8bbe\u8ba1\u6a21\u5f0f\u9700\u8981\u4e00\u5b9a\u7684\u4ee3\u7801\u7ecf\u9a8c\uff0c\u5982\u679c\u7ecf\u9a8c\u4e0d\u8db3\uff0c\u9762\u5bf9\u51e0\u5341\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5927\u90e8\u5206\u6ca1\u5199\u8fc7\u4e5f\u6ca1\u89c1\u8fc7\uff0c\u80af\u5b9a\u96be\u4ee5\u638c\u63e1\u3002\u6216\u8bb8\u4e3a\u4e86\u5199\u800c\u5199\uff0c\u5728\u9879\u76ee\u91cc\u5f3a\u884c\u585e\u8fdb\u53bb\u51e0\u4e2a\uff0c\u7136\u540e\u4ece\u8111\u6d77\u641c\u522e\u51fa\u6765\u4ea4\u7ed9\u9762\u8bd5\u5b98\u3002\n\n\u5176\u5b9e\u8bbe\u8ba1\u6a21\u5f0f\u662f\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u81ea\u7136\u884c\u4e3a\uff0c\u6709\u53ef\u80fd\u5199\u4ee3\u7801\u65f6\u4e0d\u77e5\u4e0d\u89c9\u4f7f\u7528\u4e86\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4ece\u4ee3\u7801\u4e2d\u603b\u7ed3\u51fa\u6765\u7684\uff0c\u5148\u6709\u4ee3\u7801\uff0c\u540e\u6709\u8bbe\u8ba1\u6a21\u5f0f\u3002\u4f60\u4e5f\u5b8c\u5168\u53ef\u4ee5\u4ece\u4ee3\u7801\u4e2d\u603b\u7ed3\u51fa\u4e00\u79cd\u65b0\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\n\n\u6709\u4e86\u4e00\u4e9b\u5e74\u5f00\u53d1\u7ecf\u9a8c\uff0c\u518d\u56de\u5934\u770b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5c31\u80fd\u53d1\u73b0\u5b83\u4eec\u90fd\u662f\u5f88\u7b80\u5355\u81ea\u7136\u7684\uff08\u5982\u679c\u4e00\u4e2a\u6a21\u5f0f\u5f88\u590d\u6742\u96be\u4ee5\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u8981\u53bb\u7528\u5b83\uff1f\uff09\uff0c\u5728\u8bbe\u8ba1\u67b6\u6784\u6216\u8005\u4f18\u5316\u4ee3\u7801\u65f6\uff0c\u53ef\u4ee5\u81ea\u7136\u5730\u8003\u8651\u67d0\u4e2a\u5730\u65b9\u53ef\u4ee5\u4f7f\u7528\u54ea\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u3002\u8fd8\u6709\u4e00\u70b9\uff0c\u5c31\u662f\u4e0d\u540c\u7684\u5f00\u53d1\uff1a\u524d\u7aef\u3001\u540e\u7aef\u3001SDK\u7b49\uff0c\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u63a5\u89e6\u548c\u4f7f\u7528\u80af\u5b9a\u662f\u4e0d\u540c\u7684\u3002\u6211\u4ece\u4e00\u4e2a\u591a\u5e74Android APP\u5f00\u53d1\u8005\u7684\u89d2\u5ea6\uff0c\u603b\u7ed3\u4e00\u4e0b23\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u3002\u4e2a\u4eba\u6c34\u5e73\u6709\u9650\uff0c\u6709\u4e0d\u51c6\u786e\u5904\u8fd8\u8bf7\u6307\u51fa\u3002\n\n> \u56e0\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\u7684\u793a\u4f8b\u4ee3\u7801\u548c\u7c7b\u56fe\u5728\u7f51\u4e0a\u90fd\u5f88\u5bb9\u6613\u627e\u5230\uff0c\u6211\u5c31\u4e0d\u518d\u590d\u5236\uff0c\u4e3b\u8981\u4ee5\u5f88\u7b80\u5355\u7684\u8bed\u8a00\u63cf\u8ff0\u4f7f\u7528\u65b9\u6cd5\u3001\u4f7f\u7528\u573a\u666f\u3001\u6a21\u5f0f\u7684\u672c\u8d28\u7b49\u3002\n\n# 1 \u521b\u5efa\u578b\n\n#### \u5355\u4f8b\u6a21\u5f0f\uff1a\u67d0\u4e2a\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u63d0\u4f9b\u4e00\u4e2a\u5168\u5c40\u7684\u8bbf\u95ee\u70b9\u3002\n\n\u5355\u4f8b\u6a21\u5f0f\u662f\u5927\u90e8\u5206\u5f00\u53d1\u8005\u63a5\u89e6\u7684\u7b2c\u4e00\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5b83\u4e00\u822c\u7528\u6765\u505a\u4e00\u4e9b\u4e1a\u52a1\u903b\u8f91\u7ba1\u7406\u7c7b\uff0c\u6216\u8005\u7528\u6765\u4fdd\u5b58\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\u3002\u5b89\u5353\u4e0d\u9f13\u52b1\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff08\u9f13\u52b1\u5e8f\u5217\u5316\u4f20\u53c2\uff0c\u5b9e\u9645\u4e0a\u76f8\u5f53\u7e41\u7410\uff0c\u5c24\u5176\u662f\u4f20\u53c2\u5c42\u7ea7\u591a\u65f6\uff09\uff0c\u7528\u5355\u4f8b\u7ba1\u7406\u5168\u53e5\u53d8\u91cf\u4fbf\u4e8e\u7edf\u4e00\u521d\u59cb\u5316\u6216\u9500\u6bc1\u3002\n\n\u5355\u4f8b\u6a21\u5f0f\u5728Java\u91cc\u6709\u597d\u51e0\u79cd\u5199\u6cd5\uff0c\u4e3b\u8981\u8003\u8651\u4e24\u70b9\uff1a\u521b\u5efa\u65f6\u673a\u548c\u9ad8\u5e76\u53d1\u5931\u6548\u3002\u5728\u7c7b\u52a0\u8f7d\u65f6\u63d0\u524d\u521b\u5efa\uff08\u997f\u6c49\u5f0f\uff09\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u4f1a\u5360\u7528\u5185\u5b58\u548c\u5f71\u54cd\u542f\u52a8\u901f\u5ea6\uff1b\u4f7f\u7528\u65f6\u521b\u5efa\uff08\u61d2\u6c49\u5f0f\uff09\u9700\u8981\u8003\u8651\u9ad8\u5e76\u53d1\u5931\u6548\uff0c\u4e5f\u5c31\u662f\u521b\u5efa\u5b9e\u4f8b\u65f6\u591a\u4e2a\u7ebf\u7a0b\u6324\u8fdb\u6765\uff0c\u5bfc\u81f4\u521b\u5efa\u591a\u4e2a\u5b9e\u4f8b\uff0c\u6807\u51c6\u5199\u6cd5\u662f\u7528DCL\u52a0volatile\u5173\u952e\u5b57\u3002\u5176\u5b9e\u4e0d\u540c\u4e8e\u670d\u52a1\u7aef\u5f00\u53d1\uff0c\u5b89\u5353\u91cc\u5f88\u5c11\u6709\u9ad8\u5e76\u53d1\u573a\u666f\u3002\n\n> \u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u9759\u6001\u5168\u5c40\u5bf9\u8c61\u7684\u521b\u5efa\u3002\n\n#### \u7b80\u5355\u5de5\u5382\uff1a\u4e00\u4e2a\u5de5\u5382\u7c7b\u6839\u636e\u4f20\u5165\u7684\u53c2\u91cf\u51b3\u5b9a\u521b\u5efa\u51fa\u90a3\u4e00\u79cd\u4ea7\u54c1\u7c7b\u7684\u5b9e\u4f8b\u3002\n\n\u5de5\u5382\u6a21\u5f0f\u662f\u5c06\u521b\u5efa\u7c7b\u5b9e\u4f8b\u7684\u65b9\u6cd5\u5c01\u88c5\u5230\u4e00\u4e2a\u5de5\u5177\u7c7b\u91cc\u9762\u3002\u6709\u7684\u7c7b\u521b\u5efa\u6bd4\u8f83\u9ebb\u70e6\u3001\u5c5e\u6027\u5f88\u591a\uff0c\u6bd4\u5982\u521b\u5efa\u4e00\u4e2aView\u9700\u8981\u8bbe\u7f6e\u5f88\u591a\u5c5e\u6027\uff1a\u5927\u5c0f\u3001\u989c\u8272\u3001\u5b57\u4f53\u3001\u95f4\u8ddd\u7b49\u7b49\uff0c\u8fd9\u4e9b\u5c5e\u6027\u53c8\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u5c01\u88c5\u5230\u5de5\u5382\u7c7b\u91cc\u9762\uff0c\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd\u8bbe\u7f6e\u76f8\u540c\u5c5e\u6027\u3002\n\n> \u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u5c01\u88c5\u3002\n\n#### \u62bd\u8c61\u5de5\u5382\uff1a\u521b\u5efa\u76f8\u5173\u6216\u4f9d\u8d56\u5bf9\u8c61\u7684\u5bb6\u65cf\uff0c\u800c\u65e0\u9700\u660e\u786e\u6307\u5b9a\u5177\u4f53\u7c7b\u3002\n\n\u62bd\u8c61\u5de5\u5382\u662f\u5728\u5de5\u5382\u57fa\u7840\u4e0a\u505a\u4e00\u70b9\u6269\u5c55\uff0c\u5c06\u5de5\u5382\u7684\u65b9\u6cd5\u62bd\u8c61\u6210\u63a5\u53e3\uff0c\u7136\u540e\u53ef\u4ee5\u6709\u591a\u4e2a\u5de5\u5382\u7c7b\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u7684\u5de5\u5382\u7c7b\uff0c\u901a\u8fc7\u76f8\u540c\u63a5\u53e3\u8c03\u7528\u4e0d\u540c\u5de5\u5382\u7684\u521b\u5efa\u65b9\u6cd5\u3002\n\n\u8bf4\u5b9e\u8bdd\uff0c\u63a5\u53e3\u548c\u591a\u6001\u662fOOP\u7684\u57fa\u672c\u7279\u6027\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0\u5230\u5de5\u5382\u4e0a\u9762\u6765\u5f3a\u8c03\u4e00\u4e2a\u62bd\u8c61\u5de5\u5382\uff0c\u6211\u4e0d\u662f\u5f88\u7406\u89e3\u3002\u5b89\u5353\u91cc\u4e5f\u6682\u65f6\u6ca1\u60f3\u5230\u4f7f\u7528\u7684\u5730\u65b9\u3002\n\n> \u672c\u8d28\u5c31\u662f\u5de5\u5382\u52a0\u4e0a\u63a5\u53e3\u548c\u591a\u6001\u3002\n\n#### \u5efa\u9020\u8005\u6a21\u5f0f\uff1a\u5c01\u88c5\u4e00\u4e2a\u590d\u6742\u5bf9\u8c61\u7684\u6784\u5efa\u8fc7\u7a0b\uff0c\u5e76\u53ef\u4ee5\u6309\u6b65\u9aa4\u6784\u9020\u3002\n\n\u5efa\u9020\u8005\u6a21\u5f0f\u662f\u5f53\u4e00\u4e2a\u7c7b\u5c5e\u6027\u5f88\u591a\u3001\u521b\u5efa\u8fc7\u7a0b\u6bd4\u8f83\u590d\u6742\u65f6\uff0c\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u4e2aBuilder\u7c7b\uff0c\u5728Builder\u91cc\u914d\u7f6e\u597d\u9ed8\u8ba4\u5c5e\u6027\uff0c\u63d0\u4f9b\u6bcf\u4e2a\u5c5e\u6027\u7684\u5355\u72ecset\u65b9\u6cd5\uff0c\u6700\u540e\u7528\u914d\u7f6e\u597d\u7684\u5c5e\u6027\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u51fa\u6765\u3002\n\n\u5728\u5b89\u5353\u91cc\u4f7f\u7528\u6bd4\u8f83\u591a\uff0c\u5178\u578b\u7684\u5c31\u662f\u521b\u5efa\u5f39\u7a97\uff0c\u7528Builder\u8bbe\u7f6e\u6807\u9898\u3001\u6587\u672c\u3001\u6309\u94ae\u3001\u70b9\u51fb\u4e8b\u4ef6\u7b49\u3002\u5f00\u53d1\u8005\u81ea\u5df1\u5c01\u88c5\u6765\u8bf4\uff0c\u53ef\u80fdSDK\u91cc\u9762\u4f1a\u7528\u5230\u591a\u4e00\u70b9\uff0c\u4e00\u822c\u521b\u5efa\u5bf9\u8c61\u4e5f\u4e0d\u662f\u5f88\u5fc5\u8981\u4f7f\u7528\u3002\n\n\u5b83\u8ddf\u5de5\u5382\u6709\u5565\u533a\u522b\u5462\uff1f\u5b83\u7684\u4f7f\u7528\u573a\u666f\u662f\u5c5e\u6027\u53d8\u5316\u6bd4\u8f83\u5927\uff0c\u6709\u7684\u5c5e\u6027\u9700\u8981\u8bbe\u7f6e\u6709\u7684\u4e0d\u9700\u8981\uff0c\u90a3\u4e48\u7528Builder\u7ba1\u7406\uff1a\u201c\u4e0d\u7ba1\u4f60\u600e\u4e48\u914d\u7f6e\u5c5e\u6027\uff0c\u6211\u6700\u540e\u90fd\u7ed9\u4f60\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u51fa\u6765\u201d\u3002\u5728\u6ca1\u6709\u5b83\u4e4b\u524d\uff0c\u6211\u4eec\u80af\u5b9a\u8981\u5199\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\u4f20\u4e0d\u540c\u53c2\u6570\uff0c\u65b9\u6cd5\u91cc\u9762\u4e5f\u4f1a\u6709\u91cd\u590d\u4ee3\u7801\u3002\n\n> \u672c\u8d28\u5c31\u662f\u5b9e\u4f8b\u521b\u5efa\u7684\u5c01\u88c5\u3002\n\n#### \u539f\u578b\u6a21\u5f0f\uff1a\u901a\u8fc7\u590d\u5236\u73b0\u6709\u7684\u5b9e\u4f8b\u6765\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b\u3002\n\n\u539f\u578b\u6a21\u5f0f\u662f\u5f53\u4e00\u4e2a\u7c7b\u521b\u5efa\u6210\u672c\u6bd4\u8f83\u9ad8\u65f6\uff08\u6bd4\u5982\u9700\u8981\u67e5\u6570\u636e\u5e93\uff09\uff0c\u590d\u5236\u73b0\u6709\u5bf9\u8c61\u6765\u4ea7\u751f\u65b0\u5bf9\u8c61\u3002Java\u91cc\u9700\u8981\u5229\u7528Cloneable\u673a\u5236\u3002Cloneable\u9ed8\u8ba4\u662f\u6d45\u62f7\u8d1d\u7684\uff0c\u4e5f\u5c31\u662f\u53ea\u62f7\u8d1d\u5f15\u7528\uff0c\u6df1\u62f7\u8d1d\u9700\u8981\u81ea\u5df1\u5728Clone()\u65b9\u6cd5\u91cc\u9762\u53bb\u5b9e\u73b0\u3002\n\n\u5f88\u5c11\u770b\u5230\u6709\u76f4\u63a5\u4f7f\u7528\u7684\u3002\u6709\u4e00\u4e9b\u573a\u666f\u662f\u5229\u7528\u73b0\u6709\u5bf9\u8c61\u521b\u5efa\u65b0\u5bf9\u8c61\uff0c\u4f46\u662f\u6ca1\u6709\u7528clone()\u65b9\u6cd5\uff0c\u4e0d\u77e5\u9053\u8fd9\u7b97\u4e0d\u7b97\u4f7f\u7528\u4e86\u539f\u578b\u6a21\u5f0f\u3002\n\n> \u672c\u8d28\u662f\u5229\u7528\u7f16\u7a0b\u8bed\u8a00\u7684\u514b\u9686\u673a\u5236\u6765\u521b\u5efa\u65b0\u5bf9\u8c61\u3002\n\n # 2 \u7ed3\u6784\u578b\n\n#### \u4eab\u5143\uff08\u8747\u91cf\uff09\u6a21\u5f0f\uff1a\u901a\u8fc7\u5171\u4eab\u6280\u672f\u6765\u6709\u6548\u7684\u652f\u6301\u5927\u91cf\u7ec6\u7c92\u5ea6\u7684\u5bf9\u8c61\u3002\n\n\u4eab\u5143\u6a21\u5f0f\u662f\u5c06\u4e00\u4e9b\u9700\u8981\u7ecf\u5e38\u4f7f\u7528\u7684\u5bf9\u8c61\u521b\u5efa\u5e76\u7f13\u5b58\u8d77\u6765\u3002\u8fd9\u662f\u4e00\u79cd\u5f88\u7b80\u5355\u53c8\u5f88\u5e38\u7528\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\u6211\u8ba4\u4e3a\u5b83\u6bd4\u5355\u4f8b\u66f4\u666e\u904d\u4f7f\u7528\uff0c\u56e0\u4e3aJava\u91cc\u7684\u5e38\u7528\u6570\u5b57\u59820,1,2...\u5c31\u662f\u865a\u62df\u673a\u63d0\u524d\u521b\u5efa\u7684\u5bf9\u8c61\u3002\u5b89\u5353\u91cc\u9762\u7684\u5217\u8868\u9879\u4f1a\u5728\u5c55\u793a\u524d\u63d0\u524d\u521b\u5efa\uff0c\u5e76\u4e14\u4f1a\u7f13\u5b58\u8d77\u6765\uff0c\u4ee5\u4fdd\u8bc1\u6ed1\u52a8\u6d41\u7545\uff08\u7f13\u5b58\u7684\u91cd\u8981\u6027\u4e0d\u8a00\u800c\u55bb\uff0c\u5c31\u662f\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff09\u3002\n\n> \u672c\u8d28\u5c31\u662f\u7f13\u5b58\u4e00\u4e9b\u5bf9\u8c61\u3002\n\n#### \u5916\u89c2\u6a21\u5f0f\uff1a\u5bf9\u5916\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u65b9\u6cd5\uff0c\u6765\u8bbf\u95ee\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7fa4\u63a5\u53e3\u3002\n\n\u5916\u89c2\u6a21\u5f0f\u662f\u4e00\u4e2a\u6a21\u5757\u5bf9\u5916\u63d0\u4f9b\u51e0\u4e2a\u8c03\u7528\u65b9\u6cd5\uff0c\u9690\u85cf\u6a21\u5757\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\u3002\u8fd9\u662f\u5f88\u81ea\u7136\u7684\u5c01\u88c5\u3002\u73b0\u5b9e\u4e2d\u7684\u5f88\u591a\u4e1c\u897f\uff0c\u6bd4\u5982\u7535\u89c6\u673a\uff1a\u5185\u90e8\u7535\u8def\u5f88\u590d\u6742\uff0c\u5916\u9762\u5374\u53ea\u6709\u51e0\u4e2a\u6309\u94ae\uff0c\u5c31\u662f\u76f8\u540c\u7684\u601d\u60f3\u3002\n\n\u4f7f\u7528\u975e\u5e38\u666e\u904d\uff0c\u53ef\u4ee5\u8bf4\u53ea\u8981\u6709\u6a21\u5757\u548c\u5c01\u88c5\uff0c\u5c31\u4f1a\u7528\u5230\u5916\u89c2\u6a21\u5f0f\u3002\n\n> \u672c\u8d28\u5c31\u662f\u5c01\u88c5\u3002\n\n#### \u9002\u914d\u5668\u6a21\u5f0f\uff1a\u5c06\u4e00\u4e2a\u7c7b\u7684\u65b9\u6cd5\u63a5\u53e3\u8f6c\u6362\u6210\u5ba2\u6237\u5e0c\u671b\u7684\u53e6\u5916\u4e00\u4e2a\u63a5\u53e3\u3002\n\u9002\u914d\u5668\u6a21\u5f0f\u662f\u7528\u4e00\u4e2a\u9002\u914d\u5668\u7c7b\u5305\u88c5\u67d0\u4e00\u63a5\u53e3\u5b9e\u73b0\u5bf9\u8c61\uff0c\u5e76\u5b9e\u73b0\u53e6\u4e00\u4e2a\u63a5\u53e3\u3002\u5b83\u7528\u6765\u505a\u4e24\u4e2a\u63a5\u53e3\u95f4\u7684\u9002\u914d\u3002\u7b80\u5355\u5730\u8bf4\uff0cC\u7c7b\u5b9e\u73b0\u4e86I1\u63a5\u53e3\uff0c\u73b0\u5728\u8981\u652f\u6301I2\u63a5\u53e3\uff0c\u90a3\u4e48\u7528Adapter\u7c7b\u5b9e\u73b0I2\u63a5\u53e3\uff0c\u63d0\u4f9b\u7ed9C\u7c7b\uff08\u8c03\u7528C\u7c7b\u65b9\u6cd5\uff09\u3002\u8fd9\u6837\u76f8\u5f53\u4e8e\u5728\u4e0d\u4fee\u6539C\u7c7b\u7684\u6761\u4ef6\u4e0b\uff0c\u8ba9\u4ed6\u652f\u6301\u4e86I2\u63a5\u53e3\u3002\u8fd9\u4e5f\u662f\u73b0\u5b9e\u4e2d\u5f88\u5e38\u89c1\u7684\uff0c\u6bd4\u5982\u201c\u7535\u6e90\u9002\u914d\u5668\u201d\u5c31\u662f\u76f8\u540c\u7684\u601d\u60f3\uff1a\u624b\u673a\uff08C\u7c7b\uff09\u5b9e\u73b0\u4e865V\u4f9b\u7535\u63a5\u53e3\uff08I1\uff09\uff0c\u73b0\u5728\u600e\u4e48\u8ba9\u5b83\u652f\u6301220V\u8f93\u5165\uff08I2\uff09\u5462\uff0c\u7528\u7535\u6e90\u9002\u914d\u5668\u5b9e\u73b0220V\uff0c\u63d0\u4f9b\u7ed9\u624b\u673a\u3002\n\n\u9002\u914d\u5668\u8ba9\u67d0\u4e2a\u7c7b\u652f\u6301\u4e86\u65b0\u7684\u63a5\u53e3\uff0c\u6709\u70b9\u50cf\u88c5\u9970\u6a21\u5f0f\uff0c\u4f46\u5b83\u4e3b\u8981\u662f\u9488\u5bf9\u63a5\u53e3\u8f6c\u6362\u7684\u3002\n\n> \u672c\u8d28\u5c31\u662f\u7c7b\u7684\u5f15\u7528\u3002\n\n#### \u88c5\u9970\u6a21\u5f0f\uff1a\u52a8\u6001\u7684\u7ed9\u5bf9\u8c61\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u3002\n\u88c5\u9970\u6a21\u5f0f\u662f\u5728\u5305\u88c5\u7c7b\u91cc\u9762\u7ed9\u539f\u7c7b\u63d0\u4f9b\u65b0\u7684\u529f\u80fd\uff0c\u4e5f\u5c31\u662f\u65b0\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u5b83\u6bd4\u7ee7\u627f\u66f4\u7075\u6d3b\u4e00\u70b9\u3002\u4e3a\u5565\u7528\u5b83\u4e0d\u7528\u7ee7\u627f\u5462\uff0c\u8fd9\u8ddf\u5177\u4f53\u7c7b\u7684\u5b9a\u4e49\u6709\u5173\uff0c\u5982\u679c\u65b0\u7684\u529f\u80fd\u8ddf\u539f\u6709\u7684\u7c7b\u5173\u7cfb\u4e0d\u5927\uff0c\u90a3\u4e48\u7528\u7ee7\u627f\u5c31\u4e0d\u5408\u9002\u3002\u6bd4\u5982\u6709\u4e2a\u6253\u5370\u673a\u7c7b\uff0c\u9ed1\u767d\u6253\u5370\u673a\u548c\u5f69\u8272\u6253\u5370\u673a\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u5b50\u7c7b\uff0c\u4f46\u662f\u589e\u52a0\u4e86\u97f3\u4e50\u64ad\u653e\u529f\u80fd\u540e\uff0c\u8fd9\u4e2a\u201c\u6253\u5370\u64ad\u653e\u5668\u201d\u5c31\u4e0d\u9002\u5408\u7ee7\u627f\u6253\u5370\u673a\u4e86\u3002\n\n\u5b83\u8ddf\u9002\u914d\u5668\u6a21\u5f0f\u7684\u533a\u522b\u662f\u5b83\u4e0d\u9488\u5bf9\u67d0\u4e2a\u63a5\u53e3\u529f\u80fd\u3002\n\n> \u672c\u8d28\u4e5f\u662f\u7c7b\u7684\u5f15\u7528\u3002\n\n#### \u7ec4\u5408\u6a21\u5f0f\uff1a\u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u5f62\u7ed3\u6784\u4ee5\u8868\u793a\u201c\u201d\u90e8\u5206-\u6574\u4f53\u201c\u201d\u7684\u5c42\u6b21\u7ed3\u6784\u3002\n\u7ec4\u5408\u6a21\u5f0f\u7b80\u5355\u7406\u89e3\u5c31\u662f\u6811\u72b6\u7ed3\u6784\uff0c\u5404\u8f6f\u4ef6\u7684\u83dc\u5355\u7ed3\u6784\u3001Java\u96c6\u5408\u7684\u7ee7\u627f\u7ed3\u6784\u3001\u5b89\u5353View\u7684\u7ee7\u627f\u673a\u6784\u90fd\u662f\u8fd9\u79cd\u3002\u4e0d\u591a\u8bf4\uff0c\u5f88\u597d\u7406\u89e3\u3002\n\nApp\u4e2d\u5982\u679c\u6709\u590d\u6742\u83dc\u5355\u53ef\u4ee5\u7528\u7ec4\u5408\u6a21\u5f0f\uff0cSDK\u5f00\u53d1\u4e2d\u5982\u679c\u6709\u4e00\u4e9b\u7c7b\u662f\u6811\u72b6\u5173\u7cfb\u4e5f\u53ef\u4ee5\u7528\u3002\n\n> \u672c\u8d28\u5c31\u662f\u6811\u72b6\u7ed3\u6784\u3002\n\n#### \u4ee3\u7406\u6a21\u5f0f\uff1a\u4e3a\u5176\u4ed6\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406\u4ee5\u4fbf\u63a7\u5236\u8fd9\u4e2a\u5bf9\u8c61\u7684\u8bbf\u95ee\u3002\n\u4ee3\u7406\u6a21\u5f0f\u662f\u7ed9\u67d0\u4e2a\u7c7b\u6dfb\u52a0\u8bbf\u95ee\u63a7\u5236\uff0c\u7528\u53e6\u4e00\u4e2a\u7c7b\u4ee3\u7406\u539f\u7c7b\u7684\u67d0\u4e2a\u63a5\u53e3\u65b9\u6cd5\u3002\u5b83\u662f\u8fea\u7c73\u7279\u539f\u5219\u7684\u76f4\u63a5\u5b9e\u73b0\uff0c\u4e5f\u5c31\u662f\u662f\u4f9d\u8d56\u6700\u5c0f\u7684\u63a5\u53e3\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u5982\u679c\u9700\u8981\u67d0\u4e2a\u63a5\u53e3I1\u7684\u529f\u80fd\uff0cC\u7c7b\u5b9e\u73b0\u4e86I1\u63a5\u53e3\uff0c\u90a3\u4e48\u7528\u4ee3\u7406\u7c7bProxy\u5f15\u7528C\u7c7b\uff0c\u8c03\u7528\u8005\u53ea\u4f9d\u8d56\u4ee3\u7406\u7c7b\uff0c\u4e0d\u4f9d\u8d56C\u7c7b\u3002\n\n\u8c03\u7528\u8005\u76f4\u63a5\u4f9d\u8d56\u63a5\u53e3\u4e0d\u662f\u66f4\u7b80\u5355\u5417\uff1f\u4ee3\u7406\u7c7b\u9664\u4e86\u63d0\u4f9b\u63a5\u53e3\u5b9e\u73b0\uff0c\u8fd8\u80fd\u505a\u4e00\u4e9b\u8bbf\u95ee\u63a7\u5236\u3002\n\n\u666e\u901a\u7684\u4ee3\u7801\u5b9e\u73b0\u662f\u9759\u6001\u4ee3\u7406\uff1bJava\u53cd\u5c04\u673a\u5236\u63d0\u4f9b\u4e86Proxy.newProxyInstance()\u65b9\u6cd5\u6765\u521b\u5efa\u4ee3\u7406\u5bf9\u8c61\uff0c\u5c31\u4e0d\u9700\u8981\u5199\u4ee3\u7406\u7c7b\u4e86\uff0c\u53eb\u505a\u52a8\u6001\u4ee3\u7406\uff1b\u8fd8\u6709\u4e00\u4e9b\u6846\u67b6\u63d0\u4f9b\u4e86\u522b\u7684\u4ee3\u7406\u65b9\u5f0f\u3002\u4e00\u822c\u6765\u8bf4\u9759\u6001\u4ee3\u7406\u4f7f\u7528\u591a\u4e00\u70b9\uff0c\u5176\u4ed6\u7684\u591a\u7528\u4e8e\u8f83\u590d\u6742\u7684\u67b6\u6784\u8bbe\u8ba1\u3002\n\n> \u672c\u8d28\u5c31\u662f\u7c7b\u7684\u5f15\u7528\u3002\n\n#### \u6865\u63a5\u6a21\u5f0f\uff1a\u5c06\u62bd\u8c61\u90e8\u5206\u548c\u5b83\u7684\u5b9e\u73b0\u90e8\u5206\u5206\u79bb\uff0c\u4f7f\u5b83\u4eec\u90fd\u53ef\u4ee5\u72ec\u7acb\u7684\u53d8\u5316\u3002\n\u6865\u63a5\u6a21\u5f0f\u4e0d\u662f\u5f88\u597d\u7406\u89e3\uff0c[\u8fd9\u7bc7\u6587\u7ae0](https://www.runoob.com/w3cnote/bridge-pattern2.html)\u8bb2\u5f97\u5f88\u6e05\u695a\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u5b83\u662f\u7528\u5173\u8054\u5173\u7cfb\u6765\u4ee3\u66ff\u7ee7\u627f\u5173\u7cfb\uff0c\u9632\u6b62\u7ee7\u627f\u7c7b\u592a\u591a\u3002\u4e5f\u5c31\u662f\u628a\u4e24\u4e2a\u7c7b\u6865\u63a5\u8d77\u6765\u3002\u6bd4\u5982\u56fe\u5f62\u6709\u5f62\u72b6\u548c\u989c\u8272\uff0c\u53ef\u4ee5\u628a\u989c\u8272\u4f5c\u4e3a\u5f62\u72b6\u7684\u4e00\u79cd\u5c5e\u6027\uff0c\u90a3\u4e48\u5706\u5f62\u3001\u77e9\u5f62\u90fd\u6709\u989c\u8272\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u7528\u7ea2\u8272\u5706\u5f62\u3001\u9ed1\u8272\u5706\u5f62\u6765\u7ee7\u627f\u5706\u5f62\u3002\u8fd9\u4e48\u4e00\u60f3\uff0c\u6865\u63a5\u6a21\u5f0f\u5c31\u662f\u4e00\u79cd\u5f88\u666e\u904d\u7684\u6a21\u5f0f\u4e86\uff0c\u56e0\u4e3a\u5f88\u591a\u7c7b\u90fd\u5305\u542b\u4e86\u72ec\u7acb\u53d8\u5316\u7684\u5c5e\u6027\u3002\n\n\u65e2\u7136\u53ea\u662f\u7c7b\u7684\u5c5e\u6027\uff0c\u4e3a\u4ec0\u4e48\u8981\u5f3a\u8c03\u6865\u63a5\u5462\uff1f\u6211\u8ba4\u4e3a\u8fd9\u6d89\u53ca\u5230\u4ee3\u7801\u91cd\u6784\uff0c\u5c06\u4e0d\u9002\u5408\u7ee7\u627f\u7684\u4ee3\u7801\u6574\u7406\u4e3a\u6865\u63a5\uff0c\u662f\u4e00\u79cd\u4f18\u5316\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\u5f53\u7136\u7528\u63a5\u53e3\u5173\u8054\u4ee3\u66ff\u7c7b\u5173\u8054\u5c31\u4e0d\u7528\u518d\u5f3a\u8c03\u4e86\u3002\n\n> \u672c\u8d28\u5c31\u662f\u7c7b\u7684\u5173\u8054\u3002\n\n # 3 \u884c\u4e3a\u578b\n\n#### \u8fed\u4ee3\u5668\u6a21\u5f0f\uff1a\u4e00\u79cd\u904d\u5386\u8bbf\u95ee\u805a\u5408\u5bf9\u8c61\u4e2d\u5404\u4e2a\u5143\u7d20\u7684\u65b9\u6cd5\uff0c\u4e0d\u66b4\u9732\u8be5\u5bf9\u8c61\u7684\u5185\u90e8\u7ed3\u6784\u3002\n\u8fed\u4ee3\u5668\u6a21\u5f0f\u5c31\u662f\u96c6\u5408\u7684Iterator\u3002\n\n> \u672c\u8d28\u5c31\u662f\u63a5\u53e3\u5c01\u88c5\u3002\n\n\n#### \u89c2\u5bdf\u8005\u6a21\u5f0f\uff1a\u5bf9\u8c61\u95f4\u7684\u4e00\u5bf9\u591a\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\n\u89c2\u5bdf\u8005\u6a21\u5f0f\u5c31\u662f\u6ce8\u518c\u76d1\u542c\u548c\u53d1\u9001\u901a\u77e5\u3002\u5c06\u4e00\u4e2a\u7c7b\u7684\u5c5e\u6027\u53d8\u5316\u901a\u77e5\u4e00\u7cfb\u5217\u63d0\u524d\u6ce8\u518c\u7684\u89c2\u5bdf\u8005\u3002\u8fd9\u5728GUI\u91cc\u9762\u662f\u5f88\u666e\u904d\u7684\u3002\u4e00\u822c\u5728\u7c7b\u91cc\u521b\u5efa\u96c6\u5408\u5bf9\u8c61\uff0c\u6dfb\u52a0\u89c2\u5bdf\u8005\uff0c\u4e8b\u4ef6\u53d1\u751f\u65f6\u904d\u5386\u96c6\u5408\u6328\u4e2a\u901a\u77e5\u89c2\u5bdf\u8005\u3002\n\nJava\u63d0\u4f9b\u4e86\u539f\u751f\u7684Observer\uff0c\u867d\u7136\u5f88\u5c11\u7528\uff1b\u5b89\u5353\u91cc\u7684\u5e7f\u64ad\u5c31\u662f\u7cfb\u7edf\u5e2e\u4f60\u904d\u5386\u5e7f\u64ad\u63a5\u6536\u8005\u3002\n\n> \u672c\u8d28\u5c31\u662f\u96c6\u5408\u904d\u5386\u3002\n\n#### \u6a21\u677f\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7b97\u6cd5\u7ed3\u6784\uff0c\u800c\u5c06\u4e00\u4e9b\u6b65\u9aa4\u5ef6\u8fdf\u5230\u5b50\u7c7b\u5b9e\u73b0\u3002\n\u6a21\u677f\u65b9\u6cd5\u662f\u7236\u7c7b\u5b9a\u4e49\u64cd\u4f5c\u6b65\u9aa4\u4e5f\u5c31\u662f\u51e0\u4e2a\u65b9\u6cd5\u7684\u8c03\u7528\u987a\u5e8f\uff0c\u5b50\u7c7b\u5b9e\u73b0\u5176\u4e2d\u7684\u4e00\u4e2a\u6216\u51e0\u4e2a\u5177\u4f53\u65b9\u6cd5\u3002\n\n\u5728\u7c7b\u7ee7\u627f\u91cc\u5f88\u5e38\u89c1\uff1a\u7236\u7c7b\u5927\u591a\u6570\u64cd\u4f5c\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u53ea\u6709\u5176\u4e2d\u4e00\u4e24\u4e2a\u65b9\u6cd5\u9700\u8981\u5b50\u7c7b\u91cd\u5199\u65f6\u53ef\u4ee5\u8ba4\u4e3a\u662f\u6a21\u677f\u6a21\u5f0f\u3002\n\n> \u672c\u8d28\u5c31\u662f\u7ee7\u627f\u548c\u591a\u6001\u3002\n\n#### \u89e3\u91ca\u5668\u6a21\u5f0f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u8bed\u8a00\uff0c\u5b9a\u4e49\u5b83\u7684\u6587\u6cd5\u7684\u4e00\u79cd\u8868\u793a\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2a\u89e3\u91ca\u5668\u3002\n\u7b80\u5355\u5730\u7406\u89e3\u5b83\u5c31\u662f\u89e3\u6790\u4e00\u4e2a\u53e5\u5b50\uff0c\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u3001\u8868\u8fbe\u5f0f\u6216\u8005SQL\u3002\n\n\u4f7f\u7528\u573a\u666f\u5f88\u6709\u9650\uff0c\u6781\u5c11\u9700\u8981\u5f00\u53d1\u8005\u81ea\u5df1\u53bb\u5b9a\u4e49\u3002\n\n> \u672c\u8d28\u662f\u5b57\u7b26\u4e32\u89e3\u6790\u3002\n\n#### \u7b56\u7565\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e00\u7cfb\u5217\u7b97\u6cd5\uff0c\u628a\u4ed6\u4eec\u5c01\u88c5\u8d77\u6765\uff0c\u5e76\u4e14\u4f7f\u5b83\u4eec\u53ef\u4ee5\u76f8\u4e92\u66ff\u6362\u3002\n\u7b56\u7565\u6a21\u5f0f\u662f\u5c06\u4e0d\u540c\u6761\u4ef6\u7684\u64cd\u4f5c\u5c01\u88c5\u5230\u51e0\u4e2a\u7b56\u7565\u5b50\u7c7b\u91cc\u9762\uff0c\u907f\u514d\u5199\u5f88\u591aif else\u5224\u65ad\u3002\u8fd9\u662f\u4e00\u79cd\u6bd4\u8f83\u5e38\u7528\u7684\u6a21\u5f0f\uff0c\u5f80\u5f80\u7528\u6765\u91cd\u6784if else\u4ee3\u7801\u3002\n\n> \u672c\u8d28\u4e5f\u662f\u7ee7\u627f\u548c\u591a\u6001\u3002\n\n#### \u72b6\u6001\u6a21\u5f0f\uff1a\u5141\u8bb8\u4e00\u4e2a\u5bf9\u8c61\u5728\u5176\u5bf9\u8c61\u5185\u90e8\u72b6\u6001\u6539\u53d8\u65f6\u6539\u53d8\u5b83\u7684\u884c\u4e3a\u3002\n\u72b6\u6001\u6a21\u5f0f\u5c31\u662f\u5bf9\u8c61\u6839\u636e\u5b83\u7684\u4e00\u4e2a\u5c5e\u6027\u7684\u53d8\u5316\u6539\u53d8\u81ea\u5df1\u7684\u72b6\u6001\u3002\u8fd9\u662f\u4e00\u79cd\u5f88\u81ea\u7136\u548c\u5e38\u7528\u7684\u6a21\u5f0f\u3002\u6bd4\u5982\u4e00\u4e2a\u6309\u94ae\u6709\u9009\u4e2d\u72b6\u6001\uff0c\u9009\u4e2d\u72b6\u6001\u53d8\u5316\u65f6\u7ed9\u5b83\u8bbe\u7f6e\u4e0d\u540c\u7684\u56fe\u7247\u6587\u5b57\u3002\n\nJava\u91cc\u9762\u76d1\u542c\u5c5e\u6027\u53d8\u5316\u9700\u8981\u76f4\u63a5\u8c03\u7528set\u65b9\u6cd5\uff0c\u6709\u7684\u8bed\u8a00\u63d0\u4f9b\u4e86\u5c5e\u6027\u5185\u90e8\u7684set\u65b9\u6cd5\uff0c\u53ea\u8981\u5c5e\u6027\u53d8\u5316\u5c31\u80fd\u6536\u5230\u76d1\u542c\uff0c\u66f4\u65b9\u4fbf\u4e00\u4e9b\u3002\n\n> \u672c\u8d28\u5c31\u662f\u5c5e\u6027\u76d1\u542c\u3002\n\n#### \u5907\u5fd8\u5f55\u6a21\u5f0f\uff1a\u5728\u4e0d\u7834\u574f\u5c01\u88c5\u7684\u524d\u63d0\u4e0b\uff0c\u4fdd\u6301\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\u3002\n\u5907\u5fd8\u5f55\u6a21\u5f0f\u5c31\u662f\u5728\u5916\u90e8\u4fdd\u5b58\u5bf9\u8c61\u72b6\u6001\uff0c\u4fbf\u4e8e\u6062\u590d\u5230\u67d0\u4e2a\u72b6\u6001\u3002\u8fd9\u662f\u4e00\u79cd\u5f88\u5e38\u7528\u7684\u6a21\u5f0f\uff0c\u6bd4\u5982\u6e38\u620f\u5b58\u6863\u3001\u6587\u672c\u7f16\u8f91\u5668\u7684Ctrl+z\u3001\u7248\u672c\u7ba1\u7406git\u7b49\u3002\u4e0d\u540c\u5907\u5fd8\u5f55\u5bf9\u4fdd\u5b58\u548c\u6062\u590d\u8981\u6c42\u662f\u4e0d\u540c\u7684\u3002\n\n> \u672c\u8d28\u662f\u4fdd\u5b58\u548c\u6062\u590d\u5bf9\u8c61\u3002\n\n### \u4e2d\u4ecb\u8005\u6a21\u5f0f\uff1a\u7528\u4e00\u4e2a\u4e2d\u4ecb\u5bf9\u8c61\u6765\u5c01\u88c5\u4e00\u7cfb\u5217\u7684\u5bf9\u8c61\u4ea4\u4e92\u3002\n\u4e2d\u4ecb\u6a21\u5f0f\u5c31\u662f\u5728\u4e00\u4e2a\u4e2d\u4ecb\u7c7b\u91cc\u9762\u5904\u7406\u53e6\u5916\u4e24\u4e2a\u7c7b\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002\u5b83\u53ef\u4ee5\u964d\u4f4e\u7c7b\u7684\u8026\u5408\uff0c\u662f\u975e\u5e38\u5e38\u7528\u7684\u3002\n\n\u5b89\u5353\u91cc\u9762\u5404\u79cd\u67b6\u6784\uff1aMVC\u3001MVP\u3001MVVM\u5c42\u51fa\u4e0d\u7a77\u773c\u82b1\u7f2d\u4e71\uff0c\u5176\u5b9e\u90fd\u662f\u4e2d\u4ecb\u8005\u6a21\u5f0f\uff0c\u533a\u522b\u65e0\u975e\u662fView\u548cModel\u7684\u5f15\u7528\u653e\u5230\u54ea\u4e2a\u7c7b\u91cc\u3002\n\n\u5b83\u8ddf\u4ee3\u7406\u6a21\u5f0f\u6709\u70b9\u76f8\u4f3c\uff0c\u4f46\u662f\u4ee3\u7406\u6a21\u5f0f\u662f\u9488\u5bf9\u67d0\u4e2a\u63a5\u53e3\u7684\u3002\n\n> \u672c\u8d28\u5c31\u662f\u7c7b\u7684\u5f15\u7528\u3002\n\n#### \u547d\u4ee4\u6a21\u5f0f\uff1a\u5c06\u547d\u4ee4\u8bf7\u6c42\u5c01\u88c5\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f7f\u5f97\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u8bf7\u6c42\u6765\u8fdb\u884c\u53c2\u6570\u5316\u3002\n\u547d\u4ee4\u6a21\u5f0f\u4e0d\u662f\u5f88\u76f4\u89c2\u3002\u7b80\u5355\u7406\u89e3\u5982\u679c\u6709\u591a\u4e2a\u64cd\u4f5c\u547d\u4ee4\uff0c\u6bd4\u5982\u70b9\u51fb\u4e0d\u540c\u6309\u94ae\u3001CMD\u4e0d\u540c\u6307\u4ee4\uff0c\u7edf\u4e00\u547d\u4ee4\u5904\u7406\u63a5\u53e3\uff0c\u6839\u636e\u547d\u4ee4\u7c7b\u578b\u7531\u4e0d\u540c\u7684\u63a5\u53e3\u5b9e\u73b0\u7c7b\u5904\u7406\u3002\u6709\u65f6\u8fd8\u9700\u8981\u8003\u8651\u547d\u4ee4\u7684\u8bb0\u5f55\u3001\u64a4\u56de\u3001\u91cd\u505a\u7b49\u3002\n\n> \u672c\u8d28\u5c31\u662f\u63a5\u53e3\u548c\u591a\u6001\u3002\n\n#### \u8bbf\u95ee\u8005\u6a21\u5f0f\uff1a\u5728\u4e0d\u6539\u53d8\u6570\u636e\u7ed3\u6784\u7684\u524d\u63d0\u4e0b\uff0c\u589e\u52a0\u4f5c\u7528\u4e8e\u4e00\u7ec4\u5bf9\u8c61\u5143\u7d20\u7684\u65b0\u529f\u80fd\u3002\n\u8bbf\u95ee\u8005\u6a21\u5f0f[\u8fd9\u7bc7\u6587\u7ae0](https://blog.csdn.net/d303577562/article/details/118903874)\u8bb2\u89e3\u6bd4\u8f83\u8be6\u7ec6\u3002\u6211\u7684\u7406\u89e3\u5b83\u5c31\u662f\u5bf9\u4e00\u4e9b\u6570\u636e\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u8bbf\u95ee\u65b9\u5f0f\uff0c\u5b83\u5c4f\u853d\u4e86\u6570\u636e\u7684\u5185\u90e8\u7ec6\u8282\uff0c\u4e5f\u4e0d\u6539\u53d8\u6570\u636e\u3002\u6bd4\u5982\u5b89\u5353\u91cc\u7528MediaStore\u8bbf\u95ee\u76f8\u518c\u3002\n\n\u5b83\u8ddf\u5916\u89c2\u6a21\u5f0f\u6709\u70b9\u50cf\uff0c\u4e0d\u8fc7\u5916\u89c2\u6a21\u5f0f\u662f\u9488\u5bf9\u6a21\u5757\u7684\u8c03\u7528\uff0c\u5b83\u662f\u9488\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u3002\u800c\u4e14\u5916\u89c2\u6a21\u5f0f\u5bf9\u5916\u53ea\u63d0\u4f9b\u4e00\u4e2a\u8c03\u7528\u7c7b\uff0c\u5b83\u9488\u5bf9\u6570\u636e\u53ef\u4ee5\u6709\u591a\u79cd\u8bbf\u95ee\u7c7b\u3002\n\n> \u672c\u8d28\u5c31\u662f\u5c01\u88c5\u3002\n\n#### \u8d23\u4efb\u94fe\u6a21\u5f0f\uff1a\u5c06\u8bf7\u6c42\u7684\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u89e3\u8026\uff0c\u4f7f\u7684\u591a\u4e2a\u5bf9\u8c61\u90fd\u6709\u5904\u7406\u8fd9\u4e2a\u8bf7\u6c42\u7684\u673a\u4f1a\u3002\n\u8d23\u4efb\u94fe\u6a21\u5f0f\u7279\u70b9\u5f88\u660e\u663e\uff0c\u5c31\u662f\u4e00\u4e2a\u53d1\u9001\u5bf9\u8c61\u6709\u591a\u4e2a\u63a5\u6536\u8005\u5904\u7406\uff0c\u8fd9\u4e9b\u63a5\u6536\u8005\u4f9d\u6b21\u5904\u7406\uff0c\u4f20\u7ed9\u4e0b\u4e2a\u5904\u7406\u8005\u6216\u8005\u4e0d\u4f20\u3002\u5b89\u5353\u91cc\u7684\u6709\u5e8f\u5e7f\u64ad\u3001\u89e6\u6478\u4e8b\u4ef6\u4f20\u9012\u3001\u7f51\u7edc\u8bf7\u6c42\u7684\u62e6\u622a\u5668\u7b49\u90fd\u662f\u8d23\u4efb\u94fe\u6a21\u5f0f\u3002\n\n\u5b83\u8ddf\u89c2\u5bdf\u8005\u6a21\u5f0f\u6709\u70b9\u50cf\uff0c\u4e0d\u8fc7\u89c2\u5bdf\u8005\u6a21\u5f0f\u4e00\u822c\u662f\u6240\u6709\u63a5\u6536\u8005\u540c\u65f6\u5904\u7406\u4e8b\u4ef6\uff0c\u6ca1\u6709\u94fe\u5f0f\u4f20\u9012\u4e8b\u4ef6\u3002\n\n> \u672c\u8d28\u5c31\u662f\u94fe\u5f0f\u8c03\u7528\u3002\n\n# 4 \u8bbe\u8ba1\u6a21\u5f0f\u7684\u672c\u8d28\n\n\u6211\u603b\u7ed3\u4e86\u4e00\u4e0b23\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u7684\u672c\u8d28\uff0c\u89c1\u4e0b\u56fe\u3002\n\n\u5176\u4e2d10\u79cd\u662fOOP\u4e09\u5927\u7279\u6027\u5c01\u88c5\u7ee7\u627f\u591a\u6001\u7684\u76f4\u63a5\u4f53\u73b0\uff0c\u5269\u4e0b\u7684\u5219\u5229\u7528\u4e86\u4e00\u4e9b\u7f16\u7a0b\u7279\u6027\uff1a3\u79cd\u5229\u7528\u4e86\u7f13\u5b58\u673a\u5236\uff0c6\u79cd\u5229\u7528\u4e86\u5f15\u7528\uff08\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6301\u6709\u5f53\u524d\u5bf9\u8c61\uff09\uff0c4\u79cd\u5229\u7528\u4e86\u65b9\u6cd5\uff08\u8fdb\u884c\u5177\u4f53\u64cd\u4f5c\uff09\u3002\u6bcf\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\u90fd\u6709\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5173\u952e\u8bcd\uff0c\u4fbf\u4e8e\u5feb\u901f\u56de\u60f3\u5b83\u7684\u7528\u9014\u3002\n\n![\u622a\u5c4f2022-04-12 \u4e0a\u534810.29.02.png](https://rome753.github.io/cdn/1896166-041e78feda116e73.png)\n", "mt_excerpt": "", "title": "23\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u7684\u603b\u7ed3\u4e0e\u601d\u8003", "dateCreated": "20220719T20:16:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495589.html", "permalink": "https://www.cnblogs.com/rome753/p/16495589.html", "postid": 16495589, "description": "\u6709\u4e9b\u7279\u6b8a\u7684\u9700\u6c42\u9700\u8981\u6279\u91cf\u4fee\u6539\u56fe\u7247\u7684md5\u54c8\u5e0c\u503c\uff0cmd5\u662f\u6587\u4ef6\u7684\u552f\u4e00\u6807\u793a\uff0c\u5b83\u662f\u6839\u636e\u6587\u4ef6\u7684\u6240\u6709\u5b57\u8282\u8fd0\u7b97\u5f97\u6765\u7684\u3002\u53ea\u8981\u6587\u4ef6\u6570\u636e\u6709\u53d8\u5316\uff0cmd5\u5c31\u4f1a\u6539\u53d8\u3002\n\n#1 \u65b9\u6848\n\n\u56fe\u7247\u7684\u6570\u636e\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u56fe\u7247\u5185\u5bb9\u548c\u63cf\u8ff0\u4fe1\u606f\uff0c\u5185\u5bb9\u662f\u4e8c\u8fdb\u5236\u7684\uff0c\u63cf\u8ff0\u4fe1\u606f\u662f\u6587\u672c\u7c7b\u578b\uff0c\u53ef\u4ee5\u8bfb\u53d6\u548c\u4fee\u6539\u3002\u752816\u8fdb\u5236\u6587\u672c\u7f16\u8f91\u5668\u67e5\u770b\u56fe\u7247\uff1a\n![image.png](https://rome753.github.io/cdn/1896166-ac795a30b48b25ea.png)\n\n\n\u4fee\u6539\u56fe\u7247md5\u4e5f\u5c31\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\n\n1. \u5982\u679c\u76f4\u63a5\u4fee\u6539\u56fe\u7247\u5185\u5bb9\u7684\u4e8c\u8fdb\u5236\uff0c\u53ef\u80fd\u4f1a\u635f\u574f\u56fe\u7247\u3002\u5982\u679c\u7528\u56fe\u7247\u5de5\u5177\u4fee\u6539\u56fe\u7247\u7684\u50cf\u7d20\uff0c\u4e0d\u4f1a\u635f\u574f\u56fe\u7247\uff0c\u4f46\u662f\u6548\u7387\u6bd4\u8f83\u4f4e\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u4fee\u6539\u540e\u6ca1\u6709\u89c6\u89c9\u5dee\u5f02\u3002\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u53ef\u884c\u3002\n\n2. \u5982\u679c\u4fee\u6539\u56fe\u7247\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u4e0d\u4f1a\u5bf9\u5185\u5bb9\u6709\u4efb\u4f55\u5f71\u54cd\u3002\u4e5f\u80fd\u4fdd\u8bc1md5\u503c\u6539\u53d8\u3002\n\n#2 \u5de5\u5177\n##2.1 \u7f16\u8f91jpg\u548cpng\u56fe\u7247\nexiftool [https://exiftool.org/](https://exiftool.org/)\nexiftool\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u4ee5\u8bfb\u53d6\u548c\u4fee\u6539\u51e0\u4e4e\u6240\u6709\u56fe\u7247\u683c\u5f0f\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u8bf4\u201c\u51e0\u4e4e\u201d\u662f\u56e0\u4e3a\u5b83\u4e0d\u80fd\u4fee\u6539webp\u56fe\u7247(webp\u662f\u4e00\u79cd\u4f53\u79ef\u5f88\u5c0f\uff0c\u4f7f\u7528\u8f83\u591a\u7684\u56fe\u7247\u683c\u5f0f)\u3002\n\n\u6309\u7167\u5b98\u65b9\u8bf4\u660e\u5b89\u88c5\u597d\u4e4b\u540e\uff0c\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u547d\u4ee4\u884c\u8f93\u5165\n```exiftool a.png```\n\u5c31\u53ef\u4ee5\u83b7\u53d6\u56fe\u7247\u7684exif\u4fe1\u606f\u4e86\uff1a\n\n![image.png](https://rome753.github.io/cdn/1896166-fbc1fb1f83f3e36d.png)\n\n\u5199\u5165\u4fe1\u606f\u7c7b\u4f3c\uff0c\u6bd4\u5982\u8981\u5199\u5165\u4e00\u4e2acomment\n```exiftool -comment=\"1234567890\" a.png```\n![image.png](https://rome753.github.io/cdn/1896166-dac10731ce32b3aa.png)\n\n\u67e5\u770b\u53ef\u4ee5\u770b\u5230comment\u5df2\u7ecf\u5199\u8fdb\u53bb\u4e86\u3002\u6bd4\u8f83\u5199\u5165\u524d\u540e\u56fe\u7247md5\uff0c\u53d1\u73b0\u5df2\u7ecf\u6539\u53d8\u4e86\u3002\n\n## 2.2 \u7f16\u8f91webp\u56fe\u7247\n[https://developers.google.com/speed/webp](https://developers.google.com/speed/webp)\n\u7f16\u8f91webp\u7684exif\u4fe1\u606f\u9700\u8981\u4f7f\u7528Google\u5b98\u65b9\u7684\u5de5\u5177\uff0c\u5b89\u88c5\u597d\u547d\u4ee4\u884c\u5de5\u5177\u540e\uff0c\u4f7f\u7528webpmux\u547d\u4ee4\n```\nAdd EXIF metadata: \u6dfb\u52a0exif\u4fe1\u606f\nwebpmux -set exif image_metadata.exif in.webp -o exif_container.webp\n\nExtract EXIF metadata: \u8bfb\u53d6exif\u4fe1\u606f\nwebpmux -get exif exif_container.webp -o image_metadata.exif\n```\n\u6dfb\u52a0exif\u4fe1\u606f\u9700\u8981\u63d0\u4f9bimage_metadata.exif\u6587\u4ef6\uff0c\uff08\u8fd9\u4e2a\u683c\u5f0f\u7684\u6587\u4ef6\u6ca1\u6709\u89c1\u8fc7\uff0c\u627e\u4e86\u5f88\u591awebp\u6587\u4ef6\u8bfb\u53d6\u4e5f\u6ca1\u6709\u8bfb\u51fa\u6765\uff09\u3002\n\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6a.exif\uff0c\u5728\u91cc\u9762\u8f93\u5165\"1234567890\"\uff08\u4efb\u610f\u5b57\u7b26\u4e32\uff09\uff0c\u7528\u5982\u4e0b\u547d\u4ee4\u90fd\u53ef\u4ee5\u5199\u8fdb\u56fe\u7247\u3002\n```webpmux -set exif a.exif a.webp -o a.webp```\n\n![image.png](https://rome753.github.io/cdn/1896166-31586a6b6eacdb7f.png)\n\n```webpmux -get exif a.webp -o b.exif```\n\u5c06exif\u4fe1\u606f\u8bfb\u53d6\u5230b.exif\u6587\u4ef6\u4e2d\uff0c\u5185\u5bb9\u8ddf\u5199\u8fdba.exif\u7684\u4e00\u81f4\u3002\n\n# 3 \u6279\u5904\u7406\n\u4f7f\u7528Java\u8c03\u7528\u547d\u4ee4\u884c\u5c31\u53ef\u4ee5\u8fdb\u884c\u6279\u91cf\u5904\u7406\u4e86\u3002\n\nJava\u6267\u884c\u547d\u4ee4\u884c:\n```Runtime.getRuntime().exec(exec)```\n\n\u9012\u5f52\u5904\u7406\u6587\u4ef6\u5939\n```\n    /**\n     * \u9012\u5f52\u4fee\u6539\u56fe\u7247exif\u4fe1\u606f\n     * @param path \u6587\u4ef6\u6216\u6587\u4ef6\u5939\u8def\u5f84\n     * @param comment \u5199\u5165\u7684\u6570\u636e\n     * @param commentFile \u5305\u542b\u5199\u5165\u6570\u636e\u7684exif\u6587\u4ef6\n     */\n    public static void editExifRecurve(String path, String comment, String commentFile) {\n        File file = new File(path);\n        if (file.isDirectory()) {\n            File[] files = file.listFiles();\n            if (files != null) {\n                log(\"dir \" + file.getAbsolutePath());\n                for (File f : files) {\n                    editExifRecurve(f.getAbsolutePath(), comment, commentFile);\n                }\n            }\n        } else {\n            editExif(path, comment, commentFile);\n        }\n    }\n\n    public static void editExif(String path, String comment, String commentFile) {\n        String low = path.toLowerCase();\n        String exec = \"\";\n        if (low.endsWith(\".jpg\") || low.endsWith(\".jpeg\") || low.endsWith(\".png\")) {\n            exec = \"exiftool -comment=\" + comment + \" \" + path;\n        } else if(low.endsWith(\".webp\")) {\n            exec = \"webpmux -set exif \" + commentFile + \" \" + path + \" -o \" + path;\n        } else {\n            return;\n        }\n\n        // File file = new File(path);\n        // String md5Old = MessageDigestUtil.getFileMD5String(file);\n        try {\n            Runtime.getRuntime().exec(exec);\n            // Runtime.getRuntime().exec(exec).waitFor();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        // String md5New = MessageDigestUtil.getFileMD5String(file);\n        // String res = md5New.equals(md5Old) ? \"x\" : \"\u221a\";\n        // log(res + \" md5 \" + md5Old + \" -> \" + md5New + \" \" + file.getName());\n    }\n```\n", "mt_excerpt": "", "title": "\u7f16\u8f91exif\u4fe1\u606f\uff0c\u6279\u91cf\u4fee\u6539\u56fe\u7247md5", "dateCreated": "20220719T20:15:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495591.html", "permalink": "https://www.cnblogs.com/rome753/p/16495591.html", "postid": 16495591, "description": "![rome753.github.io](https://rome753.github.io/cdn/1896166-79219c5cc2640f14.gif)\n[\u8bbf\u95ee\u535a\u5ba2](https://rome753.github.io)\n\n# 0 \u8d77\u56e0\n\u4e00\u76f4\u5728\u7b80\u4e66\u4e0a\u5199\u535a\u5ba2\uff0c\u4e66\u5199\u548c\u4f20\u56fe\u5f88\u65b9\u4fbf\uff0c\u7f3a\u70b9\u662f\u4e2a\u4eba\u4e3b\u9875\u592a\u8fc7\u7b80\u964b\u3002\u6211\u8bd5\u4e86\u4e00\u4e0b\u4e2a\u4eba\u535a\u5ba2Hexo\uff0c\u53d1\u73b0\u867d\u7136\u529f\u80fd\u5f88\u5f3a\u5927\uff0c\u53ef\u5b9a\u5236\u6027\u4e5f\u5f88\u9ad8\uff0c\u7136\u800c\u5b9a\u5236\u8d77\u6765\u4e5f\u5f88\u9ebb\u70e6\uff0c\u5927\u90e8\u5206\u53ea\u80fd\u6539\u6539\u989c\u8272\u6837\u5f0f\u6392\u7248\u7b49\u3002\u6211\u60f3\u505a\u7684\u662f\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u4e2a\u4eba\u535a\u5ba2\u9875\u9762\uff0c\u6bd4\u5982\u6709\u6811\u72b6\u56fe\u3001\u7269\u7406\u78b0\u649e\u6216\u8005WebGL 3D\u6548\u679c\u7b49\u3002\n\n\u5148\u505a\u4e2a\u7269\u7406\u78b0\u649e\u7684\u9875\u9762\u8bd5\u8bd5\uff1a\u6bcf\u7bc7\u535a\u5ba2\u6807\u9898\u662f\u4e00\u4e2a\u77e9\u5f62\u65b9\u5757\uff0c\u53ef\u4ee5\u7528\u9f20\u6807\u62d6\u52a8\u3001\u6709\u5760\u843d\u78b0\u649e\u53cd\u5f39\u7b49\u3002\n\n# 1 box2d.js\u7814\u7a76\n\u4ee5\u524d\u7814\u7a76\u8fc7Box2D\u7269\u7406\u5f15\u64ce\uff0c\u5728Github\u4e0a\u627e\u4e86\u4e00\u4e0b\u7f51\u9875\u7248\u7684[box2d.js](https://github.com/kripken/box2d.js)\uff0c\u5176\u5b9e\u5b83\u662f\u7528Emscripten\u5c06Box2D\u7684C++\u4ee3\u7801\u76f4\u63a5\u7f16\u8bd1\u6210JavaScript\u7684\uff0c\u4f7f\u7528\u65b9\u6cd5\u57fa\u672c\u8ddfBox2D\u4e00\u6837\u3002\u770b\u4e86\u4e00\u4e0b\u5b83\u7684[testbed](http://www.iforce2d.net/embox2d/testbed.html)\u5b9e\u4f8b\uff0c\u6548\u679c\u4e0d\u9519\uff0c\u53ef\u4ee5\u6ee1\u8db3\u6211\u7684\u8981\u6c42\u3002\n\n\u628abox2d.js\u4e0b\u8f7d\u4e0b\u6765\uff0c\u7528VSCode\u6253\u5f00\uff0c\u6211\u4eec\u9700\u8981\u7684\u4ee3\u7801\u5728demo/html5canvas\u91cc\u9762\u3002\n![\u622a\u5c4f2022-07-14 11.00.05.png](https://rome753.github.io/cdn/1896166-420a0e232aa5d4f1.png)\n\n\u641c\u7d22\u5b89\u88c5\u4e00\u4e0bLive Preview\u63d2\u4ef6\uff0c\u6ce8\u610f\u662f\u5fae\u8f6f\u5b98\u65b9\u5f00\u53d1\u7684\uff0c\u5b83\u53ef\u4ee5\u5728\u9884\u89c8\u7f51\u9875\u65f6\u81ea\u52a8\u542f\u52a8\u4e00\u4e2ahttp\u670d\u52a1\u5668\uff0c\u8fd9\u6837\u5c31\u80fd\u6b63\u5e38\u9884\u89c8\u7f51\u9875\u4e86\u3002\u6253\u5f00testbed.html\u6587\u4ef6\uff0c\u70b9\u53f3\u4e0a\u89d2\u7684\u56fe\u6807\u6253\u5f00\u9884\u89c8\uff0c\u5c31\u80fd\u5728\u5f00\u53d1\u4e2d\u5b9e\u65f6\u9884\u89c8\uff0c\u6781\u5176\u65b9\u4fbf\uff01\n\n\u7814\u7a76\u4e00\u4e0b\u8fd9\u4e2aDemo\u9879\u76ee\uff1a\n\n- testbed.html\n\u7ed8\u5236\u7684\u753b\u5e03\u5c31\u662f\u8fd9\u4e2acanvas\uff0c\u53ef\u4ee5\u4fee\u6539\u5bbd\u9ad8\u7b49\u3002\n```html\n\n    <body>\n        <div style=\"text-align:center\">\n            <h2>Emscripten Box2D demo</h2>\n\n            <div style=\"margin:auto;width:640px;padding:2px;border:1px solid #888;text-align:left\">            \n            \n                <!--<canvas id=\"canvas\" width=\"480\" height=\"320\" tabindex='1'></canvas>-->\n                <canvas id=\"canvas\" width=\"640\" height=\"480\" tabindex='1'></canvas>\n```\n\n- test\u76ee\u5f55\n\u8fd9\u91cc\u9762\u662fBox2D\u7684\u6d4b\u8bd5\u96c6\u5408\uff0c\u6bcf\u4e2a\u6587\u4ef6\u4ee3\u8868\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u91cc\u4e3b\u8981\u662f\u5728setup\u65b9\u6cd5\u91cc\u521b\u5efaBox2D\u6a21\u578b\u3002\n```java\nembox2dTest_fallingShapes.prototype.setup = function() {\n\n    //ground edges\n    var shape0 = new b2EdgeShape();\n    shape0.Set(new b2Vec2(-40.0, -6.0), new b2Vec2(40.0, -6.0));\n    groundBody.CreateFixture(shape0, 0.0);\n    shape0.Set(new b2Vec2(-9.0, -6.0), new b2Vec2(-9.0, -4.0));\n    groundBody.CreateFixture(shape0, 0.0);\n    shape0.Set(new b2Vec2(9.0, -6.0), new b2Vec2(9.0, -4.0));\n    groundBody.CreateFixture(shape0, 0.0);\n\n    NUMRANGE.forEach(function(i) {\n        var bd = new b2BodyDef();\n        // bd.set_type(b2_dynamicBody);\n        bd.set_type(Module.b2_dynamicBody);\n        bd.set_position(ZERO);\n        var body = world.CreateBody(bd);\n        var randomValue = Math.random();\n        if ( randomValue < 0.2 )\n            body.CreateFixture(cshape, 1.0);\n        else\n            body.CreateFixture(createRandomPolygonShape(0.5), 1.0);\n        temp.Set(16*(Math.random()-0.5), 4.0 + 2.5*i);\n        body.SetTransform(temp, 0.0);\n        body.SetLinearVelocity(ZERO);\n        body.SetAwake(1);\n        body.SetActive(1);\n    });\n\n```\n\n- embox2d-html5canvas-testbed.js\n\u8fd9\u4e2a\u7c7b\u662f\u6700\u91cd\u8981\u7684\u529f\u80fd\u6240\u5728\uff0c\u5206\u4e3a\u521b\u5efaWorld\u3001\u7ed8\u5236\u548c\u5904\u7406\u9f20\u6807\u65f6\u95f4\u4e09\u90e8\u5206\u3002\n\n\u521b\u5efaWorld\u548c\u7ed8\u5236\n```java\n\nfunction createWorld() {\n    \n    if ( world != null ) \n        Box2D.destroy(world);\n        \n    world = new Box2D.b2World( new Box2D.b2Vec2(0.0, -10.0) );\n    world.SetDebugDraw(myDebugDraw);\n    \n    mouseJointGroundBody = world.CreateBody( new Box2D.b2BodyDef() );\n    \n    var e = document.getElementById(\"testSelection\");\n    var v = e.options[e.selectedIndex].value;\n    \n    eval( \"currentTest = new \"+v+\"();\" );\n    \n    currentTest.setup();\n}\n\nfunction resetScene() {\n    createWorld();\n    draw();\n}\n\nfunction step(timestamp) {\n    \n    if ( currentTest && currentTest.step ) \n        currentTest.step();\n    \n    if ( ! showStats ) {\n        world.Step(1/60, 3, 2);\n        draw();\n        return;\n    }\n    \n    var current = Date.now();\n    world.Step(1/60, 3, 2);\n    var frametime = (Date.now() - current);\n    frameTime60 = frameTime60 * (59/60) + frametime * (1/60);\n    \n    draw();\n    statusUpdateCounter++;\n    if ( statusUpdateCounter > 20 ) {\n        updateStats();\n        statusUpdateCounter = 0;\n    }\n}\n\nfunction draw() {\n    \n    //black background\n    context.fillStyle = 'rgb(0,0,0)';\n    context.fillRect( 0, 0, canvas.width, canvas.height );\n    \n    context.save();            \n        context.translate(canvasOffset.x, canvasOffset.y);\n        context.scale(1,-1);                \n        context.scale(PTM,PTM);\n        context.lineWidth /= PTM;\n        \n        drawAxes(context);\n        \n        context.fillStyle = 'rgb(255,255,0)';\n        world.DrawDebugData();\n        \n        if ( mouseJoint != null ) {\n            //mouse joint is not drawn with regular joints in debug draw\n            var p1 = mouseJoint.GetAnchorB();\n            var p2 = mouseJoint.GetTarget();\n            context.strokeStyle = 'rgb(204,204,204)';\n            context.beginPath();\n            context.moveTo(p1.get_x(),p1.get_y());\n            context.lineTo(p2.get_x(),p2.get_y());\n            context.stroke();\n        }\n        \n    context.restore();\n}\n```\n> \u6ce8\u610f\uff1aDebugDraw\u7684\u7ed8\u5236\u662f\u5728helpers/embox2d-html5canvas-debugDraw.js\u8fd9\u4e2a\u7c7b\u91cc\uff0c\u8c03\u8bd5\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u5f00\u542fDebugDraw\uff0c\u4e0d\u7136\u6709\u65f6\u627e\u4e0d\u5230\u81ea\u5df1\u6dfb\u52a0\u7684\u7269\u4f53\u8dd1\u54ea\u91cc\u53bb\u4e86\u3002DebugDraw\u628a\u7269\u4f53\u5206\u89e3\u6210\u70b9\u548c\u7ebf\u4e86\uff0c\u53ea\u80fd\u7528\u6765\u7ed8\u5236\u7269\u4f53\u8f6e\u5ed3\uff0c\u8981\u7ed8\u5236\u771f\u6b63\u7684\u56fe\u5f62\u9700\u8981\u904d\u5386World\u91cc\u7684body\u96c6\u5408\uff0c\u6839\u636ebody\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u89d2\u5ea6\u7ed8\u5236\u3002\n\n\n\u5904\u7406\u9f20\u6807\u4e8b\u4ef6\n\u901a\u8fc7QueryAABB\u65b9\u6cd5\u627e\u5230\u9f20\u6807\u4e8b\u4ef6\u5728World\u91cc\u7684\u70b9\uff0c\u521b\u5efamouseJoint\u7528\u6765\u62d6\u52a8\u7269\u4f53\u3002\n```java\n\nfunction startMouseJoint() {\n    \n    if ( mouseJoint != null )\n        return;\n    \n    // Make a small box.\n    var aabb = new Box2D.b2AABB();\n    var d = 0.001;            \n    aabb.set_lowerBound(new b2Vec2(mousePosWorld.x - d, mousePosWorld.y - d));\n    aabb.set_upperBound(new b2Vec2(mousePosWorld.x + d, mousePosWorld.y + d));\n    \n    // Query the world for overlapping shapes.            \n    myQueryCallback.m_fixture = null;\n    myQueryCallback.m_point = new Box2D.b2Vec2(mousePosWorld.x, mousePosWorld.y);\n    world.QueryAABB(myQueryCallback, aabb);\n    \n    if (myQueryCallback.m_fixture)\n    {\n        var body = myQueryCallback.m_fixture.GetBody();\n        var md = new Box2D.b2MouseJointDef();\n        md.set_bodyA(mouseJointGroundBody);\n        md.set_bodyB(body);\n        md.set_target( new Box2D.b2Vec2(mousePosWorld.x, mousePosWorld.y) );\n        md.set_maxForce( 1000 * body.GetMass() );\n        md.set_collideConnected(true);\n        \n        mouseJoint = Box2D.castObject( world.CreateJoint(md), Box2D.b2MouseJoint );\n        body.SetAwake(true);\n    }\n}\n\n```\n\n# 2 \u6293\u53d6\u535a\u5ba2\u8bb0\u5f55\n\n\u6211\u8981\u83b7\u53d6\u81ea\u5df1\u5728\u7b80\u4e66\u7684\u5168\u90e8\u535a\u5ba2\u8bb0\u5f55\uff0c\u4e3b\u8981\u662f\u6bcf\u4e00\u7bc7\u7684\u6807\u9898\u548c\u94fe\u63a5\u3002\u6807\u9898\u7528\u6765\u653e\u8fdbBox2D\u4e2d\uff0c\u94fe\u63a5\u7528\u6765\u70b9\u51fb\u8df3\u8f6c\u3002\u641c\u4e86\u4e00\u4e0b\uff0c\u7b80\u4e66\u6709\u975e\u516c\u5f00\u7684api\u53ef\u4ee5\u62c9\u53d6\u3002\n\nhttps://blog.csdn.net/weixin_40508682/article/details/88577733\n\u8fd9\u7bc7\u6587\u7ae0\u8bb2\u5230\u4e86\u5177\u4f53\u63a5\u53e3\u3002\n\n\u9996\u5148\u62c9\u53d6\u5168\u90e8\u6587\u7ae0\uff0c\u7136\u540e\u628a\u6807\u9898\u5904\u7406\u6210\u56fe\u7247\uff0c\u6700\u540e\u5728\u7f51\u9875\u91cc\u8bfb\u53d6\u56fe\u7247\u548c\u5176\u4ed6\u4fe1\u606f\u3002\u524d\u4e24\u6b65\u7528python\u5904\u7406\u3002\n\nblogRequest.py\n- \u62c9\u53d6\u6587\u7ae0\n\u7528python\u5faa\u73af\u62c9\u53d6\u5206\u9875\uff0c\u5e76\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\n```\n\ndef requestSaveFile():\n    f = open(jsonPath, 'w')\n    headers = {\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36\"    \n    }\n    hasClose = False\n    for i in range(1, 20):\n        url = # \u89c1\u5b8c\u6574\u4ee3\u7801\n        r = requests.get(url, headers=headers)\n        jo = json.loads(r.content)\n        f.write(r.text)\n        f.write('\\n')\n        print(\"write page: %d\" % i)\n        if (len(jo) == 0):\n            print(\"close file\")\n            f.close()\n            hasClose = True\n            break\n        # print(jo[0]['object']['data'])\n        # print(i)\n    if hasClose == False:\n        f.close()\n```\n\n- \u6807\u9898\u8f6c\u6362\u6210\u56fe\u7247\n\u7528PIL\u5e93\u8fdb\u884cpython\u7ed8\u56fe\uff0c\u6ce8\u610f\u4e2d\u6587\u5b57\u4f53\u9700\u8981\u63d0\u4f9b\u7cfb\u7edf\u7684\u5b57\u4f53\u5e93\uff0cmac\u7cfb\u7edf\u662f\u5728/Library/Fonts/\u91cc\u9762\uff0c\u6d4b\u91cf\u6587\u5b57\u5bbd\u9ad8\uff0c\u7136\u540e\u7ed8\u56fe\uff0c\u987a\u4fbf\u8bbe\u7f6e\u989c\u8272\u8fb9\u6846\u7b49\u3002\u5c06\u56fe\u7247\u4fdd\u5b58\u5230\u76ee\u5f55\u91cc\u3002\n\n```\n\ndef createImage(fpath, text):\n    global createCount\n    fontSize = maxFontSize - int(createCount / 10)\n    if (fontSize < 25):\n        fontSize = 25\n    createCount += 1\n    fontPath = '/Library/Fonts/Arial Unicode.ttf' # \u7cfb\u7edf\u5b57\u4f53\n    font = ImageFont.truetype(fontPath, fontSize)\n    textSize = font.getsize(text)\n    \n    pd = 10\n    w = textSize[0] + pd + pd\n    h = textSize[1] + pd + pd\n\n    fontColor = '#000000'\n    if (text.startswith('Android')):\n        fontColor = '#009933'\n    if (text.startswith('iOS')):\n        fontColor = '#996633'\n    if (text.startswith('FFmpeg')):\n        fontColor = '#6600cc'\n    if (text.startswith('OpenCV')):\n        fontColor = '#993399'\n\n    im = Image.new(\"RGBA\", [w, h], (255,255,255,0))\n    dr = ImageDraw.Draw(im)\n\n    dr.rounded_rectangle(xy=[0,0,w,h], radius=8, fill='#ffffff', outline='#dddddd', width=2)\n    dr.text((pd, pd), text, font=font, fill=fontColor)\n    im.save(fpath)\n```\n\n# 3 Box2D\u4e2d\u6dfb\u52a0\u56fe\u7247\n\n\u6211\u9700\u8981\u7684\u6548\u679c\u8ddfDemo\u91cc\u9762tests/fallingShapes.js\u8fd9\u4e2a\u6d4b\u8bd5\u975e\u5e38\u50cf\uff0c\u56e0\u6b64\u65b0\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u53ebfallingImages.js\uff0c\u5728\u91cc\u9762\u521b\u5efa\u7269\u4f53\u3002\n\n- \u6dfb\u52a0\u7269\u4f53\n\n\u8bfb\u53d6\u524d\u9762\u521b\u5efa\u7684\u6807\u9898\u56fe\u7247\uff0c\u6839\u636e\u56fe\u7247\u7684\u5bbd\u9ad8\u521b\u5efaShape\uff0c\u8c03\u7528body SetUserData\u65b9\u6cd5\uff0c\u5c06id\u653e\u8fdb\u53bb\uff0c\u540e\u9762\u904d\u5386World\u91cc\u9762\u7684body\u65f6\u4f1a\u7528\u5230\u3002\u6ce8\u610f\u5c06image\u7f13\u5b58\u5230Map\u91cc\uff0c\u907f\u514d\u91cd\u590d\u89e3\u6790\u3002\n\n```\n\nfunction addImageBody(id) {\n    var image = new Image()\n    image.src = myBlogJson[id]['path']\n    image.onload = function() {\n        var w = image.width / myImageScale\n        var h = image.height / myImageScale\n        var ZERO = new b2Vec2(0, 0);\n        var temp = new b2Vec2(0, 0);\n        var bd = new b2BodyDef();\n        // bd.set_type(b2_dynamicBody);\n        bd.set_type(Module.b2_dynamicBody);\n        bd.set_position(ZERO);\n        var body = world.CreateBody(bd);\n        var randomValue = Math.random();\n\n        if (id == 753) {\n            var shape = new b2CircleShape();\n            console.log(shape);\n            shape.set_m_radius(w / 2);\n            body.CreateFixture(shape, 1);\n        } else {\n            var shape = new b2PolygonShape();\n            shape.SetAsBox(w / 2, h / 2);\n            body.CreateFixture(shape, 1);\n        }\n\n        temp.Set(22*(Math.random()-0.5), 12);\n        body.SetTransform(temp, 0.0);\n        body.SetLinearVelocity(ZERO);\n        // body.SetAngle\n        body.SetAwake(1);\n        body.SetActive(1);\n\n        body.SetUserData(id);\n        myBlogImages.set(id, image)\n    }\n}\n```\n\n- **\u7ed8\u5236\u56fe\u7247**\n\n\u8fd9\u662f\u6700\u91cd\u8981\u7684\u4e00\u6b65\n\n\u7528world.GetBodyList\u548cbody = body.GetNext()\u904d\u5386\uff0c\u6ce8\u610f\u8981\u7528body.a == 0\u6765\u5224\u65ad\u662f\u5426\u7ed3\u675f\uff0c\u5426\u5219\u4f1a\u9677\u5165\u6b7b\u5faa\u73af\uff01\n\n\u6839\u636ebody.GetUserData()\u65b9\u6cd5\u83b7\u53d6\u524d\u9762\u653e\u8fdb\u53bb\u7684id\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u56fe\u7247image\uff0c\u7528body.GetWorldCenter\u627e\u5230\u7269\u4f53\u4e2d\u5fc3\u70b9\uff0c\u7528body.GetAngle()\u627e\u5230\u56fe\u7247\u65cb\u8f6c\u89d2\u5ea6\u3002\u6ce8\u610fJavaScript\u53ea\u80fd\u65cb\u8f6c\u753b\u5e03\uff0c\u60f3\u65cb\u8f6c\u56fe\u7247\u9700\u8981\u5148save\uff0c\u5c06\u753b\u5e03\u5e73\u79fb\u5230\u56fe\u7247\u4e2d\u5fc3\u70b9\uff0c\u65cb\u8f6c\u5b8c\u518d\u5e73\u79fb\u56de\u6765restore\u3002\n```js\n\nfunction draw() {\n    \n    //black background\n    context.fillStyle = 'rgb(255,255,255)';\n    context.fillRect( 0, 0, canvas.width, canvas.height );\n    \n    context.save();            \n        context.translate(canvasOffset.x, canvasOffset.y);\n        context.scale(1,-1);                \n        context.scale(PTM,PTM);\n        context.lineWidth /= PTM;\n        \n        // drawAxes(context);\n        drawImage();\n        \n        context.fillStyle = 'rgb(255,255,0)';\n        // world.DrawDebugData();\n        \n        if ( mouseJoint != null ) {\n            //mouse joint is not drawn with regular joints in debug draw\n            var p1 = mouseJoint.GetAnchorB();\n            var p2 = mouseJoint.GetTarget();\n            context.strokeStyle = 'rgb(204,204,204)';\n            context.beginPath();\n            context.moveTo(p1.get_x(),p1.get_y());\n            context.lineTo(p2.get_x(),p2.get_y());\n            context.stroke();\n        }\n\n    context.restore();\n}\n\nfunction drawImage() {\n    var body = world.GetBodyList();\n    while (true) {\n        if (body == null || body.a == 0) {\n            break;\n        }\n        var id = body.GetUserData();\n        if (id > 0) {\n            var c = body.GetWorldCenter();\n            var w = myBlogImages.get(id).width / myImageScale;\n            var h = myBlogImages.get(id).height / myImageScale;\n            var a = body.GetAngle();\n\n        \n            // \u65cb\u8f6c\u4e0d\u5728\u4e2d\u5fc3\u70b9\uff0c\u5148\u5e73\u79fb\u518d\u5e73\u79fb\u56de\u6765\n            context.save();              \n            context.translate(c.x, c.y);\n            context.scale(1,-1);  \n            context.rotate(-a);\n            context.translate(-c.x, -c.y);\n            var image = myBlogImages.get(id)\n            context.drawImage(image, c.x - w / 2, c.y - h / 2, w, h);\n            context.restore();\n        }\n        body = body.GetNext();\n    }\n}\n```\n- \u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6\n\u5728onMouseDown\u548conMouseUp\u65b9\u6cd5\u5904\u7406\uff0c\u7531\u4e8e\u6709\u62d6\u52a8\u4e8b\u4ef6\uff0c\u6240\u4ee5\u8981\u6839\u636e\u70b9\u51fb\u65f6\u957f\u548c\u79fb\u52a8\u8ddd\u79bb\u5224\u65ad\u662f\u4e0d\u662f\u771f\u6b63\u7684\u70b9\u51fb\u3002\u7528window.open(link)\u6253\u5f00\u6587\u7ae0\u94fe\u63a5\u3002\n```java\n\nvar clicktime = 0;\nvar clickx = 0;\nvar clicky = 0;\n\nfunction onMouseDown(canvas, evt) {            \n    updateMousePos(canvas, evt);\n    if ( !mouseDown )\n        startMouseJoint();\n    mouseDown = true;\n    updateStats();\n\n    clicktime = Date.now();\n    clickx = evt.clientX;\n    clicky = evt.clientY\n}\n\nfunction onMouseUp(canvas, evt) {\n    mouseDown = false;\n    updateMousePos(canvas, evt);\n    updateStats();\n    if ( mouseJoint != null ) {\n        var dx = evt.clientX - clickx;\n        var dy = evt.clientY - clicky;\n        var dis = dx * dx + dy * dy;\n        if ((Date.now() - clicktime) < 150 && dis < 10) {\n            var id = mouseJoint.GetBodyB().GetUserData();\n            var link = myBlogJson[id]['link']\n            window.open(link);\n            console.log(link);\n        }\n\n        world.DestroyJoint(mouseJoint);\n        mouseJoint = null;\n    }\n}\n```\n", "mt_excerpt": "", "title": "\u505a\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u91cd\u529b\u7248\u4e2a\u4eba\u535a\u5ba2", "dateCreated": "20220719T20:15:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495585.html", "permalink": "https://www.cnblogs.com/rome753/p/16495585.html", "postid": 16495585, "description": "\u8f93\u5165\n```\nwhich java\n```\n \u8fd4\u56de\u7684\u662f\n```java\n/usr/bin/java\n```\n\u987a\u7740\u8fd9\u4e2a\u8def\u5f84\u627e\u5230\n```java\nchao@chao-mint /usr/lib/jvm/java-8-openjdk-amd64 $ ll\ntotal 28\ndrwxr-xr-x 7 root root 4096 5\u6708  14  2018 ./\ndrwxr-xr-x 3 root root 4096 5\u6708  14  2018 ../\nlrwxrwxrwx 1 root root   22 4\u6708  28  2018 ASSEMBLY_EXCEPTION -> jre/ASSEMBLY_EXCEPTION\ndrwxr-xr-x 2 root root 4096 5\u6708  14  2018 bin/\nlrwxrwxrwx 1 root root   41 3\u6708  14  2018 docs -> ../../../share/doc/openjdk-8-jre-headless/\ndrwxr-xr-x 3 root root 4096 5\u6708  14  2018 include/\ndrwxr-xr-x 5 root root 4096 5\u6708  14  2018 jre/\ndrwxr-xr-x 3 root root 4096 5\u6708  14  2018 lib/\ndrwxr-xr-x 4 root root 4096 5\u6708   7  2018 man/\nlrwxrwxrwx 1 root root   20 4\u6708  28  2018 src.zip -> ../openjdk-8/src.zip\nlrwxrwxrwx 1 root root   22 4\u6708  28  2018 THIRD_PARTY_README -> jre/THIRD_PARTY_README\n```\n\u53d1\u73b0 `src.zip -> ../openjdk-8/src.zip` \u8fd9\u4e2a\u94fe\u63a5\u6307\u5411\u7684 `openjdk-8/src.zip` \u76ee\u5f55\u4e0d\u5b58\u5728\u3002\n\u4e0a\u7f51\u641c\u4e86\u4e00\u4e0b\uff0c\u6e90\u7801\u9700\u8981\u989d\u5916\u5b89\u88c5\uff0c\u7528\u8fd9\u4e2a\u547d\u4ee4\n```java\nsudo apt install openjdk-8-source\n```\n\u5b89\u88c5\u5b8c\u6210\u540e\u5c31\u597d\u4e86O(\u2229_\u2229)O~~\u3002\n", "mt_excerpt": "", "title": "ubuntu\u4e0bvscode\u65e0\u6cd5\u67e5\u770bjdk\u6e90\u7801", "dateCreated": "20220719T20:14:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495588.html", "permalink": "https://www.cnblogs.com/rome753/p/16495588.html", "postid": 16495588, "description": "# \u7b2c2\u7ae0 \u57fa\u7840\ninclude\u5934\u6587\u4ef6\n- C\u98ce\u683c\uff1a<math.h>\n- C++\u98ce\u683c\uff08\u5f15\u5165C\u5e93\uff09\uff1a<cmath>\n- C++\u98ce\u683c\uff08C++\u5e93\uff09\uff1a<iostream>\n\n\u540d\u79f0\u7a7a\u95f4\n- using namespace std;\n- std::cout << \"\";\n- using std::cout;\n\n\u51fd\u6570\n\u51fd\u6570\u539f\u578b\uff1a\u53ea\u63cf\u8ff0\u51fd\u6570\u63a5\u53e3\uff0c\u4e00\u822c\u5728\u5934\u6587\u4ef6\u4e2d\n\u51fd\u6570\u5b9a\u4e49\uff1a\u51fd\u6570\u5177\u4f53\u5b9e\u73b0\u4ee3\u7801\uff0c\u4e00\u822c\u5728\u5e93\u6587\u4ef6\u4e2d\n\n# \u7b2c3\u7ae0 \u5904\u7406\u6570\u636e\n\u53d8\u91cf\n\u4e0b\u5212\u7ebf\u5f00\u5934\u548c\u5305\u542b\u4e24\u4e2a\u4e0b\u5212\u7ebf\u7684\u53d8\u91cf\u7531\u7cfb\u7edf\u4f7f\u7528\n\n\u8f93\u51fa\u4e0d\u540c\u8fdb\u5236\n- \u4e8c\u8fdb\u5236\uff1abitset<32> x(num);\n- \u516b\u8fdb\u5236\uff1acout<<oct;\n- \u5341\u8fdb\u5236\uff1acout<<dec;\n- \u5341\u516d\u8fdb\u5236\uff1acout<<hex;\n\nbool\u7c7b\u578b\n\u4efb\u4f55\u6570\u5b57\u548c\u6307\u9488\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3abool\uff1a\u975e0\u4e3atrue\uff0c0\u4e3afalse\n\nconst\u5e38\u91cf\n\u6bd4#define\u66f4\u597d\uff1a\u660e\u786e\u7c7b\u578b\u4e14\u9650\u5236\u4f5c\u7528\u57df\n\n\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\n\u4e0d\u4fee\u6539\u53d8\u91cf\u672c\u8eab\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6307\u5b9a\u503c\n- C\u98ce\u683c\uff1a(int) a\n- C++\uff1aint(a) // \u66f4\u50cf\u51fd\u6570\u8c03\u7528\n\nauto\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b\nauto n = 1;\n\n# \u7b2c4\u7ae0 \u590d\u5408\u7c7b\u578b\n\n\u6570\u7ec4\nint a[] = {1,2,3};\nint a[10] {}; // \u7701\u7565\u7b49\u53f7\n\u6a21\u677f\u7c7bvector\u548carray\u53ef\u4ee3\u66ff\u6570\u7ec4\n\n\u5b57\u7b26\u4e32\nC\u98ce\u683c\u662fchar a[]\u6570\u7ec4\uff0c\u4ee5'\\0'\u7ed3\u5c3e\nchar a[] = {'h','e','l','l','o'}; // \u8fd9\u662f\u5b57\u7b26\u6570\u7ec4\uff0c\u4e0d\u662f\u5b57\u7b26\u4e32\nchar a[] = {'h','e','l','l','o','\\0'}; // \u8fd9\u662f\u6b63\u786e\u7684\u5b57\u7b26\u4e32\nchar a[] = \"hello\"; // \u8fd9\u4e5f\u662f\u6b63\u786e\u7684\u5b57\u7b26\u4e32\n// sizeof(a) = 6, strlen(a) = 5;\n\n\u5b57\u7b26\u4e32\u62fc\u63a5\u4e0d\u80fd\u7528+\uff0c\u76f4\u63a5\u62fc\ncout << \"hello\" \"what\";\n\nstring\u662fC++\u7c7b\u578b\u5b57\u7b26\u4e32\nstring s = \"hello\";\n\u4f7f\u7528+\u6216\u8005+=\u62fc\u63a5\n\n\u5b57\u7b26\u4e32\u64cd\u4f5c\u51fd\u6570\nstrcpy() \u5b57\u7b26\u4e32\u590d\u5236\nstrcat() \u5b57\u7b26\u4e32\u62fc\u63a5\n\u64cd\u4f5cC\u7c7b\u578b\u6570\u7ec4\u4e0d\u5b89\u5168\uff0cC++\u7c7b\u578b\u81ea\u52a8\u5904\u7406\u4e0d\u540c\u957f\u5ea6\uff0c\u66f4\u5b89\u5168\n\n\u539f\u59cb\u5b57\u7b26\u4e32\nstring a = R\"(this is original)\";\n\n\u7ed3\u6784\u4f53\nstruct MyStruct {\n  int a;\n  string b;\n}\nMyStruct ms; // \u7701\u7565\u524d\u9762\u7684struct\nms.b = {3, \"test\"};\n\n\u5171\u7528\u4f53\n\u540c\u65f6\u53ea\u80fd\u5b58\u50a8\u4e00\u79cd\u7c7b\u578b\uff0c\u5360\u7528\u6700\u5927\u7c7b\u578b\u7684\u7a7a\u95f4\nunion {\n  int a;\n  string b;\n}\n\n\u679a\u4e3e\nenum bits { one = 1, two =2 };\n\n\u6307\u9488\n*\u5b9a\u4e49\u6307\u9488\uff0c\u53d6\u5730\u5740\u7684\u5185\u5bb9\uff0c&\u53d6\u5730\u5740\nint a = 3;\nint *p = &a;\n// *p \u4e0e a \u76f8\u540c\u90fd\u662f\u6570\u5b573\uff0cp \u4e0e &a \u76f8\u540c\u90fd\u662f\u4e00\u4e2a\u5730\u5740\nint * p1,p2; // p1\u662fint*\u6307\u9488\uff0cp2\u662fint\u6570\u5b57\n\nint *p;\n*p = 100; // \u8fd9\u6837\u5199\u662f\u9519\u7684\uff0c\u5b9a\u4e49\u6307\u9488\u4e00\u5b9a\u8981\u521d\u59cb\u5316\n\nint *p = new int;\n*p = 100; // \u8fd9\u4e48\u5199\u624d\u5bf9\n\n\u6307\u9488\u521b\u5efa\u6570\u7ec4\nint * arr = new int[10];\ndelete[] arr;\n// \u6570\u7ec4\u540d\u5730\u5740\u4e0e\u6570\u7ec4\u5730\u5740\u76f8\u540c\uff0c\u4f46sizeof(arr)\u8fd4\u56de\u6574\u4e2a\u6570\u7ec4\u5b57\u8282\u957f\u5ea6\n\n\u6307\u9488\u521b\u5efa\u7ed3\u6784\n\u8bbf\u95ee\u6210\u5458\u7528 ->, \u4e0d\u80fd\u7528.\n\n\u5b58\u50a8\u65b9\u5f0f\n- \u81ea\u52a8\u5b58\u50a8\uff1a\u6808\u5185\u5b58\uff0c\u81ea\u52a8\u91ca\u653e\n- \u9759\u6001\u5b58\u50a8\uff1astatic\uff0c\u5168\u5c40\u5b58\u5728\n- \u52a8\u6001\u5b58\u50a8\uff1a\u5806\u5185\u5b58\uff0c\u7528 new \u548c delete \u5206\u914d\u91ca\u653e\n\n\u6570\u7ec4\u7684\u66ff\u4ee3\nvector\u53ef\u53d8\u6570\u7ec4\uff0carray\u957f\u5ea6\u56fa\u5b9a\u6570\u7ec4\uff0c\u90fd\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff1b\u6570\u7ec4\u548carray\u5b58\u50a8\u5728\u6808\u4e2d\uff0cvector\u5b58\u50a8\u5728\u5806\u4e2d\u3002\n\n# \u7b2c5\u7ae0 \u5faa\u73af\u548c\u5173\u7cfb\u8868\u8fbe\u5f0f\n# \u7b2c6\u7ae0 \u5206\u652f\u8bed\u53e5\u548c\u903b\u8f91\u8fd0\u7b97\u7b26\n# \u7b2c7\u7ae0 \u51fd\u6570\n\u51fd\u6570\u53c2\u6570\u9ed8\u8ba4\u662f\u503c\u4f20\u9012\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u53d8\u91cf\u3002\n\u5982\u679c\u53c2\u6570\u662f\u6570\u7ec4\uff0c\u90a3\u4e48\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\u6307\u9488\u3002\n\u5982\u679c\u53c2\u6570\u662f\u7ed3\u6784\u4f53\uff0c\u4e5f\u662f\u4f20\u9012\u7ed3\u6784\u7684\u526f\u672c\u3002\n\u5982\u679c\u53c2\u6570\u662fstring\uff0c\u4e5f\u662f\u4f20\u9012string\u7684\u526f\u672c\u3002\n\u5982\u679c\u53c2\u6570\u662f\u7c7b\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u662f\u6309\u503c\u4f20\u9012\uff0c\u4e5f\u53ef\u4ee5\u4f20\u9012\u6307\u9488\u3002\n\n\u51fd\u6570\u6307\u9488\n\u6307\u5411\u5b58\u50a8\u51fd\u6570\u673a\u5668\u7801\u7684\u5730\u5740\ndouble foo(int); // \u51fd\u6570\u58f0\u660e\ndouble (*pf)(int); // \u51fd\u6570\u6307\u9488\u58f0\u660e\uff0c\u53c2\u6570\u548c\u8fd4\u56de\u503c\u5fc5\u987b\u4e0e\u51fd\u6570\u76f8\u540c\u3002pf\u53ef\u4ee5\u76f4\u63a5\u5f53foo\u51fd\u6570\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5f53\u5f62\u53c2\u3002\n\n# \u7b2c8\u7ae0 \u51fd\u6570\u63a2\u5e7d\n\n\u5185\u8054\u51fd\u6570\n\u51fd\u6570\u58f0\u660e\u548c\u5b9a\u4e49\u524d\u90fd\u52a0\u4e0ainline\uff0c\u7f16\u8bd1\u5668\u4f1a\u5728\u8c03\u7528\u5904\u66ff\u6362\uff0c\u800c\u4e0d\u662f\u8df3\u8f6c\u5230\u8fd9\u4e2a\u51fd\u6570\u6765\u8c03\u7528\u3002\n\n\u51fd\u6570\u6a21\u677f\n\u53c2\u6570\u5b9a\u4e49\u6cdb\u578b\u7c7b\u578b\n```\ntemplate <typename T>\nvoid swap(T &a, T &b) {\n    T temp;\n    temp = a;\n    a = b;\n    b = temp;\n}\n```\n# \u7b2c9\u7ae0 \u5185\u5b58\u6a21\u578b\u548c\u540d\u79f0\u7a7a\u95f4\n\n\u7f16\u8bd1\n\u81ea\u5df1\u7684\u5934\u6587\u4ef6\u7528\"\"\uff0c\u6807\u51c6\u5e93\u7684\u5934\u6587\u4ef6\u7528<>\n\n\u9632\u6b62\u91cd\u590d\u5b9a\u4e49\n```\n#ifndef MY_H_\n#define MY_H_\n// \u5934\u6587\u4ef6\u5177\u4f53\u5185\u5bb9\n#endif\n```\n# \u7b2c4\u7ae0 \u590d\u5408\u7c7b\u578b\n# \u7b2c4\u7ae0 \u590d\u5408\u7c7b\u578b\n# \u7b2c4\u7ae0 \u590d\u5408\u7c7b\u578b\n# \u7b2c4\u7ae0 \u590d\u5408\u7c7b\u578b\n", "mt_excerpt": "", "title": "C++\u5b66\u4e60\u7b14\u8bb0", "dateCreated": "20220719T20:14:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495580.html", "permalink": "https://www.cnblogs.com/rome753/p/16495580.html", "postid": 16495580, "description": "```java\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Paint;\nimport android.os.SystemClock;\nimport android.util.AttributeSet;\nimport android.util.Log;\nimport android.view.View;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Random;\nimport java.util.concurrent.ConcurrentSkipListSet;\n\npublic class MazeView extends View {\n\n    public static int[][] dirArray = new int[][]{\n            {0, 2}, {0, -2}, {2, 0}, {-2, 0},\n    };\n    private static List<int[]> dir = Arrays.asList(dirArray);\n\n    int xCount, yCount;\n    int xCells, yCells;\n    int xWalls, yWalls;\n\n    Paint wallPaint;\n    Paint cellPaint;\n\n    int wallSize;\n    int cellSize;\n\n    List<Integer> visitedCell = new ArrayList<>(); // cell\n    HashSet<Integer> completedCell = new HashSet<>(); // cell \u5df2\u5b8c\u6210\u7684\u683c\u5b50\n    ConcurrentSkipListSet<Integer> removedWall = new ConcurrentSkipListSet<>(); // wall\n\n    Random random = new Random();\n\n    public MazeView(Context context) {\n        this(context, null);\n    }\n\n    public MazeView(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public MazeView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        wallPaint = new Paint();\n        wallPaint.setColor(Color.BLACK);\n        wallPaint.setStyle(Paint.Style.FILL_AND_STROKE);\n\n        cellPaint = new Paint();\n        cellPaint.setColor(Color.WHITE);\n        cellPaint.setStyle(Paint.Style.FILL_AND_STROKE);\n\n        wallSize = 10;\n        cellSize = 30;\n    }\n\n    private void generateMaze() {\n        xWalls = getWidth() / (wallSize + cellSize);\n        yWalls = getHeight() / (wallSize + cellSize);\n\n        xCells = xWalls - 1;\n        yCells = yWalls - 1;\n\n        xCount = xCells + xWalls;\n        yCount = yCells + yWalls;\n\n        int cellx = random.nextInt(xCount);\n        int celly = random.nextInt(yCount);\n        cellx |= 1;\n        celly |= 1;\n\n        visitedCell.add((cellx << 16) + celly);\n\n        while (visitedCell.size() > 0) {\n            int index = random.nextInt(visitedCell.size());\n            int cell = visitedCell.get(index);\n\n            int cx = cell >> 16;\n            int cy = cell & 65535;\n            Collections.shuffle(dir);\n            boolean find = false;\n            for (int[] d : dir) {\n                int x = cx + d[0];\n                int y = cy + d[1];\n                if (x >= 0 && x < xCount && y >= 0 && y < yCount) {\n                    int p = (x << 16) + y;\n                    if (!completedCell.contains(p) && !visitedCell.contains(p)) {\n                        find = true;\n                        visitedCell.add(p);\n                        int wallx = (cx + x) / 2;\n                        int wally = (cy + y) / 2;\n                        int wallp = (wallx << 16) + wally;\n                        removedWall.add(wallp);\n                        break;\n                    }\n                }\n            }\n            if (!find) {\n                completedCell.add(cell);\n                visitedCell.remove(index);\n            }\n            SystemClock.sleep(1);\n            postInvalidate();\n        }\n        Log.d(\"chao\", \"exit\");\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        Async.run(() -> {\n            if (xCount == 0) {\n                generateMaze();\n            }\n        });\n        drawCells(canvas);\n        removeWalls(canvas);\n    }\n\n    private void removeWalls(Canvas canvas) {\n        for (int pack : removedWall) {\n            int x = pack >> 16;\n            int y = pack & 65535;\n            int wallsY = (y + 1) / 2;\n            int cellsY = y / 2;\n            int wallsX = (x + 1) / 2;\n            int cellsX = x / 2;\n\n            boolean vertical = x % 2 == 0;\n            int width = vertical ? wallSize : cellSize;\n            int height = !vertical ? wallSize : cellSize;\n\n            int top = wallsY * wallSize + cellsY * cellSize;\n            int left = wallsX * wallSize + cellsX * cellSize;\n            canvas.drawRect(left, top, left + width, top + height, cellPaint);\n        }\n    }\n\n    private void drawCells(Canvas canvas) {\n        int realw = xWalls * wallSize + xCells * cellSize;\n        int realh = yWalls * wallSize + yCells * cellSize;\n        int tx = (getWidth() - realw) / 2;\n        int ty = (getHeight() - realh) / 2;\n\n        setTranslationX(tx);\n        setTranslationY(ty);\n\n        canvas.drawRect(0, 0, realw, realh, wallPaint);\n\n        for (int i = 0; i < yCount; i++) {\n            for (int j = 0; j < xCount; j++) {\n                if (i % 2 == 1 && j % 2 == 1) {\n                    int wallsY = (i + 1) / 2;\n                    int cellsY = i - wallsY;\n                    int wallsX = (j + 1) / 2;\n                    int cellsX = j - wallsX;\n                    int top = wallsY * wallSize + cellsY * cellSize;\n                    int left = wallsX * wallSize + cellsX * cellSize;\n                    canvas.drawRect(left, top, left + cellSize, top + cellSize, cellPaint);\n                }\n            }\n        }\n    }\n\n}\n\n```\n", "mt_excerpt": "", "title": "Java-maze\u8ff7\u5bab\u751f\u6210\u7b97\u6cd5", "dateCreated": "20220719T20:13:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495582.html", "permalink": "https://www.cnblogs.com/rome753/p/16495582.html", "postid": 16495582, "description": "\u7a7a\u95f2\u65f6\u5728LeetCode\u4e0a\u7ec3\u7ec3\u7b97\u6cd5\u9898\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5f88\u591a\u9898\u76ee\u6700\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f\u9012\u5f52\u7b97\u6cd5\u3002\u9012\u5f52\u7b97\u6cd5\u4e0d\u4ec5\u5bb9\u6613\u60f3\u5230\u548c\u5b9e\u73b0\uff0c\u800c\u4e14\u5199\u51fa\u6765\u4e5f\u662f\u5f62\u5f0f\u7b80\u5355\u3001\u5bb9\u6613\u7406\u89e3\u7684\u3002\n\n\u6bd4\u5982\u8457\u540d\u7684\u201c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u201d\uff1a\n> 1,1,2,3,5,8...\n\n\u6570\u5217\u7684\u524d\u4e24\u9879\u90fd\u662f1\uff0c\u540e\u9762\u7684\u6bcf\u4e00\u9879\u90fd\u7b49\u4e8e\u524d\u4e24\u9879\u4e4b\u548c\uff0c\u5982\u4f55\u8ba1\u7b97\u7b2cn\u9879\uff1f\n\n\u7528\u9012\u5f52\u7b97\u6cd5\u53ea\u9700\u8981\u5982\u4e0b\u4e24\u884c\u4ee3\u7801\n```java\n    public static int fibonacci(int n){\n        if(n <= 2) return 1;\n        return fibonacci(n - 1) + fibonacci(n - 2);\n    }\n```\n\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f20\u5165\u4e00\u4e2a\u6570\u5b57\u6bd4\u59826\uff0c\u8ba1\u7b97\u7ed3\u679c\u662f8\uff0c\u770b\u8d77\u6765\u6ca1\u95ee\u9898\u3002\u7136\u800c\u6709\u4e00\u4e2a\u5f88\u4e25\u91cd\u7684\u7f3a\u9677\uff0c\u5c31\u662f\u8ba1\u7b97\u5f88\u6162\uff0c\u4f20\u5165\u4e00\u4e2a\u7a0d\u5927\u7684\u6570\u5b57\u6bd4\u598245\uff0c\u8ba1\u7b97\u7ed3\u679c\u5982\u4e0b\uff1a\n```\n1134903170\ntime 2624\n```\n\u5728\u6211\u7684CPU i7\u7684\u7535\u8111\u4e0a\u9700\u8981\u8017\u65f62624\u6beb\u79d2\uff01\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u7b80\u5355\u7684\u8ba1\u7b97\u9700\u8981\u8fd9\u4e48\u4e45\uff1f\n\u56e0\u4e3a\u9012\u5f52\u4e2d\u5305\u542b\u4e86\u5927\u91cf\u7684\u91cd\u590d\u8ba1\u7b97\u3002\n\u5206\u6790\u4e00\u4e0b\uff1a\u8ba1\u7b97n=45\u65f6\uff0c\u4f1a\u8ba1\u7b97n=44\u548cn=43\uff1b\u8ba1\u7b97n=44\u65f6\uff0c\u4f1a\u8ba1\u7b97n=43\u548cn=42\uff1b\u8ba1\u7b97n=43\u65f6\uff0c\u4f1a\u8ba1\u7b97n=42\u548cn=41\u3002\u53ef\u4ee5\u770b\u5230\uff0cn<44\u65f6\u90fd\u4f1a\u91cd\u590d\u8ba1\u7b97\uff0cn\u8d8a\u5c0f\uff0c\u91cd\u590d\u8ba1\u7b97\u7684\u6b21\u6570\u8d8a\u591a\uff0c\u6700\u7ec8\u5bfc\u81f4\u8ba1\u7b97\u6b21\u6570\u6307\u6570\u7ea7\u589e\u957f\u3002 \n\n\u90a3\u4e48\u6709\u4ec0\u4e48\u65b9\u6cd5\u4f18\u5316\u5417\uff1f\u4e0d\u80fd\u56e0\u4e3a\u4e00\u4e2a\u7f3a\u70b9\u5c31\u5c06\u9012\u5f52\u7b97\u6cd5\u5426\u5b9a\u554a\u3002\u5f53\u7136\u662f\u6709\u7684\uff0c\u4e0a\u9762\u4e0d\u662f\u5206\u6790\u5230n<44\u65f6\u90fd\u4f1a\u91cd\u590d\u8ba1\u7b97\u5417\uff1f\u90a3\u4e48\u7b2c\u4e00\u6b21\u8ba1\u7b97\u5b8c\u540e\u5c06\u503c\u8bb0\u4e0b\u6765\uff0c\u4e0b\u6b21\u8981\u7b97\u7684\u65f6\u5019\u76f4\u63a5\u53d6\u4e0d\u5c31\u884c\u4e86\uff1f\n\n```java\n    public static int fibonacci(int n){\n        int[] memo = new int[n + 1];\n        return fibonacci(n, memo);\n    }\n    \n    public static int fibonacci(int n, int[] memo){\n        if(n <= 2) return 1;\n        if(memo[n] > 0) return memo[n];\n        memo[n] = fibonacci(n - 1, memo) + fibonacci(n - 2, memo);\n        return memo[n];\n    }\n```\nint[] memo\u6570\u7ec4\u5c31\u662f\u7528\u6765\u4fdd\u5b58\u8ba1\u7b97\u7ed3\u679c\u7684\u3002\u8fd9\u6837\u4f18\u5316\u540e\u8ba1\u7b97\u7ed3\u679c\u5982\u4e0b\uff1a\n```\n1134903170\ntime 0\n```\n\u53ef\u4ee5\u770b\u5230\uff0c\u51e0\u4e4e\u4e0d\u82b1\u65f6\u95f4\u4e86\u3002\u56e0\u4e3a\u539f\u6765\u7684\u51e0\u767e\u4e07\u6b21\u8ba1\u7b97\u5df2\u7ecf\u51cf\u5c11\u4e3a\u51e0\u5341\u6b21\u4e86\uff0c\u6027\u80fd\u63d0\u5347\u4e86\u51e0\u4e07\u500d\u3002\n\n**\u8fd9\u5c31\u662f\u4f7f\u7528Memoization\u4f18\u5316\u9012\u5f52\u7b97\u6cd5\uff0c**\u901a\u4fd7\u5730\u8bf4\u5c31\u662f\u7ed9\u9012\u5f52\u589e\u52a0\u8bb0\u5fc6\uff0c\u672c\u8d28\u4e0a\u662f\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\u8fd9\u4e48\u505a\u662f\u5341\u5206\u6709\u5fc5\u8981\u7684\uff0c\u5927\u90e8\u5206\u9898\u7528\u9012\u5f52\u7b97\u6cd5\u89e3\u90fd\u5f88\u5bb9\u6613\u9047\u5230TLE(Time Limit Exceeded)\uff0c\u5373\u8d85\u51fa\u65f6\u95f4\u9650\u5236\u3002\u800c\u7ecf\u8fc7Memoization\u4f18\u5316\u540e\uff0c\u4e00\u822c\u90fd\u4f1aAC(Accepted)\u901a\u8fc7\uff0c\u751a\u81f3\u8fbe\u5230\u4e0eDP(Dynamic Programming)\u7b49\u4f18\u79c0\u7684\u7b97\u6cd5\u76f8\u540c\u7684\u6027\u80fd\u3002\n", "mt_excerpt": "", "title": "\u4f7f\u7528Memoization\u4f18\u5316\u9012\u5f52\u7b97\u6cd5", "dateCreated": "20220719T20:13:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16495577.html", "permalink": "https://www.cnblogs.com/rome753/p/16495577.html", "postid": 16495577, "description": "The\u00a0*n*-queens puzzle is the problem of placing\u00a0*n*\u00a0queens on an\u00a0*n*\u00d7*n*\u00a0chessboard such that no two queens attack each other.\n\n![\u516b\u7687\u540e](http://upload-images.jianshu.io/upload_images/1896166-d8fdb12e300d6282.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nGiven an integer\u00a0*n*, return all distinct solutions to the\u00a0*n*-queens puzzle.\n\nEach solution contains a distinct board configuration of the\u00a0*n*-queens' placement, where\u00a0`'Q'`\u00a0and\u00a0`'.'`\u00a0both indicate a queen and an empty space respectively.\n\nN\u7687\u540e\u95ee\u9898\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u7b97\u6cd5\u95ee\u9898\uff0c\u6c42N\u00d7N\u7684\u56fd\u9645\u8c61\u68cb\u68cb\u76d8\u4e0a\u80fd\u6446\u653e\u591a\u5c11\u4e2a\u7687\u540e\uff0c\u4e14\u5979\u4eec\u4e4b\u95f4\u4e0d\u76f8\u4e92\u653b\u51fb\uff0c\u8981\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u7684\u6446\u6cd5\u3002\u7687\u540e\u7684\u653b\u51fb\u8303\u56f4\u662f\u540c\u4e00\u884c\u3001\u540c\u4e00\u5217\u4ee5\u53ca\u540c\u5728\u4e24\u676145\u00b0\u659c\u7ebf\u4e0a\u7684\u68cb\u5b50\u3002\n\n\u89e3\u672c\u9898\u7684\u5173\u952e\u662f\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u6570\u636e\u7ed3\u6784\u6765\u8bb0\u5f55\u653e\u7687\u540e\u7684\u4f4d\u7f6e\uff0c\u8fd8\u8981\u65b9\u4fbf\u68c0\u9a8c\u5404\u4e2a\u4f4d\u7f6e\u662f\u5426\u51b2\u7a81\u3002\u4f7f\u7528x\u548cy\u5750\u6807\u6765\u8bb0\u5f55\u4f4d\u7f6e\u662f\u6700\u76f4\u63a5\u7684\uff0c\u7136\u800c\u4fdd\u5b58\u4e24\u4e2a\u6570\u8981\u7528\u989d\u5916\u7684\u6570\u636e\u7ed3\u6784\u624d\u884c\uff08\u7279\u6b8a\u60c5\u51b5\u53ef\u4ee5\u7528\u4e00\u4e2aint\u6253\u5305\uff09\uff0c\u8bb0\u5f55\u4e0b\u6765\u540e\u5224\u65ad\u4f4d\u7f6e\u662f\u5426\u51b2\u7a81\u4e5f\u6bd4\u8f83\u9ebb\u70e6\u3002\n\n\u7ecf\u8fc7\u601d\u8003\uff0c\u4f7f\u7528\u4e00\u4e2aint[N]\u6570\u7ec4\u6765\u4fdd\u5b58\u7687\u540e\u7684\u4f4d\u7f6e\u662f\u6700\u5408\u9002\u7684\u3002\u6570\u7ec4\u4e0b\u6807\u4ee3\u8868y\u5750\u6807\uff0c\u6570\u7ec4\u4e2d\u7684\u65700\uff5eN-1\u4ee3\u8868x\u5750\u6807\u3002\u8fd9\u6837\u4fdd\u8bc1y\u5750\u6807\u4e0d\u4f1a\u91cd\u590d\uff08\u4e0d\u4f1a\u5728\u540c\u4e00\u884c\uff09\uff0c\u5224\u65adx\u5750\u6807\u662f\u5426\u91cd\u590d\u53ea\u8981\u904d\u5386\u6570\u7ec4\u770b\u662f\u5426\u6709\u91cd\u590d\u6570\u5b57\uff0c\u5224\u65ad\u662f\u5426\u5728\u540c\u4e00\u659c\u7ebf\u4e5f\u5f88\u65b9\u4fbf\uff1a\u5047\u8bbe\u5f53\u524d\u4f4d\u7f6e\u662fint[yi]=xi\uff0c\u4ece\u5f53\u524d\u4f4d\u7f6e\u5411\u524d\u79fb\u52a8\uff0c\u5224\u65ad `(int[yi-1]==xi+1 || int[yi-1]==xi-1)`, `(int[yi-12]==xi+2 || int[yi-2]==xi-2)`...\u5373\u53ef\u3002\n\n\u89e3\u51b3\u4e86\u6570\u636e\u7ed3\u6784\u548c\u4f4d\u7f6e\u68c0\u67e5\u7684\u95ee\u9898\uff0c\u5269\u4e0b\u7684\u7b97\u6cd5\u5c31\u5f88\u7b80\u5355\uff1a\u4ece\u4f4d\u7f6e0\u5f00\u59cb\uff0c\u68c0\u67e5\u5f53\u524d\u4f4d\u7f6e\u80fd\u653e0\uff5eN-1\u4e2d\u7684\u54ea\u4e2a\u6570\uff0c\u5982\u679c\u80fd\u653e\u4e14\u662f\u6700\u540e\u4e00\u4e2a\u6570\uff0c\u5c31\u628a\u6570\u7ec4\u8f6c\u6362\u4e00\u4e0b\u8f93\u51fa\uff0c\u5982\u679c\u6ca1\u5230\u6700\u540e\u4e00\u4e2a\u6570\uff0c\u5c31\u5bf9\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u9012\u5f52\u8ba1\u7b97\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u672c\u7b97\u6cd5\u51fb\u8d25\u4e8698\uff05\u7684java\u7b97\u6cd5\u3002\n```\n    public static List<List<String>> solveNQueens(int n) {\n        List<List<String>> res = new ArrayList<>();\n        int[] a = new int[n];\n        solveNQueens(res, a, 0);\n        return res;\n    }\n\n    public static void solveNQueens(List<List<String>> res, int[] a, int pos) {\n        int n = a.length;\n        for(int j = 0; j < n; j++) {\n            if(check(a, pos, j)) {\n                a[pos] = j;\n                if(pos == n - 1) { // save\n                    char[][] board = new char[n][n];\n                    for(char[] b : board) {\n                        Arrays.fill(b, '.');\n                    }\n                    List<String> list = new ArrayList<>();\n                    for(int i = 0; i < n; i++) {\n                        board[i][a[i]] = 'Q';\n                        list.add(new String(board[i]));\n                    }\n                    res.add(list);\n                } else solveNQueens(res, a, pos + 1);\n            }\n        }\n    }\n\n    public static boolean check(int[] a, int pos, int j) {\n        for(int k = pos - 1; k >= 0; k--) {\n            if(a[k] == j) return false;\n        }\n        for(int k = pos - 1; k >= 0; k--) {\n            int diff = pos - k;\n            if(a[k] == j + diff || a[k] == j - diff) return false;\n        }\n        return true;\n    }\n```\n", "mt_excerpt": "", "title": "LeetCode51--N-Queens-N\u7687\u540e\u95ee\u9898", "dateCreated": "20220719T20:12:00", "mt_text_more": "", "categories": ["[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491512.html", "permalink": "https://www.cnblogs.com/rome753/p/16491512.html", "postid": 16491512, "description": "\u4e4b\u524d\u5199\u8fc7\u4e00\u7bc7 [Android YUV\u56fe\u50cf\u8f6c\u6362\u7b97\u6cd5\u548c\u68c0\u6d4b\u5de5\u5177](https://www.jianshu.com/p/da10007797b1)\uff0c\u91cc\u9762\u5b9e\u73b0\u4e86YUV420\u7684\u56db\u79cd\u683c\u5f0f\u7684\u76f8\u4e92\u8f6c\u6362\uff0c\u548c\u4e0eRGB\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u56e0\u4e3a\u662f\u76f4\u63a5\u7528CPU\u8ba1\u7b97\u7684\uff0c\u6240\u4ee5\u5bf9CPU\u6709\u4e00\u5b9a\u7684\u6d88\u8017\u548c\u5360\u7528\u3002\u8fd9\u91cc\u6211\u4eec\u7528OpenGL\u5b9e\u73b0GPU\u8f6c\u6362\u3002\n\n\u6211\u4eec\u7528\u76f8\u673a\u4f5c\u4e3aYUV420\u56fe\u50cf\u8f93\u5165\uff0c\u4e0a\u4e00\u7bc7 [Android OpenGLES3\u7ed8\u56fe - \u4f7f\u7528CameraX](https://www.jianshu.com/p/bcabdb0fc65a) \u4e2d\u5b9e\u73b0\u4e86\u7528OpenGL\u7684OES\u7eb9\u7406\u76f4\u63a5\u663e\u793a\u76f8\u673a\u7684SurfaceTexture\u3002\u5982\u679c\u8981\u8fdb\u884c\u683c\u5f0f\u8f6c\u6362\uff0c\u5c31\u4e0d\u80fd\u8fd9\u6837\u7528\u4e00\u4e2a\u7eb9\u7406\u76f4\u63a5\u663e\u793a\u4e86\uff0c\u663e\u793aYUV420\u6570\u636e\u7684\u65b9\u6cd5\u662f\uff1a\u521b\u5efa\u4e09\u4e2a\u7eb9\u7406\uff0c\u5206\u522b\u63a5\u53d7Y\u3001U\u3001V\u6570\u636e\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u53d6\u51fa\u5f53\u524d\u4f4d\u7f6e\u7684Y\u3001U\u3001V\u6570\u636e\uff0c\u7528\u516c\u5f0f\u8f6c\u6362\u6210rgb\u683c\u5f0f\u663e\u793a\u3002\n\n![image.png](https://rome753.github.io/cdn/1896166-73d65cbacde2ef1a.png)\n\n\u5982\u56fe\uff0c\u4e2d\u95f4\u662f\u76f8\u673a\u9884\u89c8\u753b\u9762\uff0c\u5de6\u4e0b\u89d2\u662f\u76f8\u673a\u7684YUV420\u6570\u636e\u901a\u8fc7OpenGL\u8f6c\u6362\u6210RGB\u663e\u793a\u5230GLSurfaceView\u4e0a\u3002\n\n\n# 1 \u521b\u5efaYUVShader\n\u8ddf\u7ed8\u5236\u666e\u901a\u7684\u7eb9\u7406\u7c7b\u4f3c\uff0c\u521b\u5efavao\u3001vbo\u3001ebo\uff0c\u7ed8\u5236\u4e00\u4e2a\u77e9\u5f62\u3002\u4e0d\u540c\u7684\u662f\uff0c\u9700\u8981\u7528for\u5faa\u73af\u521b\u5efa3\u4e2a\u7eb9\u7406tex0\u3001tex1\u548ctex2\uff0c\u4f20\u7ed9\u7740\u8272\u5668\u3002\n```java\nclass YUVShader {\n\n    var vertices = floatArrayOf( //     ---- \u4f4d\u7f6e ----       ---- \u989c\u8272 ----     - \u7eb9\u7406\u5750\u6807 -\n        -1f, -1f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f,  // \u5de6\u4e0b\n        1f, -1f, 0.0f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f,  // \u53f3\u4e0b\n        -1f, 1f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, 1.0f, // \u5de6\u4e0a\n        1f, 1f, 0.0f, 1.0f, 0.0f, 0.0f, 1.0f, 1.0f  // \u53f3\u4e0a\n    )\n\n    val indices = intArrayOf( // \u6ce8\u610f\u7d22\u5f15\u4ece0\u5f00\u59cb!\n        0, 1, 2,  // \u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\n        1, 2, 3 // \u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\n    )\n\n    var program = 0\n    var vertexBuffer: FloatBuffer? = null\n    var intBuffer: IntBuffer? = null\n    var vao: IntArray = IntArray(1)\n\n    var tex: IntArray = IntArray(3) // yuv\n\n    var transform = FloatArray(16)\n\n    fun init() {\n        program = ShaderUtils.loadProgramYUV()\n        //\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n        vertexBuffer = ByteBuffer.allocateDirect(vertices.size * 4)\n            .order(ByteOrder.nativeOrder())\n            .asFloatBuffer()\n        //\u4f20\u5165\u6307\u5b9a\u7684\u5750\u6807\u6570\u636e\n        vertexBuffer!!.put(vertices)\n        vertexBuffer!!.position(0)\n        vao = IntArray(1)\n        glGenVertexArrays(1, vao, 0)\n        glBindVertexArray(vao[0])\n        val vbo = IntArray(1)\n        glGenBuffers(1, vbo, 0)\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0])\n        glBufferData(GL_ARRAY_BUFFER, vertices.size * 4, vertexBuffer, GL_STATIC_DRAW)\n\n        intBuffer = IntBuffer.allocate(indices.size * 4)\n        intBuffer!!.put(indices)\n        intBuffer!!.position(0)\n        val ebo = IntArray(1)\n        glGenBuffers(1, ebo, 0)\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, ebo[0])\n        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size * 4, intBuffer, GL_STATIC_DRAW)\n\n        glUseProgram(program)\n        glGenTextures(3, tex, 0)\n        for (i in 0..2) {\n            glActiveTexture(GL_TEXTURE0 + i)\n            glBindTexture(GL_TEXTURE_2D, tex[i])\n            // \u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u8bbe\u7f6e\u73af\u7ed5\u3001\u8fc7\u6ee4\u65b9\u5f0f\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR)\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR)\n//            val bitmap: Bitmap = ShaderUtils.loadImageAssets(\"face.png\")\n//            GLUtils.texImage2D(GL_TEXTURE_2D, 0, bitmap, 0)\n//            glGenerateMipmap(GL_TEXTURE_2D)\n\n            val loc0 = glGetUniformLocation(program, \"tex$i\")\n            glUniform1i(loc0, i)\n        }\n\n        // Load the vertex data\n        glVertexAttribPointer(0, 3, GL_FLOAT, false, 8 * 4, 0)\n        glEnableVertexAttribArray(0)\n        glVertexAttribPointer(1, 3, GL_FLOAT, false, 8 * 4, 3 * 4)\n        glEnableVertexAttribArray(1)\n        glVertexAttribPointer(2, 2, GL_FLOAT, false, 8 * 4, 6 * 4)\n        glEnableVertexAttribArray(2)\n\n        glBindBuffer(GL_ARRAY_BUFFER, 0)\n        glBindVertexArray(0)\n\n        Matrix.setIdentityM(transform, 0)\n    }\n\n```\n# 2 \u6570\u636e\u4f20\u7ed9\u7eb9\u7406\n**\u8fd9\u662f\u6700\u5173\u952e\u7684\u4e00\u6b65**\n\n\u6bcf\u4e00\u5e27\u753b\u9762\u9700\u8981\u66f4\u65b0YUV\u6570\u636e\uff0c\u5982\u4f55\u5c06\u6570\u636e\u4f20\u7ed9\u7eb9\u7406\u5462\uff1f\u5c31\u9700\u8981\u7528\u5230`glTexImage2D`\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u65b9\u6cd5\u6709\u5f88\u591a\u53c2\u6570\uff0c\u4e3b\u8981\u662f\u8bbe\u7f6e\u7eb9\u7406\u683c\u5f0f\u3001\u5bbd\u9ad8\u7b49\u3002\u65b9\u6cd5\u7684\u7b2c3\u4e2a\u548c\u7b2c8\u4e2a\u53c2\u6570\u662f\u76f8\u540c\u7684\uff0cY\u5e73\u9762\u8fd9\u4e2a\u53c2\u6570\u4f20GL_LUMINANCE\uff0c\u81f3\u4e8e**U\u548cV\u5e73\u9762\uff1aI420\u548cYV12\u683c\u5f0f\u4e0b\uff0c\u4f20GL_LUMINANCE\u53c2\u6570\uff1bNV12\u548cNV21\u683c\u5f0f\u4e0b\uff0c\u4f20GL_LUMINANCE_ALPHA**\u3002\u8fd9\u91cc\u5982\u679c\u5f04\u9519\u4e86\uff0c\u753b\u9762\u5fc5\u9519\u4e71\uff0c\u6211\u4e5f\u662f\u8c03\u4e86\u5f88\u4e45\uff0c\u641c\u7d22\u4e86\u4e0d\u5c11\u5730\u65b9\u624d\u603b\u7ed3\u4e0b\u6765\u7684\u3002\n\n\u81f3\u4e8e\u5bbd\u9ad8\u53c2\u6570\uff0cY\u5e73\u9762\u5c31\u662f\u56fe\u50cf\u5bbd\u9ad8\uff0cUV\u5e73\u9762\u7684\u5bbd\u9ad8\u90fd\u662f\u4e00\u534a\u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u771f\u6b63\u7684\u6570\u636e\uff0c\u4f20\u5165ByteBuffer\u683c\u5f0f\u7684\u3002\n\n> \u5176\u5b9eNV12\u548cNV21\u683c\u5f0f\uff0cUV\u5e73\u9762\u7684\u6570\u636e\u653e\u5728\u4e00\u8d77\u4e86\uff0c\u56e0\u6b64\u4f7f\u7528\u524d\u4e24\u4e2a\u7eb9\u7406\u5c31\u591f\u4e86\u3002\u540e\u9762\u5728\u7740\u8272\u5668\u91cc\u4f7f\u7528\u65f6\u53ef\u4ee5\u770b\u51fa\u6765\u3002\n\n```java\n    fun draw(ib: ImageBytes) {\n        val w0 = ib.width\n        val h0 = ib.height\n        val w1 = w0 / 2\n        val h1 = h0 / 2\n        glUseProgram(program)\n\n        glActiveTexture(tex[0])\n        glBindTexture(GL_TEXTURE_2D, tex[0])\n        glTexImage2D(GL_TEXTURE_2D, 0, GL_LUMINANCE, w0, h0, 0, GL_LUMINANCE, GL_UNSIGNED_BYTE, ib.bufY)\n\n        glActiveTexture(tex[1])\n        glBindTexture(GL_TEXTURE_2D, tex[1])\n        glTexImage2D(GL_TEXTURE_2D, 0, GL_LUMINANCE_ALPHA, w1, h1, 0, GL_LUMINANCE_ALPHA, GL_UNSIGNED_BYTE, ib.bufU)\n//        glTexImage2D(GL_TEXTURE_2D, 0, GL_LUMINANCE, w1, h1, 0, GL_LUMINANCE, GL_UNSIGNED_BYTE, ib.bufU)\n\n        glActiveTexture(tex[2])\n        glBindTexture(GL_TEXTURE_2D, tex[2])\n        glTexImage2D(GL_TEXTURE_2D, 0, GL_LUMINANCE_ALPHA, w1, h1, 0, GL_LUMINANCE_ALPHA, GL_UNSIGNED_BYTE, ib.bufV)\n//        glTexImage2D(GL_TEXTURE_2D, 0, GL_LUMINANCE, w1, h1, 0, GL_LUMINANCE, GL_UNSIGNED_BYTE, ib.bufV)\n\n        val loc = glGetUniformLocation(program, \"transform\")\n        glUniformMatrix4fv(loc, 1, false, transform, 0)\n\n        glBindVertexArray(vao[0])\n        glDrawElements(GL_TRIANGLES, vertices.size, GL_UNSIGNED_INT, 0)\n    }\n```\n# 3 \u6570\u636e\u83b7\u53d6\u548c\u5c01\u88c5\nCamra1\u4e0eCamera2/X\u83b7\u53d6\u6570\u636e\u7684\u65b9\u6cd5\u4e0d\u540c\uff0c\u683c\u5f0f\u4e5f\u4e0d\u4e00\u6837\u3002\n\nCamera1\u662f\u5728onPreviewFrame\u56de\u8c03\u65b9\u6cd5\u4e2d\u83b7\u53d6byte[]\u683c\u5f0f\u7684\u6570\u636e\n```java\n    @Override\n    public void onPreviewFrame(byte[] data, Camera camera) {\n        if(camera == null) return;\n        Camera.Size size = camera.getParameters().getPreviewSize(); //\u83b7\u53d6\u9884\u89c8\u5927\u5c0f\n        final int w = size.width;\n        final int h = size.height;\n        ydv.inputAsync(data, w, h);\n    }\n```\nCamera2/X\u662f\u5728ImageAnalysis.Analyzer\u7684analyze\u56de\u8c03\u65b9\u6cd5\u4e2d\u83b7\u53d6Image\u683c\u5f0f\u7684\u6570\u636e\n```java\n    private inner class LuminosityAnalyzer(private val listener : LumaListener) : ImageAnalysis.Analyzer {\n\n        private fun ByteBuffer.toByteArray() : ByteArray {\n            rewind()\n            val data = ByteArray(remaining())\n            get(data)\n            return data\n        }\n\n        @SuppressLint(\"UnsafeExperimentalUsageError\")\n        override fun analyze(image: ImageProxy) {\n\n            // \u6682\u65f6\u7528SurfaceTexture\u4e2d\u83b7\u53d6\u7684\u53d8\u6362\u77e9\u9635\n            this@MainActivity.yuvDetectView.yuvRender.yuvShader.transform = this@MainActivity.cameraRender.transform\n\n            this@MainActivity.yuvDetectView.input(image.image!!)\n            image.close()\n        }\n\n    }\n```\n\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u81ea\u5df1\u5c01\u88c5\u4e00\u4e2aImageBytes\u7c7b\uff0c\u5c06byte[]\u6216Image\u683c\u5f0f\u7684\u6570\u636e\u8f6c\u6362\u6210\u5bf9\u5e94YUV\u7684\u4e09\u4e2aByteBuffer\u3002\n\nImage\u683c\u5f0f\u7684\u76f4\u63a5\u53d6\u4e09\u4e2aPlane\u5305\u88c5\u6210ByteBuffer\u5c31\u884c\uff1bbyte[]\u683c\u5f0f\u7684\u9700\u8981\u6839\u636e\u5bbd\u9ad8\u786e\u5b9aYUV\u7684\u957f\u5ea6\uff0c\u5c06\u5bf9\u5e94\u957f\u5ea6\u7684\u5b50\u6570\u7ec4\u5305\u88c5\u6210ByteBuffer\u3002\uff08\u6ce8\u610f\uff1aCamera1\u7684NV21\u683c\u5f0f\uff0c\u9700\u8981\u6240\u6709\u7684UV\u6570\u636e\u90fd\u653e\u5230\u7b2c\u4e8c\u4e2aByteBuffer\u91cc\u9762\uff0c\u5426\u5219\u753b\u9762\u53ea\u6709\u4e00\u534a\u663e\u793a\u6b63\u5e38\uff0c\u8fd9\u5e94\u8be5\u662f\u76f8\u673a\u626b\u63cf\u65b9\u5411\u8ddf\u6570\u636e\u8bfb\u53d6\u65b9\u5411\u4e0d\u540c\u5bfc\u81f4\u7684\uff09\u3002\n```java\npublic class ImageBytes {\n    public byte[] bytes;\n    public int width;\n    public int height;\n\n    public ByteBuffer bufY;\n    public ByteBuffer bufU;\n    public ByteBuffer bufV;\n\n    public ImageBytes(byte[] bytes, int width, int height) {\n        this.bytes = bytes;\n        this.width = width;\n        this.height = height;\n\n        int r0 = width * height;\n        int u0 = r0 / 4;\n        int v0 = u0;\n\n        bufY = ByteBuffer.allocate(r0).put(bytes, 0, r0);\n        // bufU = ByteBuffer.allocate(u0).put(bytes, r0, u0);\n        // camera1\u7684nv21\u683c\u5f0f\uff0c\u9700\u8981\u628auv\u5168\u90e8\u653e\u5230bufU\u4e2d\uff0c\u5426\u5219\u753b\u9762\u53ea\u6709\u4e00\u534a\u6b63\u5e38\n        // \u5b9e\u9645\u4e0abufU\u53ea\u4f7f\u7528\u4e86\u4e00\u534a\uff0c\u8fd9\u8ddf\u76f8\u673a\u753b\u9762\u626b\u63cf\u7684\u65b9\u5411\u6709\u5173\n        bufU = ByteBuffer.allocate(u0 + v0).put(bytes, r0, u0 + v0);\n        bufV = ByteBuffer.allocate(v0).put(bytes, r0 + u0, v0);\n\n        bufY.position(0);\n        bufU.position(0);\n        bufV.position(0);\n    }\n\n    public ImageBytes(Image image) {\n        final Image.Plane[] planes = image.getPlanes();\n\n        Image.Plane p0 = planes[0];\n        Image.Plane p1 = planes[1];\n        Image.Plane p2 = planes[2];\n\n        ByteBuffer b0 = p0.getBuffer();\n        ByteBuffer b1 = p1.getBuffer();\n        ByteBuffer b2 = p2.getBuffer();\n\n        int r0 = b0.remaining();\n\n        int w0 = p0.getRowStride();\n        int h0 = r0 / w0;\n        if(r0 % w0 != 0) h0++;\n\n        this.width = w0;\n        this.height = h0;\n        this.bufY = b0;\n        this.bufU = b1;\n        this.bufV = b2;\n    }\n}\n```\n# 4 \u683c\u5f0f\u8f6c\u6362\n\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u8fdb\u884c\u8f6c\u6362\uff0c\u8fd9\u4e00\u6b65\u4e5f\u5f88\u91cd\u8981\u3002\n\n\u9996\u5148\u5c06yuv\u5206\u91cf\u4ece\u4e09\u4e2atex\u7eb9\u7406\u4e2d\u53d6\u51fa\u6765\uff0cy\u53d6tex0\u91cc\u9762\u7684r\u5206\u91cf\uff0cu\u53d6tex1\u91cc\u9762\u7684r\u5206\u91cf\u51cf\u53bb0.5\uff0c\u800cv\u53d6tex1\u91cc\u9762\u7684a\u5206\u91cf\u51cf\u53bb0.5\uff1b\u518d\u6839\u636e\u56fa\u5b9a\u7684\u516c\u5f0f\u5c06yuv\u8f6c\u6362\u6210rgb\uff0c\u7528\u4e00\u4e2a\u77e9\u9635\u8ba1\u7b97\u8868\u793a\uff0c\u8fd9\u4e2a\u516c\u5f0f\u6211\u5728\u7f51\u4e0a\u53d1\u73b0\u4e86\u5404\u79cd\u5404\u6837\u7684\u6570\u503c\uff0c\u627e\u5230\u4e24\u4e2a\u5e94\u8be5\u662f\u6bd4\u8f83\u6807\u51c6\u7684\uff0c\u5b83\u4eec\u5dee\u522b\u4e0d\u5927\uff0c\u81f3\u5c11\u6211\u770b\u4e0d\u51fa\u6765\u3002\n\n\u6ce8\u610f\u8fd9\u662fNV12\u683c\u5f0f\u7684\u53d6\u6cd5\uff0c\u5982\u679c\u662fNV21\u683c\u5f0f\uff0c\u5c06u\u548cv\u4ea4\u6362\u5c31\u884c\u4e86\u3002\n\n```glsl\n#version 300 es\n\nprecision mediump float;\nin vec3 aColor;\nin vec2 aTexCoord;\nout vec4 fragColor;\n\nuniform sampler2D tex0;\nuniform sampler2D tex1;\nuniform sampler2D tex2;\n\nvoid main() {\n\n     float y = texture(tex0, aTexCoord).r;\n     float u = texture(tex1, aTexCoord).r - 0.5;\n     float v = texture(tex1, aTexCoord).a - 0.5;\n     vec3 yuv = vec3(y, u, v);\n\n    // \u4e0b\u9762\u4e24\u79cd\u89c6\u89c9\u4e0a\u5dee\u5f02\u4e0d\u5927\n\n//     // BT.601, which is the standard for SDTV is provided as a reference\n//      vec3 rgb = mat3(      1,       1,       1,\n//      0, -.39465, 2.03211,\n//      1.13983, -.58060,       0) * yuv;\n\n     // Using BT.709 which is the standard for HDTV\n     vec3 rgb = mat3(      1,       1,       1,\n     0, -.21482, 2.12798,\n     1.28033, -.38059,       0) * vec3(y,u,v);\n\n\n     fragColor = vec4(rgb, 1.0);\n\n}\n```\n\n\u4e0b\u9762\u662fYV12\u683c\u5f0f\u7684\u53d6\u6cd5\uff0cy\u53d6tex0\u91cc\u9762\u7684r\u5206\u91cf\uff0cu\u53d6tex2\u91cc\u9762\u7684r\u5206\u91cf\u51cf\u53bb0.5\uff0c\u800cv\u53d6tex1\u91cc\u9762\u7684r\u5206\u91cf\u51cf\u53bb0.5\uff1b\u5982\u679c\u662fI420\u683c\u5f0f\uff0c\u5c06u\u548cv\u4ea4\u6362\u5c31\u884c\u4e86\u3002\n\n```java\n     float y = texture(tex0, aTexCoord).r;\n     float u = texture(tex2, aTexCoord).r - 0.5;\n     float v = texture(tex1, aTexCoord).r - 0.5;\n```\n\n# 5 \u5c0f\u7ed3\n\u7ed3\u5408\u4ecetex\u4e2d\u53d6yuv\u7684\u89c4\u5f8b\uff0c\u6211\u4eec\u518d\u6765\u603b\u7ed3\u4e00\u4e0b\u524d\u9762glTexImage2D\u65b9\u6cd5\u91cc\u7684GL_LUMINANCE\u548cGL_LUMINANCE_ALPHA\u53c2\u6570\u3002\n\n> GL_LUMINANCE\u662f\u5c06\u5355\u4e2au\u6216v\u6253\u5305\u5230\u4e00\u4e2a\u7eb9\u7406\u7684vec4\u91cc\u9762\uff0c\u653e\u5230\u7b2c\u4e00\u4f4d\uff1avec4(u,0,0,0)\n> GL_LUMINANCE_ALPHA\u662f\u5c06\u76f8\u90bb\u7684\u4e24\u4e2auv\u6253\u5305\u5230\u4e00\u4e2a\u7eb9\u7406\u7684vec4\u91cc\u9762\uff0c\u653e\u5230\u7b2c\u4e00\u548c\u6700\u540e\u4e00\u4f4d\uff1avec4(u,0,0,v)\n\n\u6709\u8fd9\u4e24\u79cd\u53c2\u6570\u5c31\u80fd\u76f4\u63a5\u521b\u5efa\u4e0d\u540cYUV\u683c\u5f0f\u7684\u7eb9\u7406\uff0c\u907f\u514d\u4e86\u9700\u8981\u5faa\u73af\u4ece\u6570\u7ec4\u91cc\u9762\u53d6\u6570\u636e\uff0c\u6bd4CPU\u8fd0\u7b97\u65b9\u4fbf\u591a\u4e86\uff0c\u800c\u7740\u8272\u5668\u5927\u89c4\u6a21\u5e76\u884c\u8f6c\u6362\u6570\u636e\u4e5f\u6bd4CPU\u5feb\u591a\u4e86\u3002\n\n\u5f53\u7136\u8fd9\u91cc\u7684\u6570\u636e\u662f\u7247\u6bb5\u7740\u8272\u5668\u8f6c\u6362\u5b8c\u76f4\u63a5\u663e\u793a\u7684\uff0c\u4e0d\u80fd\u8f93\u51fa\u5230\u5176\u4ed6\u5730\u65b9\u5982\u7f16\u7801\u5668\u7b49\uff0c\u5982\u679c\u9700\u8981\u8f93\u51fa\uff0c\u53ef\u4ee5\u7528\u8ba1\u7b97\u7740\u8272\u5668\u6216\u8005\u66f4\u9ad8\u7ea7\u7684GPU\u7f13\u5b58\u673a\u5236\u3002\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---YUV420\u4e0eRGB\u8f6c\u6362", "dateCreated": "20220718T18:06:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491515.html", "permalink": "https://www.cnblogs.com/rome753/p/16491515.html", "postid": 16491515, "description": "![kepz0-oim7h.gif](https://rome753.github.io/cdn/1896166-32460c419e5afa89.gif)\n\n\u5728\u770bBox2D\u6e38\u620f\u5f15\u64ce\u65f6\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u6db2\u4f53\u5f15\u64ce LiquidFun \uff0c\u5b83\u662fBox2D\u7684\u6269\u5c55\u3002\u7ed9Box2D\u52a0\u4e0a\u4e86\u7c92\u5b50\u7cfb\u7edf\uff0c\u5e76\u4e14\u7c92\u5b50\u80fd\u5b9e\u73b0\u6db2\u4f53\u7684\u7279\u6027\u3002\n\n[LiquidFun Github](https://github.com/google/liquidfun)\u662f\u4e00\u4e2aGoogle\u7684\u5f00\u6e90\u9879\u76ee\uff0c[LiquidFun\u5b98\u7f51](http://google.github.io/liquidfun/)\u91cc\u9762\u6709\u5f88\u591a\u6709\u8da3\u7684\u6f14\u793a\u548c\u5f88\u591a\u8d44\u6599\uff0c\u5305\u62ec\u5b83\u7684[\u539f\u7406PPT](http://docs.google.com/presentation/d/1fEAb4-lSyqxlVGNPog3G1LZ7UgtvxfRAwR0dwd19G4g/edit?usp=sharing)\u8bb2\u89e3\uff1a\u5b83\u5176\u5b9e\u662f\u5728Box2D\u7269\u7406\u5f15\u64ce\u7684\u529b\u5b66\u8ba1\u7b97\uff08\u5f39\u529b\u3001\u6469\u64e6\u529b\uff09\u57fa\u7840\u4e0a\uff0c\u7ed9Body\uff08\u6db2\u4f53\u7c92\u5b50\uff09\u6dfb\u52a0\u4e86\u8ddf\u6db2\u4f53\u6709\u5173\u7684\u51e0\u79cd\u529b\uff1a\u538b\u529b\u3001\u7c98\u6027\u529b\u3001\u6392\u65a5\u529b\u3001\u8868\u9762\u5f20\u529b\u7b49\uff0c\u80fd\u591f\u5f88\u597d\u5730\u6a21\u62df\u6db2\u4f53\u3002\n\n> \u7531\u4e8e\u589e\u52a0\u4e86\u5f88\u591a\u529b\u5b66\u8ba1\u7b97\uff0c\u5e76\u4e14\u6a21\u62df\u6db2\u4f53\u9700\u8981\u5927\u91cf\u7c92\u5b50\uff0c\u8fd9\u4f1a\u7ed9CPU\u5e26\u6765\u5de8\u5927\u7684\u538b\u529b\u3002\u5bf9\u6b64\uff0cLiquidFun \u91cc\u9762\u4f7f\u7528\u4e86\u4e00\u9879\u975e\u5e38\u5f3a\u5927\u7684\u4f18\u5316\u6280\u672f\uff01\n\n\u6211\u4eec\u6765\u5b66\u4e60\u548c\u4f7f\u7528\u4e00\u4e0b\u8fd9\u4e2a\u5e93\uff01\n\n## 1 \u7f16\u8bd1\nLiquidFun\u9879\u76ee\u8ddfBox2D\u4e00\u6837\u662f\u7528C\u8bed\u8a00\u5199\u7684\uff0c\u7136\u800cBox2D\u6709Java\u7248\u672c\u7684JBox2D\u5b83\u6ca1\u6709\uff0c\u5982\u679c\u90fd\u81ea\u5df1\u5199JNI\u63a5\u53e3\u53bb\u8c03\u7528\u4f1a\u5f88\u9ebb\u70e6\uff0c\u597d\u5728\u5b83\u63d0\u4f9b\u4e86Swig\uff0cSwig\u80fd\u7ed9C\u4ee3\u7801\u81ea\u52a8\u751f\u6210Java\u63a5\u53e3\u3002\u54b1\u4eec\u53ef\u4ee5\u7f16\u8bd1\u751f\u6210\u4e00\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b83\u751f\u6210\u597d\u7684\u3002\n\n\u81f3\u4e8e\u52a8\u6001\u94fe\u63a5\u5e93 libliquidfun.so\uff0c\u6211\u7528\u81ea\u5df1\u7f16\u8bd1\u7684\u9047\u5230\u4e86\u5d29\u6e83\u7684\u95ee\u9898\uff0c\u4e0d\u77e5\u9053\u662f\u53c2\u6570\u8fd8\u662f\u54ea\u91cc\u6ca1\u914d\u7f6e\u597d\u3002\u597d\u5728Google\u6709\u4e00\u4e2a\u4e0a\u67b6\u7684App\uff1aLiquidFun Paint \u4f7f\u7528\u4e86\u8fd9\u4e2a\u5e93\uff0c\u6211\u76f4\u63a5\u4ece\u5b83\u7684apk\u5305\u63d0\u53d6\u4e86 .so \u6587\u4ef6\u4f7f\u7528\u3002LiquidFun Paint \u4e5f\u662f\u5f00\u6e90\u7684\uff0c\u5728Github\u548cGoogle Play\u5546\u5e97\u90fd\u80fd\u641c\u5230\uff0c\u5b83\u662f\u4e00\u4e2a\u529f\u80fd\u975e\u5e38\u5b8c\u6574\u7684\u6db2\u4f53\u7ed8\u56feapp\uff0c\u6e90\u7801\u5f88\u503c\u5f97\u5b66\u4e60\u3002\n\n# 2 \u4ee3\u7801\u5b9e\u73b0\n## 2.1 \u521b\u5efa\u5de5\u7a0b\u548c\u5bfc\u5165\n\u65b0\u5efa\u4e00\u4e2aAndroid\u5de5\u7a0b\uff0c\u6dfb\u52a0 libliquidfun.so \u548c libliquidfun_jni.so \u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u5728 MainActivity\u4e2d loadLibrary\uff0c\u5e76\u5c06swig\u751f\u6210\u7684\u5305\u540d\u4e3acom.google.liquidfun\u7684\u5305\u548c\u91cc\u9762\u7684\u6240\u6709Java\u6587\u4ef6\u6dfb\u52a0\u5230\u4ee3\u7801\u4e2d\u3002\n\n```java\n    static {\n        System.loadLibrary(\"liquidfun\");\n        System.loadLibrary(\"liquidfun_jni\");\n    }\n```\n\n## 2.2 \u6dfb\u52a0\u7269\u7406\u7c7b\n\n\u7531\u4e8eLiquidFun\u91cc\u9762\u5305\u542b\u4e86Box2D\uff0c\u5c31\u4e0d\u7528\u518d\u6dfb\u52a0\u540e\u8005\u7684\u5e93\u4e86\uff0c\u76f4\u63a5\u4f7f\u7528\u5373\u53ef\u3002\u521b\u5efa\u4e00\u4e2aLiquidManager\u7c7b\u7ba1\u7406\u7269\u7406\u76f8\u5173\u7684\uff0c\u521b\u5efaBox2D\u7684World\u4e16\u754c\u8fb9\u754c\u548cParticleSystem\u7c92\u5b50\u7cfb\u7edf\u3002\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecdParticleSystem\uff0c\u5982\u679c\u4e0d\u719f\u6089Box2D\u53ef\u4ee5\u53bb\u641c\u7d22\u76f8\u5173\u8d44\u6599\u3002\n\n\u4e0b\u9762\u662f\u521b\u5efaParticleSystem\u7684\u65b9\u6cd5\uff0c\u5b83\u8ddf\u521b\u5efaBox2D\u91cc\u9762\u7684\u5176\u4ed6\u7269\u4f53\u76f8\u4f3c\uff0c\u5176\u4e2dsetMaxParticleCount\u548csetRadius\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u6bd4\u8f83\u91cd\u8981\uff0c\u5173\u7cfb\u5230\u521b\u5efa\u7c92\u5b50\u7684\u6570\u91cf\u548c\u5927\u5c0f\u3002\n\nPolygonShape\u4f1a\u5728\u63d0\u4f9b\u7684\u5f62\u72b6\u533a\u57df\u5185\u521b\u5efa\u6240\u6709\u6db2\u4f53\u7c92\u5b50\uff0c\u6ce8\u610f\u5982\u679c\u7ed9\u5b83\u63d0\u4f9b\u7684\u8303\u56f4\u5c0f\u800c\u7c92\u5b50\u6570\u5f88\u591a\uff0c\u4f1a\u76f4\u63a5\u5d29\u6e83\uff01\n\nParticleGroupDef\u7684setFlags\u548csetGroupFlags\u53ef\u4ee5\u6539\u53d8\u7c92\u5b50\u7684\u884c\u4e3a\uff0c\u6bd4\u5982\u53ef\u4ee5\u4e0d\u521b\u5efa\u6db2\u4f53\uff0c\u521b\u5efa\u4e00\u4e2a\u8f6f\u4f53\uff01\n\n\u521b\u5efa\u5b8c\u6210\u4e4b\u540e\u901a\u8fc7particleSystem\u53ef\u4ee5\u83b7\u53d6\u6bcf\u4e2a\u7c92\u5b50\u7684\u53c2\u6570\uff0c\u5305\u62ec\u4f4d\u7f6e\u3001\u989c\u8272\u7b49\uff0c\u5f53\u7136\u4e00\u4e2a\u4e2a\u7c92\u5b50\u83b7\u53d6\u548c\u5237\u65b0\u754c\u9762\u6548\u7387\u592a\u4f4e\u4e86\uff0c\u5b83\u63d0\u4f9b\u4e86 `updatePosition(ByteBuffer buffer)` \u65b9\u6cd5\u5c06\u6240\u6709\u7c92\u5b50\u4f4d\u7f6e\u5237\u65b0\u5230\u4e00\u4e2a ByteBuffer\u4e2d\uff0c\u540e\u9762\u53ef\u4ee5\u76f4\u63a5\u63d0\u4f9b\u7ed9OpenGL\u4f7f\u7528\u3002\n\n```java\n    private void createLiquid(float w, float h) {\n        ParticleSystemDef psd = new ParticleSystemDef();\n        psd.setDensity(1.2f);\n        psd.setGravityScale(0.4f);\n        psd.setRadius(PARTICAL_RADIUS);\n        psd.setRepulsiveStrength(0.5f);\n        particleSystem = world.createParticleSystem(psd);\n        particleSystem.setMaxParticleCount(MAX_COUNT);\n\n        PolygonShape shape = new PolygonShape();\n        shape.setAsBox(w / 2, h / 2, 0f, 0f, 0f);\n\n        ParticleGroupDef pd = new ParticleGroupDef();\n\n//        // \u8f6f\u4f53\n//        pd.setFlags(1 << 4);\n//        pd.setGroupFlags(1 << 0);\n        pd.setFlags(0);\n        pd.setGroupFlags(0);\n        pd.setLinearVelocity(new Vec2(0,0));\n        pd.setShape(shape);\n\n        // signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x25\n        // Cause: null pointer dereference\n        particleSystem.createParticleGroup(pd);\n\n        psd.delete();\n        shape.delete();\n        pd.delete();\n\n        Log.d(\"chao\", \"create particles \" + particleSystem.getParticleCount());\n    }\n\n```\n\n## 2.3 OpenGL\u7ed8\u5236\n\n\u6dfb\u52a0\u4e00\u4e2aLiquidRender\u7c7b\u8fdb\u884cOpenGL\u7ed8\u5236\u3002\u6db2\u4f53\u7c92\u5b50\u6ca1\u6709\u5f62\u72b6\u7684\u5c5e\u6027\uff0c\u76f4\u63a5\u4f7f\u7528\u70b9\u65b9\u5f0f\u7ed8\u5236\u3002\u521b\u5efa\u4e00\u4e2aByteBuffer\u4fdd\u5b58\u6240\u6709\u70b9\u7684\u4f4d\u7f6e\uff0c\u524d\u9762\u8bf4\u7684particleSystem\u53ef\u4ee5\u76f4\u63a5\u5c06\u6570\u636e\u5237\u65b0\u5230\u8fd9\u4e2amParticlePositionBuffer\u91cc\u9762\u3002\n\n```java\n    ByteBuffer mParticlePositionBuffer;\n\n//        //\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n        mParticlePositionBuffer = ByteBuffer\n                .allocateDirect(2 * 4 * LiquidManager.MAX_COUNT)\n                .order(ByteOrder.nativeOrder());\n\n        vao = new int[1];\n        glGenVertexArrays(1, vao, 0);\n        glBindVertexArray(vao[0]);\n\n        vbo = new int[1];\n        glGenBuffers(1, vbo, 0);\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n//        glBufferData(GL_ARRAY_BUFFER, vertices.length * 4, vertexBuffer, GL_STATIC_DRAW);\n        glBufferData(GL_ARRAY_BUFFER, LiquidManager.MAX_COUNT * 4 * 2, mParticlePositionBuffer, GL_STREAM_DRAW);\n\n```\n\u5237\u65b0\u65b9\u6cd5\u5982\u4e0b\uff1a\n\u7528 world.step() \u66f4\u65b0\u4f4d\u7f6e\uff0c\u7136\u540eupdatePosition\uff0c\u518d\u7528`glBufferSubData`\u65b9\u6cd5\u5237\u65b0vbo\u6570\u636e\uff0c\u6ce8\u610f\u8981\u91cd\u65b0\u7ed1\u5b9avbo\u4e00\u4e0b\uff0c\u5426\u5219\u4e0d\u4f1a\u751f\u6548\u3002\u6700\u540e\u7ed8\u5236\u5373\u53ef\u3002\n\n```java\n    @Override\n    public void onDrawFrame(GL10 gl) {\n        liquidManager.initWorld(width, height);\n        liquidManager.updatePosition(mParticlePositionBuffer);\n\n        // Clear the color buffer\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n\n        // \u5237\u65b0vbo\u6570\u636e\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n        glBufferSubData(GL_ARRAY_BUFFER, 0, LiquidManager.MAX_COUNT * 4 * 2,  mParticlePositionBuffer);\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n\n\n        // Use the program object\n        glUseProgram(program);\n        glBindVertexArray(vao[0]);\n\n        glDrawArrays(GL_POINTS, 0, LiquidManager.MAX_COUNT);\n    }\n```\n\u521b\u5efavbo\u7684\u65b9\u6cd5`glBufferData(GL_ARRAY_BUFFER, LiquidManager.MAX_COUNT * 4 * 2, mParticlePositionBuffer, GL_STREAM_DRAW)`\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c\u7406\u8bba\u4e0a\u5728\u6bcf\u4e00\u5e27\u6570\u636e\u90fd\u53d8\u5316\u65f6\u5e94\u8be5\u4f7f\u7528GL_STREAM_DRAW\uff0c\u4e5f\u8bb8\u5b83\u80fd\u81ea\u52a8\u5237\u65b0GPU\u91cc\u7684\u7f13\u5b58\u6570\u636e\uff1f\u4f46\u6211\u8fd9\u91cc\u8bbe\u7f6e\u4e86\u5e76\u6ca1\u6709\u751f\u6548\uff0c\u8ddfGL_STATIC_DRAW\u6548\u679c\u4e00\u6837\u3002\u6211\u53ea\u80fd\u7528glBufferSubData\u53bb\u624b\u52a8\u5237\u65b0\u3002\n\n## 2.4 Shader \u5b9e\u73b0\n\n\u7740\u8272\u5668\u91cc\u9762\u6839\u636e\u4f20\u5165\u7684\u4f4d\u7f6e\u7ed8\u5236\u70b9\u5373\u53ef\n\n\u9876\u70b9\u7740\u8272\u5668\uff1ashader_base_v.glsl\n\u91cc\u9762\u6839\u636e\u5b9e\u9645\u8c03\u6574\u70b9\u7684\u5927\u5c0f gl_PointSize\n```glsl\n#version 300 es\nlayout (location = 0) in vec2 vPosition;\n\nout vec2 vPos;\n\nvoid main() {\n     vPos = vPosition / 10.0f;\n     gl_PointSize = 12.0f;\n     gl_Position  = vec4(vPos, 0.0f, 1.0f);\n}\n```\n\u7247\u6bb5\u7740\u8272\u5668\uff1ashader_base_v.glsl\n\u6839\u636e\u4f4d\u7f6e\u505a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u989c\u8272\u6e10\u53d8\n```glsl\n#version 300 es\nprecision mediump float;\n\nin vec2 vPos;\n\nout vec4 fragColor;\n\nvoid main() {\n     fragColor = vec4((vPos + 1.0f) * 0.5f, 0.5f, 1.0f);\n}\n```\n\n> \u5982\u679c\u60f3\u8981\u66f4\u597d\u7684\u6db2\u4f53\u5c55\u793a\u6548\u679c\uff0c\u5c31\u4e0d\u80fd\u7528\u7b80\u5355\u7684\u70b9\u7ed8\u5236\uff0c\u5e94\u8be5\u4f7f\u7528Texture\u7eb9\u7406\u8d34\u56fe\u548cblend\u6df7\u5408\uff0c\u8fd9\u5728LiquidFun Paint\u9879\u76ee\u91cc\u53ef\u4ee5\u770b\u5230\u3002\n\n## 3 ARM\u5904\u7406\u5668\u7684Neon\u4f18\u5316\n\n![ub06f-33jm1.gif](https://rome753.github.io/cdn/1896166-9beaca5f3fd9356d.gif)\n\n\u8c03\u6574\u7c92\u5b50\u7684\u6570\u91cf\u548c\u5927\u5c0f\u80fd\u5f97\u5230\u66f4\u7cbe\u7ec6\u7684\u5c55\u793a\u6548\u679c\uff0c\u4e0a\u56fe\u662f8000\u4e2a\u7c92\u5b50\uff0c\u5728\u6211\u7684\u9a81\u9f99865\u624b\u673a\u4e0a\u8fd0\u884c\u975e\u5e38\u6d41\u7545\uff0c\u8fd9\u5f97\u76ca\u4e8eLiquidFun\u7684\u8ba1\u7b97\u4f18\u5316\u3002\n\n\u5728LiquidFun\u7684\u6e90\u7801\u91cc\uff0c\u6211\u53d1\u73b0\u4e86[b2ParticleAssembly.neon.s](https://github.com/google/liquidfun/blob/master/liquidfun/Box2D/Box2D/Particle/b2ParticleAssembly.neon.s\")\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5b83\u91cc\u9762\u5c45\u7136\u662f\u6c47\u7f16\u8bed\u8a00\uff01\u67e5\u9605\u4e86\u4e00\u4e0b\uff0c\u8fd9\u6b63\u662fARM\u5904\u7406\u5668\u7684Neon\u4f18\u5316\uff0c\u5b83\u53ef\u4ee5\u8ba9ARM\u5904\u7406\u5668\u5e76\u884c\u5904\u7406\u6570\u636e\uff0c\u80fd\u5927\u5e45\u63d0\u9ad8CPU\u8ba1\u7b97\u901f\u5ea6\u3002\u9879\u76ee\u7f16\u8bd1\u65f6\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u5f00\u542fNeon\uff0c\u6211\u6253\u4e86\u4e00\u4e2a\u4e0d\u5f00\u542fNeon\u7684so\u8ddf\u6b63\u5e38\u5f00\u542f\u7684\u5bf9\u6bd4\uff0c\u53d1\u73b0\u5f00\u542fNeon\u4f18\u5316\u7684\u8ba1\u7b97\u901f\u5ea6\u80fd\u63d0\u53474\u500d\u5de6\u53f3\uff01\n\n\n![\u6355\u83b7.PNG](https://rome753.github.io/cdn/1896166-7dd9ba38c506dbd7.png)\n\n# 4 Github\u5730\u5740\n\u5b8c\u6574\u9879\u76ee\u5728[SurfacePaint](https://github.com/rome753/SurfacePaint)\u9879\u76ee\u4e0b\u7684`liquidapp`\u6a21\u5757\u91cc\u3002\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---LiquidFun-\u6d41\u4f53\u5e93", "dateCreated": "20220718T18:06:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491505.html", "permalink": "https://www.cnblogs.com/rome753/p/16491505.html", "postid": 16491505, "description": "\u666e\u901a\u7684OpenGL\u7ed8\u56fe\u65f6\u662f\u7ed8\u5236\u5230\u5f53\u524d\u5e27\u4e0a\u9762\uff0c\u7531\u4e8eGL\u73af\u5883\u8ddf\u5f53\u524d\u5c4f\u5e55\u8fdb\u884c\u4e86\u5173\u8054\uff0c\u4e5f\u5c31\u76f4\u63a5\u7ed8\u5236\u5230\u5c4f\u5e55\u4e86\u3002\u8fd9\u6837\u6709\u4e24\u4e2a\u95ee\u9898\uff1a1. \u5982\u679c\u6709\u7684\u5e27\u8ba1\u7b97\u5f97\u5feb\uff0c\u6709\u7684\u8ba1\u7b97\u5f97\u6162\uff0c\u800c\u5c4f\u5e55\u5237\u65b0\u7387\u662f\u56fa\u5b9a\u7684\uff0c\u5c31\u4f1a\u62d6\u6162\u6574\u4f53\u5e27\u7387\uff1b2. \u5728\u7740\u8272\u5668\u91cc\u9762\u53ea\u80fd\u5904\u7406\u5f53\u524d\u4f4d\u7f6e\u7684\u70b9\uff0c\u6ca1\u529e\u6cd5\u5904\u7406\u5f53\u524d\u70b9\u8ddf\u5176\u4ed6\u70b9\u7684\u5173\u7cfb\u3002\n\n\u5982\u679c\u5c06OpenGL\u8ba1\u7b97\u540e\u7684\u5e27\u7f13\u5b58\u8d77\u6765\uff0c\u4e0d\u76f4\u63a5\u7ed8\u5236\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5229\u7528\u53cc\u7f13\u51b2\u6216\u591a\u7f13\u51b2\u6280\u672f\u7a33\u5b9a\u5e27\u7387\uff1b\u5728\u7740\u8272\u5668\u91cc\u9762\u53ef\u4ee5\u4ece\u7f13\u5b58\u5e27\u8bfb\u53d6\u6240\u6709\u70b9\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u76f8\u5bf9\u4f4d\u7f6e\u5904\u7406\uff0c\u6bd4\u5982\u5c06\u5f53\u524d\u70b9\u8ddf\u5468\u56f4\u70b9\u989c\u8272\u8ba1\u7b97\u5e73\u5747\u503c\uff0c\u8fdb\u884c\u56fe\u50cf\u6a21\u7cca\u3002\u8fd9\u5c31\u662f\u5e27\u7f13\u51b2\u3002\n\n\u7ed9\u4e00\u4e2a\u666e\u901a\u7684\u7ed8\u5236\u6dfb\u52a0\u5e27\u7f13\u51b2\u4e5f\u5f88\u65b9\u4fbf\uff0c\u57fa\u672c\u4e0d\u5f71\u54cd\u539f\u6765\u7684\u7ed8\u5236\u3002\u5047\u8bbe\u539f\u6765\u7ed8\u5236\u7684\u662f\u4e09\u89d2\u5f62\uff0c\u90a3\u4e48\u5148\u914d\u7f6e\u4e00\u4e0b\u5e27\u7f13\u51b2\uff0c\u53ef\u4ee5\u914d\u7f6e\u62102D\u7eb9\u7406\uff0c\u7136\u540e\u8fdb\u884c\u539f\u6765\u7684\u7ed8\u5236\uff0c\u4e09\u89d2\u5f62\u5c31\u4f1a\u7ed8\u5236\u5230\u7f13\u51b2\u5e27\u7684\u7eb9\u7406\u4e0a\u9762\uff0c\u6700\u540e\u5c06\u8fd9\u4e2a2D\u7eb9\u7406\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5b9e\u73b0\u65b9\u6cd5\uff1a\n\n# 1 \u539f\u56fe\u5f62Shader\n\u539f\u56fe\u5f62\u662f\u5f88\u591a\u4e2a\u65cb\u8f6c\u76843D\u7bb1\u5b50\n\n![image.png](https://rome753.github.io/cdn/1896166-7370d45ffb7472c1.png)\n\n\n```java\n\n    static class Simple3DShader {\n\n        int program;\n        FloatBuffer vertexBuffer;\n        int[] vao;\n        int[] tex;\n\n        public void init() {\n\n            program = ShaderUtils.loadProgram3D();\n            //\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n            vertexBuffer = ByteBuffer.allocateDirect(vertices.length * 4)\n                    .order(ByteOrder.nativeOrder())\n                    .asFloatBuffer();\n            //\u4f20\u5165\u6307\u5b9a\u7684\u5750\u6807\u6570\u636e\n            vertexBuffer.put(vertices);\n            vertexBuffer.position(0);\n\n            vao = new int[1];\n            glGenVertexArrays(1, vao, 0);\n            glBindVertexArray(vao[0]);\n\n            int[] vbo = new int[1];\n            glGenBuffers(1, vbo, 0);\n            glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n            glBufferData(GL_ARRAY_BUFFER, vertices.length * 4, vertexBuffer, GL_STATIC_DRAW);\n\n            tex = new int[2];\n            glGenTextures(2, tex, 0);\n            glActiveTexture(GL_TEXTURE0);\n            glBindTexture(GL_TEXTURE_2D, tex[0]);\n            // \u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u8bbe\u7f6e\u73af\u7ed5\u3001\u8fc7\u6ee4\u65b9\u5f0f\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n            Bitmap bitmap = ShaderUtils.loadImageAssets(\"wall.jpg\");\n            GLUtils.texImage2D(GL_TEXTURE_2D, 0, bitmap, 0);\n            glGenerateMipmap(GL_TEXTURE_2D);\n\n            glActiveTexture(GL_TEXTURE1);\n            glBindTexture(GL_TEXTURE_2D, tex[1]);\n            // \u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u8bbe\u7f6e\u73af\u7ed5\u3001\u8fc7\u6ee4\u65b9\u5f0f\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n            Bitmap bitmap1 = ShaderUtils.loadImageAssets(\"face.png\");\n            GLUtils.texImage2D(GL_TEXTURE_2D, 0, bitmap1, 0);\n            glGenerateMipmap(GL_TEXTURE_2D);\n\n            glUseProgram(program);\n            int loc0 = glGetUniformLocation(program, \"texture1\");\n            glUniform1i(loc0, 0);\n            int loc1 = glGetUniformLocation(program, \"texture2\");\n            glUniform1i(loc1, 1);\n\n            // Load the vertex data\n            glVertexAttribPointer(0, 3, GL_FLOAT, false, 5 * 4, 0);\n            glEnableVertexAttribArray(0);\n\n            glVertexAttribPointer(1, 2, GL_FLOAT, false, 5 * 4, 3 * 4);\n            glEnableVertexAttribArray(1);\n\n\n            glBindBuffer(GL_ARRAY_BUFFER, 0);\n            glBindVertexArray(0);\n        }\n\n        public void draw(float[] modelMat, float[] viewMat, float[] projectionMat, float rot) {\n            // Use the program object\n            glUseProgram(program);\n            glBindTexture(GL_TEXTURE_2D, tex[0]);\n            glBindTexture(GL_TEXTURE_2D, tex[1]);\n\n            int loc1 = glGetUniformLocation(program, \"view\");\n            glUniformMatrix4fv(loc1, 1, false, viewMat, 0);\n            int loc2 = glGetUniformLocation(program, \"projection\");\n            glUniformMatrix4fv(loc2, 1, false, projectionMat, 0);\n\n            glBindVertexArray(vao[0]);\n//Matrix.setLookAtM();\n            for (int i = 0; i < cubePositions.length; i++) {\n                Matrix.setIdentityM(modelMat, 0);\n                Matrix.translateM(modelMat, 0, cubePositions[i][0], cubePositions[i][1], cubePositions[i][2]);\n                if (i % 3 == 0) {\n                    Matrix.rotateM(modelMat, 0, rot, 0.5f, 1f, 0.2f);\n                }\n                int loc = glGetUniformLocation(program, \"model\");\n                glUniformMatrix4fv(loc, 1, false, modelMat, 0);\n\n                glDrawArrays ( GL_TRIANGLES, 0, vertices.length );\n            }\n\n        }\n\n```\n\n# 2 \u914d\u7f6e\u5e27\u7f13\u51b2\n\u521b\u5efa\u5e27\u7f13\u51b2\u5bf9\u8c61fbo\uff0c\u521b\u5efa\u7eb9\u7406\u5bf9\u8c61tcbo\u548c\u6e32\u67d3\u7f13\u51b2\u5bf9\u8c61rbo\uff0c\u5c06\u5b83\u4eec\u4fe9\u8ddffbo\u7ed1\u5b9a\uff0c\u68c0\u67e5\u4e00\u4e0b\u662f\u5426\u6210\u529f\u3002\n> \u914d\u7f6e\u65f6\u9700\u8981\u7eb9\u7406\u7684\u5bbd\u9ad8\uff0c\u8981\u4f20\u5165GLSurfaceView\u7684\u5bbd\u9ad8\u3002\u8fd9\u91cc\u505a\u4e86\u4e00\u4e2a\u5ef6\u65f6\u521d\u59cb\u5316\u3002\n\n```java\n    int[] fbo;\n    int[] tcbo;\n    int[] rbo;\n\n    private void initFramebuffer(int w, int h) {\n        if (fbo != null) {\n            return;\n        }\n        fbo = new int[1];\n        glGenFramebuffers(1, fbo, 0);\n        glBindFramebuffer(GL_FRAMEBUFFER, fbo[0]);\n\n        // \u751f\u6210\u7eb9\u7406\n        tcbo = new int[1];\n        glGenTextures(1, tcbo, 0);\n        glBindTexture(GL_TEXTURE_2D, tcbo[0]);\n        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, w, h, 0, GL_RGB, GL_UNSIGNED_BYTE, null);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n        glBindTexture(GL_TEXTURE_2D, 0);\n\n        // \u5c06\u5b83\u9644\u52a0\u5230\u5f53\u524d\u7ed1\u5b9a\u7684\u5e27\u7f13\u51b2\u5bf9\u8c61\n        glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, tcbo[0], 0);\n\n        rbo = new int[1];\n        glGenRenderbuffers(1, rbo, 0);\n        glBindRenderbuffer(GL_RENDERBUFFER, rbo[0]);\n        glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH24_STENCIL8, w, h);\n        glBindRenderbuffer(GL_RENDERBUFFER, 0);\n\n        glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_RENDERBUFFER, rbo[0]);\n\n        if (glCheckFramebufferStatus(GL_FRAMEBUFFER) != GL_FRAMEBUFFER_COMPLETE) {\n            Log.e(\"chao\", \"\u521b\u5efaFramebuffer\u6ca1\u6709\u5b8c\u6210\uff01\");\n        }\n        glBindFramebuffer(GL_FRAMEBUFFER, 0);\n    }\n```\n\n# 3 \u5e27\u7f13\u51b2Shader\n\u521b\u5efa\u9876\u70b9\u6570\u7ec4\u7f13\u51b2\u5bf9\u8c61vbo\uff0c\u7ed8\u5236\u4e00\u4e2a\u5e26\u7eb9\u7406\u7684\u6b63\u65b9\u5f62\uff0c\u6ce8\u610f\u7eb9\u7406\u9700\u8981\u7528\u4e0a\u4e00\u6b65\u521b\u5efa\u7684\u7eb9\u7406\u5bf9\u8c61tcbo\n\n```java\n    static class ScreenShader {\n\n        float vertices[] = { // vertex attributes for a quad that fills the entire screen in Normalized Device Coordinates.\n                // positions   // texCoords\n                -1.0f,  1.0f,  0.0f, 1.0f,\n                -1.0f, -1.0f,  0.0f, 0.0f,\n                1.0f, -1.0f,  1.0f, 0.0f,\n\n                -1.0f,  1.0f,  0.0f, 1.0f,\n                1.0f, -1.0f,  1.0f, 0.0f,\n                1.0f,  1.0f,  1.0f, 1.0f\n        };\n\n        int program;\n        int[] vao;\n\n        public void init() {\n            program = ShaderUtils.loadProgramFramebuffer();\n            //\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n            FloatBuffer vertexBuffer = ByteBuffer.allocateDirect(vertices.length * 4)\n                    .order(ByteOrder.nativeOrder())\n                    .asFloatBuffer();\n            //\u4f20\u5165\u6307\u5b9a\u7684\u5750\u6807\u6570\u636e\n            vertexBuffer.put(vertices);\n            vertexBuffer.position(0);\n\n            vao = new int[1];\n            glGenVertexArrays(1, vao, 0);\n            glBindVertexArray(vao[0]);\n\n            int[] vbo = new int[1];\n            glGenBuffers(1, vbo, 0);\n            glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n            glBufferData(GL_ARRAY_BUFFER, vertices.length * 4, vertexBuffer, GL_STATIC_DRAW);\n\n            glVertexAttribPointer(0, 2, GL_FLOAT, false, 4 * 4, 0);\n            glEnableVertexAttribArray(0);\n\n            glVertexAttribPointer(1, 2, GL_FLOAT, false, 4 * 4, 2 * 4);\n            glEnableVertexAttribArray(1);\n\n\n            glUseProgram(program);\n            int loc = glGetUniformLocation(program, \"screenTexture\");\n            glUniform1i(loc, 1);\n\n\n            glBindBuffer(GL_ARRAY_BUFFER, 0);\n            glBindVertexArray(0);\n\n        }\n\n    }\n```\n\n# 4 \u6700\u7ec8\u7ed8\u5236\n\u5148\u7ed1\u5b9a\u5e27\u7f13\u51b2\u5bf9\u8c61\uff0c\u5f00\u542f\u6df1\u5ea6\u6d4b\u8bd5\uff0c\u7528\u539f\u56fe\u5f62Shader\u7ed8\u52363D\u7bb1\u5b50\u56fe\u6848\uff1b\u7136\u540e\u89e3\u7ed1\u5e27\u7f13\u51b2\u5bf9\u8c61fbo\uff0c\u5173\u95ed\u6df1\u5ea6\u6d4b\u8bd5\uff08\u7ed1\u5b9a\u5f53\u524d\u5c4f\u5e55\uff09\uff0c\u7528\u5e27\u7f13\u51b2Shader\u7ed8\u5236fbo\u4e2d\u7684\u7eb9\u7406\u3002\u7ed8\u5236\u7ed3\u679c\u8ddf\u539f\u56fe\u5f62\u5b8c\u5168\u4e00\u81f4\u3002\n\n```java\n    @Override\n    public void onDrawFrame(GL10 gl) {\n        ...\n//        // \u7b2c\u4e00\u9636\u6bb5\u5904\u7406\uff08Pass\uff09\uff0c\u7ed8\u52363D\u56fe\u5f62\u5230Framebuffer\n        glBindFramebuffer(GL_FRAMEBUFFER, fbo[0]);\n        glClearColor(0.5f, 0.5f, 0.5f, 0.5f);\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n        glEnable(GL_DEPTH_TEST);\n        simple3DShader.draw(modelMat, viewMat, projectionMat, rot);\n\n        // \u7b2c\u4e8c\u9636\u6bb5\u5904\u7406\uff0c\u628aFramebuffer\u7ed8\u5236\u4e3a2D\u7eb9\u7406\n        glBindFramebuffer(GL_FRAMEBUFFER, 0);\n        glClearColor(1.0f, 1.0f, 1.0f, 1.0f);\n        glClear(GL_COLOR_BUFFER_BIT);\n\n        screenShader.draw(tcbo);\n\n    }\n\n        // screenShader.draw\n        public void draw(int[] tcbo) {\n            glUseProgram(program);\n            glBindVertexArray(vao[0]);\n            glDisable(GL_DEPTH_TEST);\n            glBindTexture(GL_TEXTURE_2D, tcbo[0]);\n            glDrawArrays(GL_TRIANGLES, 0, 6);\n        }\n```\n\n> \u505a\u5e27\u7f13\u51b2\u7684\u8fc7\u7a0b\u53ef\u80fd\u51fa\u9519\uff0c\u4f46\u662f\u6ca1\u5173\u7cfb\uff0c\u7ed8\u5236\u539f\u56fe\u5f62\u4e0e\u7ed8\u5236\u5e27\u7f13\u51b2\u77e9\u5f62\u7eb9\u7406\u662f\u975e\u5e38\u72ec\u7acb\u7684\u3002\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u7ed8\u5236\u5206\u5f00\u8c03\u8bd5\uff0c\u90fd\u6ca1\u95ee\u9898\u4e86\u518d\u7ed3\u5408\u8d77\u6765\u3002\n\n# 5 \u540e\u671f\u5904\u7406\n\u6709\u4e86\u5e27\u7f13\u51b2\u540e\uff0c\u53ef\u4ee5\u5728\u5e27\u7f13\u51b2\u7684\u7247\u6bb5\u7740\u8272\u5668\u4e0a\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u56fe\u50cf\u5904\u7406\uff1a\u53cd\u76f8\u3001\u7070\u5ea6\uff1b\u6838\u6548\u679c\uff1a\u6a21\u7cca\u3001\u9510\u5316\u3001\u8fb9\u7f18\u68c0\u6d4b\u7b49\u3002\n\n> \u6838\u6548\u679c\u5c31\u662f\u5c06\u5f53\u524d\u70b9\u5468\u56f4\u5305\u62ec\u81ea\u5df1\u76849\u4e2a\u70b9\u6570\u503c\u8fdb\u884c\u7b80\u5355\u7684\u5377\u79ef\u8fd0\u7b97\uff0c\u7ed3\u679c\u8d4b\u7ed9\u5f53\u524d\u70b9\uff0c\u4f7f\u56fe\u50cf\u5448\u73b0\u67d0\u79cd\u89c6\u89c9\u6548\u679c\u3002\n\n![\u6a21\u7cca.png](https://rome753.github.io/cdn/1896166-eafe40e98af60d18.png)\n\n![\u9510\u5316.png](https://rome753.github.io/cdn/1896166-f68afe8ec20b7558.png)\n\n![\u8fb9\u7f18\u68c0\u6d4b.png](https://rome753.github.io/cdn/1896166-60e01502630fc9ad.png)\n\n```glsl\n#version 300 es\nout vec4 FragColor;\n\nin vec2 TexCoords;\n\nuniform sampler2D screenTexture;\n\n//void main()\n//{\n//     FragColor = texture(screenTexture, TexCoords);\n//\n//     // \u53cd\u76f8\u6548\u679c\n//     FragColor = vec4(1.0 - texture(screenTexture, TexCoords).rgb, 1.0);\n//\n//     // \u7070\u5ea6\u6548\u679c\n//     float ave = (FragColor.r + FragColor.g + FragColor.b) / 3.0;\n//     FragColor = vec4(ave, ave, ave, 1.0);\n//}\n\nconst float offset = 1.0 / 300.0;\n\nvoid main()\n{\n     vec2 offsets[9] = vec2[](\n     vec2(-offset,  offset), // \u5de6\u4e0a\n     vec2( 0.0f,    offset), // \u6b63\u4e0a\n     vec2( offset,  offset), // \u53f3\u4e0a\n     vec2(-offset,  0.0f),   // \u5de6\n     vec2( 0.0f,    0.0f),   // \u4e2d\n     vec2( offset,  0.0f),   // \u53f3\n     vec2(-offset, -offset), // \u5de6\u4e0b\n     vec2( 0.0f,   -offset), // \u6b63\u4e0b\n     vec2( offset, -offset)  // \u53f3\u4e0b\n     );\n\n     // \u9510\u5316\u6838\n     float kernel[9] = float[](\n     -1.0, -1.0, -1.0,\n     -1.0,  9.0, -1.0,\n     -1.0, -1.0, -1.0\n     );\n\n//     // \u8fb9\u7f18\u68c0\u6d4b\u6838\n//     float kernel[9] = float[](\n//     1.0, 1.0, 1.0,\n//     1.0,-8.0, 1.0,\n//     1.0, 1.0, 1.0\n//     );\n\n//     // \u6a21\u7cca\u6838\n//     float kernel[9] = float[](\n//     1.0 / 16.0, 2.0 / 16.0, 1.0 / 16.0,\n//     2.0 / 16.0, 4.0 / 16.0, 2.0 / 16.0,\n//     1.0 / 16.0, 2.0 / 16.0, 1.0 / 16.0\n//     );\n\n     vec3 sampleTex[9];\n     for(int i = 0; i < 9; i++)\n     {\n          sampleTex[i] = vec3(texture(screenTexture, TexCoords.st + offsets[i]));\n     }\n     vec3 col = vec3(0.0);\n     for(int i = 0; i < 9; i++)\n     col += sampleTex[i] * kernel[i];\n\n     FragColor = vec4(col, 1.0);\n}\n```\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---\u5e27\u7f13\u51b2", "dateCreated": "20220718T18:05:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491508.html", "permalink": "https://www.cnblogs.com/rome753/p/16491508.html", "postid": 16491508, "description": "![image.png](https://rome753.github.io/cdn/1896166-e138b41ed97b6bad.png)\n\n\u5c0f\u7c73\u624b\u673a\u64ad\u653e\u97f3\u4e50\u65f6\u9501\u5c4f\u9875\u9762\u53ef\u4ee5\u8bbe\u7f6e\u97f3\u9891\u53ef\u89c6\u5316\u6548\u679c\uff0c\u8fd9\u662f\u7528OpenGL\u7ed8\u5236\u51fa\u6765\u7684\uff0c\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e0b\u3002\n\n\u9996\u5148\u7b80\u5355\u5206\u6790\u4e00\u4e0b\u539f\u7406\uff1a\n\u56fe\u5f62\u7684\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u58f0\u97f3\u7247\u6bb5\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u6309\u7167\u6570\u503c\u5927\u5c0f\u7ed8\u5236\u4e0d\u540c\u7684\u9ad8\u5ea6\uff0c\u5c31\u5f62\u6210\u4e86\u4e00\u6761\u201c\u5c71\u8109\u201d\uff1b\u83b7\u53d6\u5230\u4e0b\u4e00\u4e2a\u58f0\u97f3\u7247\u6bb5\u540e\uff0c\u5c06\u5b83\u7ed8\u5236\u5230\u4e0b\u9762\u4e00\u884c\uff0c\u7136\u540e\u753b\u9762\u6574\u4f53\u5411\u4e0a\u6eda\u52a8\u5c31\u53ef\u4ee5\u4e86\u3002\u6574\u4f53\u7c7b\u4f3c\u4e8e\u7ed8\u5236\u4e00\u5f20\u6e38\u620f\u91cc\u5e38\u89c1\u76843D\u5730\u5f62\u56fe\u3002\n\n# 1 \u521d\u59cb\u5316MediaPlayer\n\u521b\u5efa\u4e00\u4e2aMediaPlayer\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6res/raw\u91cc\u9762\u7684\u97f3\u9891\u6587\u4ef6\uff0cstart()\u5f00\u59cb\u64ad\u653e\n```java\n    private MediaPlayer mMediaPlayer;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        setVolumeControlStream(AudioManager.STREAM_MUSIC);\n\n        // Create the MediaPlayer\n        mMediaPlayer = MediaPlayer.create(this, R.raw.jay);\n\n//        setupVisualizerFxAndUI();\n//        // Make sure the visualizer is enabled only when you actually want to receive data, and\n//        // when it makes sense to receive data.\n//        mVisualizer.setEnabled(true);\n\n        // When the stream ends, we don't need to collect any more data. We don't do this in\n        // setupVisualizerFxAndUI because we likely want to have more, non-Visualizer related code\n        // in this callback.\n        mMediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {\n            public void onCompletion(MediaPlayer mediaPlayer) {\n                mVisualizer.setEnabled(false);\n            }\n        });\n\n        mMediaPlayer.start();\n```\n\n# 2 \u521d\u59cb\u5316Visualizer\nVisualizer\u662fAndroid SDK\u91cc\u9762\u63d0\u4f9b\u7684\u97f3\u9891\u5206\u6790\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u64ad\u653e\u7684\u97f3\u9891\u7684\u6ce2\u5f62\u548c\u9891\u8c31\u3002onWaveFormDataCapture\u56de\u8c03\u65b9\u6cd5\u91cc\u8fd4\u56de\u7684\u662f\u539f\u59cb\u7684PCM\u6ce2\u5f62\u6570\u7ec4\uff0conFftDataCapture\u56de\u8c03\u65b9\u6cd5\u91cc\u8fd4\u56de\u7684\u662f\u7ecf\u8fc7\u5feb\u901f\u5085\u91cc\u53f6\u65b9\u6cd5\u8f6c\u6362\u540e\u7684\u58f0\u97f3\u9891\u8c31\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u7b2c\u4e00\u4f4d\u662f\u76f4\u6d41\u5206\u91cf\uff0c\u540e\u9762\u662f\u4e0d\u540c\u9891\u7387\u7684\u6570\u503c\u3002\n\n\u6bcf\u6b21\u83b7\u53d6\u5230\u7684\u662f\u4e00\u7ec4\u58f0\u97f3\u6570\u636e\uff0c\u5c06\u5b83\u4f20\u7ed9Render\u7ed8\u5236\u3002\n\n\n```java\n    private void setupVisualizerFxAndUI() {\n        // Create the Visualizer object and attach it to our media player.\n        mVisualizer = new Visualizer(mMediaPlayer.getAudioSessionId());\n//        mVisualizer.setCaptureSize(Visualizer.getCaptureSizeRange()[1]);\n        mVisualizer.setCaptureSize(Visualizer.getCaptureSizeRange()[0]);\n        mVisualizer.setDataCaptureListener(new Visualizer.OnDataCaptureListener() {\n            public void onWaveFormDataCapture(Visualizer visualizer, byte[] bytes,\n                                              int samplingRate) {\n                AudioRender render = (AudioRender) GLAudioActivity.this.render;\n                render.update(bytes);\n                glSurfaceView.requestRender();\n            }\n\n            public void onFftDataCapture(Visualizer visualizer, byte[] bytes, int samplingRate) {\n//                AudioRender render = (AudioRender) GLAudioActivity.this.render;\n//                render.update(bytes);\n//                glSurfaceView.requestRender();\n            }\n        }, Visualizer.getMaxCaptureRate() / 2, true, true);\n    }\n\n```\n\n# 3 Shader\u5b9e\u73b0\n\n## 3.1 \u7ed8\u5236\u5730\u5f62\u56fe\n\u9996\u5148\u786e\u5b9a\u56fe\u5f62\u7684\u957f\u5bbd\uff0c\u5bbd\u5ea6w\u5176\u5b9e\u662f\u7531\u6bcf\u7ec4\u97f3\u9891\u7684\u6570\u7ec4\u957f\u5ea6\u51b3\u5b9a\uff0c\u53ef\u4ee5\u7531Visualizer.getCaptureSizeRange()[0]\u83b7\u53d6\uff0c\u8fd9\u91cc\u83b7\u53d6\u7684\u662f\u6700\u5c0f\u7684\u6570\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u7528Visualizer.getCaptureSizeRange()[1]\u83b7\u53d6\u6700\u5927\u7684\u6570\u7ec4\uff1b\u957f\u5ea6h\u53ef\u4ee5\u81ea\u5df1\u8bbe\u7f6e\u60f3\u5c55\u793a\u591a\u957f\u3002\n\n\u7ed8\u5236\u5730\u5f62\u56fe\u4e5f\u5c31\u662f\u7ed8\u5236w * h * 2\u4e2a\u4e09\u89d2\u5f62\uff0c\u521b\u5efavao\u3001vbo\u548cebo\uff0c\u7531\u4e8e\u9876\u70b9\u7684\u4f4d\u7f6e\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u53ef\u4ee5\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7528gl_VertexID\u83b7\u53d6\uff0c\u6240\u4ee5vbo\u91cc\u9762\u4e0d\u7528\u4f20\u9876\u70b9\u6570\u636e\uff0c\u76f4\u63a5\u4f20\u58f0\u97f3\u6570\u7ec4\u3002\n\n```java\n    public static int w = 128, h = 128;\n\n    int[] indices;\n\n    int program;\n    ByteBuffer vertexBuffer;\n    byte[] lineBytes = new byte[w];\n    int lineNum = 0;\n\n    int[] vao;\n    int[] vbo;\n\n    IntBuffer intBuffer;\n\n    @Override\n    public void onSurfaceCreated(GL10 gl, EGLConfig config) {\n\n        program = ShaderUtils.loadProgramAudio();\n\n        //\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n        vertexBuffer = ByteBuffer.allocateDirect(w * h)\n                .order(ByteOrder.LITTLE_ENDIAN);\n        vertexBuffer.position(0);\n\n//        updateBuffer();\n        vertexBuffer.position(0);\n\n        vao = new int[1];\n        glGenVertexArrays(1, vao, 0);\n        glBindVertexArray(vao[0]);\n\n        vbo = new int[1];\n        glGenBuffers(1, vbo, 0);\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n        glBufferData(GL_ARRAY_BUFFER, w * h, vertexBuffer, GL_STATIC_DRAW);\n\n        indices = strip(w, h);\n\n        intBuffer = IntBuffer.allocate(indices.length * 4);\n        intBuffer.put(indices);\n        intBuffer.position(0);\n\n        int[] ebo = new int[1];\n        glGenBuffers(1, ebo, 0);\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, ebo[0]);\n        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.length * 4, intBuffer, GL_STATIC_DRAW);\n\n\n        // Load the vertex data\n        glVertexAttribPointer(0, 1, GL_FLOAT, false, 1, 0);\n        glEnableVertexAttribArray(0);\n\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n        glBindVertexArray(0);\n\n        glClearColor(0.5f, 0.5f, 0.5f, 0.5f);\n\n        glEnable(GL_DEPTH_TEST);\n//        glCullFace(GL_BACK);\n//        glEnable(GL_CULL_FACE);\n    }\n```\n## 3.2 \u58f0\u97f3\u961f\u5217\u5237\u65b0\n\u7531\u4e8e\u56fe\u5f62\u662f\u4e0d\u65ad\u5237\u65b0\u6700\u540e\u4e00\u884c\u5e76\u5411\u4e0a\u6eda\u52a8\u7684\uff0c\u90a3\u4e48\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u961f\u5217\uff0c\u4e3a\u4e86\u6bcf\u4e00\u5e27\u6570\u636e\u6539\u53d8\u6700\u5c0f\uff0c\u4e0d\u81f3\u4e8e\u8fdb\u884c\u5927\u91cf\u7684\u6570\u7ec4\u590d\u5236\u548c\u79fb\u52a8\u3002\u6211\u4eec**\u7528ByteBuffer vertexBuffer\u6a21\u62df\u4e00\u4e2a\u5faa\u73af\u961f\u5217\uff0c\u4f7f\u7528\u4e00\u4e2a\u884c\u53f7int lineNum\u6765\u6807\u8bb0\u961f\u5217\u7684\u5934\u90e8\u3002\u6bcf\u6dfb\u52a0\u4e00\u884c\u6570\u636e\u540e\uff0clineNum\u4f1a\u52a0\u4e0aw\uff0c\u8fd9\u6837ByteBuffer\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff1alineNum * w\u4e4b\u540e\u7684\u662f\u65b0\u65e7\u6570\u636e\uff0c\u4e4b\u524d\u7684\u662f\u65e7\u6570\u636e**\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u5c06\u6570\u636e\u4ece\u4e3b\u5185\u5b58\uff08vertexBuffer\uff09\u590d\u5236\u5230GPU\u663e\u5b58\uff08vbo\uff09\u3002vertexBuffer\u91cc\u662f\u4e00\u4e2a\u5faa\u73af\u961f\u5217\uff0c\u800cvbo\u91cc\u9762\u53ea\u80fd\u987a\u5e8f\u4fdd\u5b58\uff08\u56e0\u4e3aebo\u5e8f\u53f7\u662f\u987a\u5e8f\u7684\uff0cvbo\u4e0d\u662f\u987a\u5e8f\u56fe\u5f62\u5c31\u4f1a\u9519\u4e71\uff09\uff0c\u66f4\u65b0vbo\u6570\u636e\u7f13\u5b58\u7684glBufferSubData\u65b9\u6cd5\u652f\u6301\u8bbe\u7f6e\u504f\u79fb\u4f4d\u7f6e\u90e8\u5206\u66f4\u65b0\u3002\u90a3\u4e48\u6211\u4eec**\u5148\u5c06vertexBuffer\u5b9a\u4f4d\u5230lineNum * w\uff0c\u5c06\u5b83\u540e\u9762\u7684\u65e7\u6570\u636e\u590d\u5236\u5230vbo\u7684\u524d\u9762\uff1b\u7136\u540e\u5c06vertexBuffer\u5b9a\u4f4d\u52300\uff0c\u5c06\u5269\u4e0b\u7684\u65b0\u6570\u636e\u590d\u5236\u5230vbo\u7684\u540e\u9762**\u3002\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u7ed8\u5236\u65f6\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u65e7\u5230\u65b0\u3002\n\n```java\n    public void update(byte[] bytes) {\n        vertexBuffer.position(lineNum * w);\n        vertexBuffer.put(bytes);\n        lineNum = (lineNum + 1) % h;\n    }\n\n    @Override\n    public void onDrawFrame(GL10 gl) {\n        super.onDrawFrame(gl);\n        // Clear the color buffer\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n\n        // \u5237\u65b0vbo\u6570\u636e\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n        vertexBuffer.position(lineNum * w);\n        glBufferSubData(GL_ARRAY_BUFFER, 0, (h - lineNum) * w, vertexBuffer);\n        vertexBuffer.position(0);\n        glBufferSubData(GL_ARRAY_BUFFER, (h - lineNum) * w, lineNum * w, vertexBuffer);\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n    }\n```\n## 3.3 \u7740\u8272\u5668\u5904\u7406\u97f3\u9891\u6570\u503c\n\u4e3a\u4e86\u8ba9\u989c\u8272\u66f4\u4e30\u5bcc\uff0c\u8fd9\u91cc\u7528\u4e86\u5730\u5f62\u56fe\u4e2d\u5e38\u7528\u7684\u70ed\u5ea6\u6e10\u53d8\u8272\u6570\u7ec4\u3002\n\u7406\u8bba\u4e0a\u97f3\u9891\u6570\u503c\u662funsigned byte\u683c\u5f0f\u7684\uff0c\u4f46\u662f\u7740\u8272\u5668\u4e0d\u652f\u6301byte\u683c\u5f0f\uff0c\u6211\u76f4\u63a5\u7528int vPosition\u63a5\u6536\u6570\u636e\uff0c\u7136\u800c\u6570\u503c\u8303\u56f4\u4e0d\u518d\u662f0~255\u4e86\uff0c\u8fd9\u6709\u70b9\u5947\u602a\uff0c\u6211\u6ca1\u6709\u6df1\u5165\u7814\u7a76\u3002\u7b80\u5355\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u53d6int\u7684\u524d8\u4f4d\uff0c\u518d\u8fdb\u884c\u4e00\u70b9\u6bd4\u4f8b\u7f29\u653e\uff0c\u7528\u5b83\u53bb\u6e10\u53d8\u8272\u6570\u7ec4\u91cc\u53d6\u989c\u8272\uff0c\u4f1a\u53d6\u5f97\u8f83\u597d\u7684\u663e\u793a\u6548\u679c\u3002\n\n\u9876\u70b9\u7740\u8272\u5668 \nshader_audio_v.glsl\n\n```glsl\n#version 300 es\n// \u70ed\u5ea6\u6e10\u53d8\u8272 64\nconst int[] colors = int[](-16777216,-16318464,-15859712,-15400960,-14876672,-14417920,-13959168,-13500416,-12976128,-12517376,-12058624,-11599872,-11075584,-10158080,-9240576,-8323072,-7405568,-6488064,-5570560,-4653056,-3735552,-2818048,-1900544,-983040,-65536,-61440,-57088,-52736,-48640,-44288,-39936,-35840,-31488,-27136,-23040,-18688,-14336,-13312,-12032,-11008,-9728,-8704,-7424,-6144,-5120,-3840,-2816,-1536,-256,-235,-214,-193,-171,-150,-129,-108,-86,-65,-44,-23,-1,-1,-1,-1);\nlayout (location = 0) in int vPosition;\n\nuniform mat4 model;\nuniform mat4 view;\nuniform mat4 projection;\n\nuniform int lineNum;\nuniform int w;\nuniform int h;\n\nout vec3 aColor;\n\nvec3 generateColor(int k) {\n    int c = colors[k];\n    int r = (c >> 16) & 0xff;\n    int g = (c >> 8) & 0xff;\n    int b = c & 0xff;\n    return vec3(float(r)/255.0f, float(g)/255.0f, float(b)/255.0f);\n}\n\nvoid main() {\n    // gl_PointSize = 6.0;\n    float fw = float(w);\n    int y = gl_VertexID / w;\n    int x = gl_VertexID % w;\n    float fx = float(x) / fw - 0.5f;\n    float fy = 0.5f - float(y) / fw;\n\n    int h = vPosition;\n\n    // 128 ~ 160\n    int a = (h >> 24) & 0xff;\n//    int r = (h >> 16) & 0xff;\n//    int g = (h >> 8) & 0xff;\n//    int b = h & 0xff;\n\n\n    h = a - 128;\n    if (h < 0) {\n        h = 0;\n    }\n\n    int k = h > 31 ? 63 : h * 2;\n    aColor = generateColor(k);\n    gl_Position  = projection * view * model * vec4(fx, fy, float(h) / 256.0f, 1.0f);\n```\n\u5c06\u989c\u8272\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u663e\u793a\nshader_audio_f.glsl\n```glsl\n#version 300 es\nprecision mediump float;\nin vec3 aColor;\nout vec4 fragColor;\n\nvoid main() {\n     fragColor = vec4(aColor, 1.0);\n}\n```\n\u6700\u7ec8\u6548\u679c\u5982\u4e0b\u56fe\uff0c\u5f55\u5c4f\u8bbe\u7f6e\u7684\u7801\u7387\u6bd4\u8f83\u4f4e\uff0c\u5b9e\u9645\u4e0a\u662f\u5f88\u6e05\u6670\u7684\u3002\n![0goex-ip1tx.gif](https://rome753.github.io/cdn/1896166-3ddde4e8a73cbc4b.gif)\n\n\n# Github\u5730\u5740\n\u5b8c\u6574\u9879\u76ee\u5728[SurfacePaint](https://github.com/rome753/SurfacePaint)\u9879\u76ee\u4e0b\u7684`opengles3`\u6a21\u5757\u91cc\u7684audio\u3002\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---\u97f3\u9891\u53ef\u89c6\u5316\uff08\u6a21\u4effMIUI\u7cfb\u7edf\u6548\u679c\uff09", "dateCreated": "20220718T18:05:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491501.html", "permalink": "https://www.cnblogs.com/rome753/p/16491501.html", "postid": 16491501, "description": "OpenGL\u7ed8\u56fe\u4e00\u822c\u662f\u5728\u4e3b\u5185\u5b58\u521b\u5efa\u6570\u636e\uff0c\u8ba1\u7b97\u540e\u4f20\u7ed9GPU\u5185\u5b58\uff0c\u5982\u679c\u6570\u636e\u662f\u9891\u7e41\u53d8\u5316\u7684\uff0c\u90a3\u4e48\u6bcf\u4e00\u5e27\u90fd\u8981\u5c06\u6570\u636e\u7528glBufferSubData\u65b9\u6cd5\u590d\u5236\u5230GPU\u3002\u5176\u5b9e\u4e3b\u5185\u5b58\u6570\u636e\u53ef\u80fd\u662f\u5728\u4e00\u4e2a\u56fa\u5b9a\u7684\u6570\u7ec4\u91cc\uff0c\u5374\u8981\u5c06\u8fd9\u4e2a\u6570\u7ec4\u53cd\u590d\u590d\u5236\u5230GPU\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u7ec4\u80fd\u653e\u8fdbGPU\uff0c\u5728CPU\u8ba1\u7b97\u5b8c\u901a\u77e5GPU\u5237\u65b0\uff0c\u5c31\u7701\u53bb\u4e86\u590d\u5236\u7684\u64cd\u4f5c\u3002\n\n\u8fd9\u5c31\u662f\u6620\u5c04\u7f13\u51b2\u533a\u5bf9\u8c61\uff0c\u5b83\u53ef\u4ee5\u83b7\u53d6GPU\u4e2d\u5185\u5b58\u5730\u5740\uff0c\u6216\u8005\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u6bb5\u7a7a\u7684\u6570\u7ec4\uff0c\u64cd\u4f5c\u8fd9\u6bb5\u6570\u7ec4\u5c31\u7b49\u4e8e\u64cd\u4f5cGPU\u5185\u5b58\u4e2d\u7684\u6570\u636e\u3002\u4f7f\u7528\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff1a\u7528glMapBufferRange\u65b9\u6cd5\u83b7\u53d6\u5230\u6570\u7ec4\u540e\uff0c\u5728\u6570\u7ec4\u5185\u64cd\u4f5c\uff0c\u7136\u540e\u7528glFlushMappedBufferRange\u65b9\u6cd5\u901a\u77e5GPU\u5237\u65b0\u3002\u5f53\u7136\u4e5f\u6709\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u3002\n\n\u4e4b\u524d\u5199\u7684[Android OpenGLES3\u7ed8\u56fe - \u9c7c\u7fa4\u6a21\u62df](https://www.jianshu.com/p/d27bf24fdfc7)\uff0c\u5c31\u662f\u64cd\u4f5c\u4e00\u6bb5\u957f\u5ea6\u56fa\u5b9a\u7684\u6570\u7ec4\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u9879\u76ee\u4e0a\u5b9e\u9a8c\u4e00\u4e0b\u3002\n\n# 1 \u6620\u5c04\u5185\u5b58\n\n\u539f\u6765\u5206\u914dGPU\u5185\u5b58\u7684\u64cd\u4f5c\u662f\u7528ByteBuffer.allocate\u5206\u914d\u4e00\u6bb5Native\u5185\u5b58\uff0c\u901a\u8fc7vbo\u5c06\u5b83\u4f20\u7ed9GPU\u3002\u800cglMapBufferRange\u65b9\u6cd5\u8fd4\u56de\u4e86\u4e00\u4e2aByteBuffer\u5bf9\u8c61\uff0c\u5f88\u5bb9\u6613\u8ba4\u4e3a\u8fd9\u4e2aByteBuffer\u5c31\u662fNative\u5185\u5b58\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002\u7136\u800c\u5e76\u4e0d\u662f\uff0c\u5982\u679c**\u76f4\u63a5\u8c03\u7528glMapBufferRange\uff0c\u8fd4\u56de\u7684\u662fnull\uff0c\u5fc5\u987b\u8981\u5728\u5206\u914d\u5b8cGPU\u5185\u5b58\u540e\u53bb\u8c03\u7528**\u3002\u4ece\u201c\u6620\u5c04\u201d\u8fd9\u4e2a\u540d\u5b57\u4e5f\u53ef\u4ee5\u7406\u89e3\uff0c\u5b83\u662f\u5c06\u4e00\u6bb5GPU\u5185\u5b58\u6620\u5c04\u51fa\u6765\uff0c\u6620\u5c04\u4e4b\u524d\u5fc5\u987b\u5148\u7ed9GPU\u5206\u914d\u5185\u5b58\u3002\n\n\u8fd8\u6709Java\u7684\u7aef\u5e8f\u8ddfGPU\u5206\u914d\u7684\u4e0d\u4e00\u6837\uff0c\u6620\u5c04\u540e\u8981\u901a\u8fc7`ByteBuffer.order(ByteOrder.LITTLE_ENDIAN)`\u8f6c\u6362\u624d\u80fd\u4f7f\u7528\u3002\u6620\u5c04\u5230ByteBuffer\u540e\u5c31\u53ef\u4ee5\u7528`glUnmapBuffer(GL_ARRAY_BUFFER)`\u65b9\u6cd5\u53d6\u6d88\u6620\u5c04\u4e86\uff0c\u4e0d\u5f71\u54cd\u540e\u9762\u4f7f\u7528\u8fd9\u4e2aByteBuffer\u3002\n\n```java\n    @Override\n    public void onSurfaceCreated(GL10 gl, EGLConfig config) {\n\n//        initPos();\n        initAll();\n\n        program = ShaderUtils.loadProgramGroup();\n\n        // \u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n        posBuffer = ByteBuffer\n                .allocateDirect(2 * 4 * MAX_COUNT)\n                .order(ByteOrder.nativeOrder());\n\n        vao = new int[1];\n        glGenVertexArrays(1, vao, 0);\n        glBindVertexArray(vao[0]);\n\n        vbo = new int[1];\n        glGenBuffers(1, vbo, 0);\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n//        glBufferData(GL_ARRAY_BUFFER, vertices.length * 4, vertexBuffer, GL_STATIC_DRAW);\n        glBufferData(GL_ARRAY_BUFFER, MAX_COUNT * 4 * 2, posBuffer, GL_STREAM_DRAW);\n\n        if (useMapBuffer) {\n            // \u4f7f\u7528\u6620\u5c04\u7f13\u51b2\u533a\u5bf9\u8c61\uff0c\u5206\u914dGPU\u5185\u5b58\u76f4\u63a5\u64cd\u4f5c\n            ByteBuffer mapBuffer = (ByteBuffer) glMapBufferRange(GL_ARRAY_BUFFER, 0, MAX_COUNT * 4 * 2, GL_MAP_WRITE_BIT | GL_MAP_INVALIDATE_BUFFER_BIT);\n            posBuffer = mapBuffer.order(ByteOrder.LITTLE_ENDIAN);\n            glUnmapBuffer(GL_ARRAY_BUFFER);\n        }\n    }\n\n```\n\n# 2 \u901a\u77e5\u5237\u65b0\n\n\u539f\u6765\u5bf9ByteBuffer\u6570\u636e\u7684\u64cd\u4f5c\u90fd\u4e0d\u7528\u6539\uff0c\u5728\u8ba1\u7b97\u5b8c\u7ed8\u5236\u65f6\u4e0d\u7528\u901a\u8fc7`glBufferSubData `\u4f20\u8f93\u6570\u636e\u4e86\uff0c\u76f4\u63a5\u7528`glFlushMappedBufferRange `\u901a\u77e5GPU\u5237\u65b0\u5c31\u884c\u4e86\u3002\u8fd9\u91cc\u52a0\u4e86\u4e00\u4e2auseMapBuffer\u5e03\u5c14\u503c\uff0c\u5bf9\u6bd4\u4f7f\u7528\u6620\u5c04\u7f13\u51b2\u533a\u5bf9\u8c61\u524d\u540e\u7684\u533a\u522b\u3002\n\n```java\n    @Override\n    public void onDrawFrame(GL10 gl) {\n        super.onDrawFrame(gl);\n\n//        update();\n        updateAll();\n\n        // Clear the color buffer\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n\n        if (useMapBuffer) {\n            glFlushMappedBufferRange(GL_ARRAY_BUFFER, 0, MAX_COUNT * 4 * 2);\n        } else {\n            // \u5237\u65b0vbo\u6570\u636e\n            glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n            glBufferSubData(GL_ARRAY_BUFFER, 0, MAX_COUNT * 4 * 2,  posBuffer);\n            glBindBuffer(GL_ARRAY_BUFFER, 0);\n        }\n```\n\n> \u4ece\u8fd0\u884c\u5e27\u7387\u4e0a\u770b\uff0c\u4f7f\u7528\u6620\u5c04\u7f13\u51b2\u533a\u5bf9\u8c61\u540e\uff0c\u6027\u80fd\u6709\u4e00\u70b9\u63d0\u5347\uff0c\u4f46\u662f\u5e76\u4e0d\u660e\u663e\u3002\u8fd9\u8ddf\u5177\u4f53\u9879\u76ee\u6709\u5173\uff0c\u8fd9\u4e2a\u9879\u76ee\u7684\u6027\u80fd\u74f6\u9888\u5e76\u4e0d\u5728\u6b64\u5904\u3002\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---\u4f7f\u7528\u6620\u5c04\u7f13\u51b2\u533a\u5bf9\u8c61", "dateCreated": "20220718T18:04:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491502.html", "permalink": "https://www.cnblogs.com/rome753/p/16491502.html", "postid": 16491502, "description": "https://github.com/android/media-samples\n\u5b89\u5353\u5b98\u65b9\u7684\u89c6\u9891\u89e3\u7801\u5668\u793a\u4f8b\n\n\u7403\u5f62\u89c6\u9891\u5728\u5168\u666f\u89c6\u9891\u3001VR\u7b49\u9886\u57df\u6709\u5e94\u7528\uff0c\u539f\u7406\u662f\uff1a\u89e3\u7801\u89c6\u9891\u83b7\u53d6\u6bcf\u4e00\u5e27\u56fe\u50cf\uff0c\u5c06\u56fe\u50cf\u7528OpenGL\u6e32\u67d3\u6210\u7403\u5f62\u5c55\u793a\u51fa\u6765\u3002\u4e0b\u9762\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684Demo\uff0c\u5206\u4e3a\u4e09\u6b65\uff1a\u5c55\u793a\u7403\u4f53\u3001\u89e3\u7801\u89c6\u9891\u3001\u64ad\u653e\u7403\u5f62\u89c6\u9891\u3002\n\n![image.png](https://rome753.github.io/cdn/1896166-818b9e3babc8860a.png)\n![aqwai-db9oc.gif](https://rome753.github.io/cdn/1896166-91c70c87f26bdfe4.gif)\n\n# 1 \u7403\u4f53\u7ed8\u5236\n\u7403\u4f53\u7ed8\u5236\u6bd4\u5176\u4ed6\u5f62\u72b6\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9\u70b9\uff0c\u4f46\u662f\u539f\u7406\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f\u628a\u7403\u9762\u5206\u89e3\u6210\u5f88\u591a\u4e09\u89d2\u5f62\u3002\u4e3a\u4e86\u4fbf\u4e8e\u8ba1\u7b97\uff0c\u5c06\u7403\u4f53\u770b\u4f5c\u5730\u7403\uff0c\u81ea\u8f6c\u8f74\u4e0e\u5c4f\u5e55y\u8f74\u91cd\u5408\u3002\u5148\u5c06\u7403\u4f53\u6309\u7ecf\u7ebf\u5207\u6210\u5f88\u591a\u5c42layers\uff0c\u6bcf\u4e00\u5c42\u7684y\u5750\u6807\u6839\u636e\u7ecf\u7ebf\u4e0e\u7403\u5fc3\u7684\u5939\u89d2\u8ba1\u7b97\uff1b\u7136\u540e\u5c06\u6bcf\u4e00\u5c42\u6309\u7eac\u7ebf\u5207\u6210\u5f88\u591a\u5757sections\uff0c\u6bcf\u4e00\u5757\u7684x\u548cz\u5750\u6807\u6839\u636e\u7eac\u7ebf\u4e0e\u81ea\u8f6c\u8f74\u7684\u5939\u89d2\u8ba1\u7b97\u3002\u8d34\u56fe\u7684s\u548ct\u5750\u6807\u63091\u7b49\u5206\u5373\u53ef\u3002\n\nSphere.kt\n```kotlin\n\n    var R = 0.5f\n    var layers = 100\n    var sectors = 360\n    var alpha = (Math.PI / layers).toFloat()\n    var beta = (Math.PI * 2 / sectors).toFloat()\n    var sUnit = 1f / sectors\n    var tUnit = 1f / layers\n\n        var vertices = FloatArray((layers + 1) * (sectors + 1) * COMPONENT_COUNT)\n        var index = -1\n        for (i in 0 until layers + 1) {\n            val r = (R * Math.sin((i * alpha).toDouble())).toFloat()\n            val y = (R * Math.cos((i * alpha).toDouble())).toFloat()\n            val t = i * tUnit\n            for (j in 0 until sectors + 1) {\n                val z = (r * Math.sin((j * beta).toDouble())).toFloat()\n                val x = (r * Math.cos((j * beta).toDouble())).toFloat()\n                val s = 1f - j * sUnit\n                vertices[++index] = x\n                vertices[++index] = y\n                vertices[++index] = z\n                vertices[++index] = s\n                vertices[++index] = t\n            }\n        }\n```\n\u5c06\u5e73\u9762\u70b9\u5e8f\u53f7\u6309\u4e09\u89d2\u5f62\u987a\u5e8f\u6392\u5217\uff0c\u7528ebo\u65b9\u5f0f\u7ed8\u5236\u3002\n\n```kotlin\n        // \u5e73\u9762\u8f6c\u5316\u6210GL_TRIANGLES\uff0c\u6bcf\u4e2a\u5c0f\u65b9\u683c\u4e24\u4e2a\u4e09\u89d2\u5f62\n        fun strip(w: Int, h: Int): IntArray {\n            val list: MutableList<Int> = ArrayList()\n            for (j in 0 until h - 1) {\n                for (i in 0 until w - 1) {\n                    val p = j * w + i\n                    list.add(p)\n                    list.add(p + 1)\n                    list.add(p + w)\n                    list.add(p + w)\n                    list.add(p + 1)\n                    list.add(p + w + 1)\n                }\n            }\n            val a = IntArray(list.size)\n            for (i in list.indices) {\n                a[i] = list[i]\n            }\n            return a\n        }\n\n    init {\n        //\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n        vertexBuffer = ByteBuffer.allocateDirect(vertices.size * 4)\n            .order(ByteOrder.nativeOrder())\n            .asFloatBuffer()\n        //\u4f20\u5165\u6307\u5b9a\u7684\u5750\u6807\u6570\u636e\n        vertexBuffer!!.put(vertices)\n        vertexBuffer!!.position(0)\n        vao = IntArray(1)\n        GLES30.glGenVertexArrays(1, vao, 0)\n        GLES30.glBindVertexArray(vao[0])\n        val vbo = IntArray(1)\n        GLES20.glGenBuffers(1, vbo, 0)\n        GLES20.glBindBuffer(GLES20.GL_ARRAY_BUFFER, vbo[0])\n        GLES20.glBufferData(\n            GLES20.GL_ARRAY_BUFFER,\n            vertices.size * 4,\n            vertexBuffer,\n            GLES20.GL_STATIC_DRAW\n        )\n        GLES20.glVertexAttribPointer(0, 3, GLES20.GL_FLOAT, false, 5 * 4, 0)\n        GLES20.glEnableVertexAttribArray(0)\n        GLES20.glVertexAttribPointer(1, 2, GLES20.GL_FLOAT, false, 5 * 4, 3 * 4)\n        GLES20.glEnableVertexAttribArray(1)\n\n        indices = strip(sectors + 1, layers + 1)\n        val intBuffer = IntBuffer.allocate(indices.size * 4)\n        intBuffer.put(indices)\n        intBuffer.position(0)\n\n        val ebo = IntArray(1)\n        GLES20.glGenBuffers(1, ebo, 0)\n        GLES20.glBindBuffer(GLES20.GL_ELEMENT_ARRAY_BUFFER, ebo[0])\n        GLES20.glBufferData(\n            GLES20.GL_ELEMENT_ARRAY_BUFFER,\n            indices.size * 4,\n            intBuffer,\n            GLES20.GL_STATIC_DRAW\n        )\n    }\n\n    fun draw() {\n        GLES30.glBindVertexArray(vao[0])\n        GLES20.glDrawElements(GLES20.GL_TRIANGLES, indices.size, GLES20.GL_UNSIGNED_INT, 0)\n    }\n\n```\n```glsl\n#version 300 es\nlayout (location = 0) in vec3 vPosition;\nlayout (location = 1) in vec2 vTexCoord;\nout vec2 aTexCoord;\n\nuniform mat4 transform;\n\nvoid main() {\n     gl_Position = vec4(vPosition, 1.0f);\n     aTexCoord = (transform * vec4(vTexCoord, 1.0f, 1.0f)).xy;\n}\n```\n# 2 \u89c6\u9891\u89e3\u7801\n\u89c6\u9891\u89e3\u7801\u5206\u4e3a\u786c\u89e3\u548c\u8f6f\u89e3\uff1a\u786c\u89e3\u662f\u7528\u673a\u5668\u4e0a\u7684\u4e13\u7528\u82af\u7247\u8fdb\u884c\u89e3\u7801\uff0c\u4e0d\u5360\u7528CPU\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u7f3a\u70b9\u662f\u652f\u6301\u683c\u5f0f\u6709\u9650\uff1b\u8f6f\u89e3\u662f\u7528\u8f6f\u4ef6\u7b97\u6cd5\u8fdb\u884c\u89e3\u7801\uff0c\u652f\u6301\u7684\u683c\u5f0f\u6bd4\u8f83\u591a\uff0c\u6709ffmpeg\u7b49\u5de5\u5177\uff0c\u7f3a\u70b9\u662fCPU\u5360\u7528\u8f83\u9ad8\u3002\n\n\u5b89\u5353\u5e73\u53f0\u7684\u89c6\u9891\u786c\u4ef6\u7f16\u89e3\u7801\u7528MediaCodec\uff0c\u5b89\u5353\u63d0\u4f9b\u4e86[\u5b98\u65b9Demo](https://github.com/android/media-samples)\uff0c\u8fd9\u4e2aDemo\u91cc\u7684[BasicMediaDecoder](https://github.com/android/media-samples/tree/main/BasicMediaDecoder \"BasicMediaDecoder\")\n\u5c31\u662f\u4e00\u4e2a\u786c\u89e3mp4\u89c6\u9891\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u7b80\u5355\u770b\u4e00\u4e0b\u4ee3\u7801\u3002\n\n\u89e3\u7801\u4e3b\u8981\u5728MediaCodecWrapper\u7c7b\u91cc\u9762\uff0c\u5b83\u521d\u59cb\u5316\u65f6\u4f20\u5165\u4e86\u4e00\u4e2aSurface\u7528\u6765\u521d\u59cb\u5316\u89e3\u7801\u5668MediaCodec\uff0c\u8fd9\u4e2aSurface\u5f88\u91cd\u8981\uff0c\u89e3\u7801\u540e\u7684\u89c6\u9891\u80fd\u591f\u76f4\u63a5\u5c55\u793a\u5230\u8fd9\u4e2aSurface\u4e0a\u3002\n```kotlin\n    public static MediaCodecWrapper fromVideoFormat(final MediaFormat trackFormat,\n            Surface surface) throws IOException {\n        MediaCodecWrapper result = null;\n        MediaCodec videoCodec = null;\n\n        // BEGIN_INCLUDE(create_codec)\n        final String mimeType = trackFormat.getString(MediaFormat.KEY_MIME);\n\n        // Check to see if this is actually a video mime type. If it is, then create\n        // a codec that can decode this mime type.\n        if (mimeType.contains(\"video/\")) {\n            videoCodec = MediaCodec.createDecoderByType(mimeType);\n            videoCodec.configure(trackFormat, surface, null,  0);\n\n        }\n\n        // If codec creation was successful, then create a wrapper object around the\n        // newly created codec.\n        if (videoCodec != null) {\n            result = new MediaCodecWrapper(videoCodec);\n        }\n        // END_INCLUDE(create_codec)\n\n        return result;\n    }\n\n```\n\n\u5728MainActivity\u4e2d\u7528\u4e00\u4e2aValueAnimator\u8fdb\u884c\u5faa\u73af\u89e3\u7801\uff0c\u5b9e\u9645\u4e0a\u8fd9\u6837\u4e0d\u662f\u5f88\u6d41\u7545\uff0c\u53ea\u662f\u4e3a\u4e86\u7b80\u5355\u8fd9\u4e48\u5199\u3002\n```kotlin\n            // By using a {@link TimeAnimator}, we can sync our media rendering commands with\n            // the system display frame rendering. The animator ticks as the {@link Choreographer}\n            // receives VSYNC events.\n            mTimeAnimator.setTimeListener(new TimeAnimator.TimeListener() {\n                @Override\n                public void onTimeUpdate(final TimeAnimator animation,\n                                         final long totalTime,\n                                         final long deltaTime) {\n\n                    boolean isEos = ((mExtractor.getSampleFlags() & MediaCodec\n                            .BUFFER_FLAG_END_OF_STREAM) == MediaCodec.BUFFER_FLAG_END_OF_STREAM);\n\n                    // BEGIN_INCLUDE(write_sample)\n                    if (!isEos) {\n                        // Try to submit the sample to the codec and if successful advance the\n                        // extractor to the next available sample to read.\n                        boolean result = mCodecWrapper.writeSample(mExtractor, false,\n                                mExtractor.getSampleTime(), mExtractor.getSampleFlags());\n\n                        if (result) {\n                            // Advancing the extractor is a blocking operation and it MUST be\n                            // executed outside the main thread in real applications.\n                            mExtractor.advance();\n                        }\n                    }\n                    // END_INCLUDE(write_sample)\n\n                    // Examine the sample at the head of the queue to see if its ready to be\n                    // rendered and is not zero sized End-of-Stream record.\n                    MediaCodec.BufferInfo out_bufferInfo = new MediaCodec.BufferInfo();\n                    mCodecWrapper.peekSample(out_bufferInfo);\n\n                    // BEGIN_INCLUDE(render_sample)\n                    if (out_bufferInfo.size <= 0 && isEos) {\n                        mTimeAnimator.end();\n                        mCodecWrapper.stopAndRelease();\n                        mExtractor.release();\n                    } else if (out_bufferInfo.presentationTimeUs / 1000 < totalTime) {\n                        // Pop the sample off the queue and send it to {@link Surface}\n                        mCodecWrapper.popSample(true);\n                    }\n                    // END_INCLUDE(render_sample)\n\n                }\n            });\n```\n\n# 3 \u64ad\u653e\u7403\u5f62\u89c6\u9891\n\u64ad\u653e\u89e3\u7801\u89c6\u9891\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u7b2c\u4e00\u79cd\u662f\u4ece\u89e3\u7801\u51fa\u6765\u7684Buffer\u91cc\u9762\u8bfb\u53d6Image\u56fe\u50cf\u5e27\u6570\u636e\uff0c\u4f20\u5165OpenGL\uff0c\u5c06YUV\u683c\u5f0f\u7684\u56fe\u50cf\u8f6c\u6362\u6210RGB\u5c55\u793a\uff1b\u7b2c\u4e8c\u79cd\u662f\u5229\u7528\u524d\u9762\u63d0\u5230\u7684MediaCodec\u7684Surface\uff0c\u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e2a2D\u7eb9\u7406Texture\uff0c\u7528\u5b83\u521b\u5efaSurfaceTexture\u548cSurface\uff0c\u5c06\u8fd9\u4e2aSurface\u4f20\u7ed9MediaCodec\u7528\u6765\u63a5\u6536\u89e3\u7801\u5668\u7684\u8f93\u51fa\uff0c\u518d\u5c06\u8fd9\u4e2aTexture\u7528OpenGL\u7ed8\u5236\u3002\uff08\u7531\u4e8e\u4f20\u5165OpenGL\u7684\u9876\u70b9\u914d\u7f6e\u6210\u7403\u5f62\u4e86\uff0c\u7ed8\u5236\u51fa\u6765\u7684\u5c31\u662f\u7403\u5f62\u89c6\u9891\u3002\uff09\n\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u8ddf\u4e4b\u524d[\u7528OpenGL\u9884\u89c8CameraX\u76f8\u673a\u753b\u9762](https://www.jianshu.com/p/bcabdb0fc65a)\u51e0\u4e4e\u662f\u4e00\u6837\u7684\uff08\u540c\u6837\u521b\u5efaOES\u7eb9\u7406\uff09\uff0c\u5728\u5b83\u7684\u57fa\u7840\u4e0a\u7a0d\u5fae\u6539\u6539\u3002\u7531\u4e8e\u7403\u4f53Sphere\u91cc\u9762\u5c01\u88c5\u4e86\u9876\u70b9\u548c\u7eb9\u7406\u5750\u6807\u6570\u636e\uff0c\u6240\u4ee5GLVideoRender\u91cc\u7684\u9876\u70b9\u548c\u7eb9\u7406\u7b49\u5b9e\u9645\u4e0a\u662f\u4e0d\u7528\u7684\uff0c\u521d\u59cb\u5316Sphere\uff0c\u7ed8\u5236\u65f6\u8c03\u7528Sphere\u7684draw()\u65b9\u6cd5\u5373\u53ef\u3002\n\n```kotlin\nclass GLVideoRender: GLSurfaceView.Renderer {\n\n    var surfaceTexture: SurfaceTexture? = null\n\n    private val executor = Executors.newSingleThreadExecutor()\n\n    var vertices = floatArrayOf( //     ---- \u4f4d\u7f6e ----       ---- \u989c\u8272 ----     - \u7eb9\u7406\u5750\u6807 -\n        -1f, -1f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f,  // \u5de6\u4e0b\n        1f, -1f, 0.0f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f,  // \u53f3\u4e0b\n        -1f, 1f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, 1.0f, // \u5de6\u4e0a\n        1f, 1f, 0.0f, 1.0f, 0.0f, 0.0f, 1.0f, 1.0f  // \u53f3\u4e0a\n    )\n\n    val indices = intArrayOf( // \u6ce8\u610f\u7d22\u5f15\u4ece0\u5f00\u59cb!\n        0, 1, 2,  // \u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\n        1, 2, 3 // \u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\n    )\n\n    var program = 0\n    var vertexBuffer: FloatBuffer? = null\n    var intBuffer: IntBuffer? = null\n    var vao: IntArray = IntArray(1)\n    var tex: IntArray = IntArray(1)\n\n    var sphere: Sphere? = null\n\n    var ourCamera: OurCamera = OurCamera(floatArrayOf(0.0f, 0.0f, 3.0f))\n\n    var rx = 0f\n    var ry = 0f\n\n    fun rotModel(dx: Float, dy: Float) {\n        rx += dx / 5f\n        rx %= 360f\n        ry += dy / 5f\n        ry %= 360f\n    }\n\n    var modelMat = FloatArray(16)\n    var viewMat = FloatArray(16)\n    var projectionMat = FloatArray(16)\n\n    override fun onSurfaceCreated(gl: GL10?, config: EGLConfig?) {\n\n        sphere = Sphere()\n\n        program = ShaderUtils.loadProgram()\n        //\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n        vertexBuffer = ByteBuffer.allocateDirect(vertices.size * 4)\n            .order(ByteOrder.nativeOrder())\n            .asFloatBuffer()\n        //\u4f20\u5165\u6307\u5b9a\u7684\u5750\u6807\u6570\u636e\n        vertexBuffer!!.put(vertices)\n        vertexBuffer!!.position(0)\n        vao = IntArray(1)\n        GLES30.glGenVertexArrays(1, vao, 0)\n        GLES30.glBindVertexArray(vao[0])\n        val vbo = IntArray(1)\n        glGenBuffers(1, vbo, 0)\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0])\n        glBufferData(GL_ARRAY_BUFFER, vertices.size * 4, vertexBuffer, GL_STATIC_DRAW)\n\n        intBuffer = IntBuffer.allocate(indices.size * 4)\n        intBuffer!!.put(indices)\n        intBuffer!!.position(0)\n        val ebo = IntArray(1)\n        glGenBuffers(1, ebo, 0)\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, ebo[0])\n        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size * 4, intBuffer, GL_STATIC_DRAW)\n\n        tex = createOESTexture()\n        surfaceTexture = SurfaceTexture(tex[0])\n        surfaceTexture?.setOnFrameAvailableListener {\n//            requestRender()\n        }\n\n        glUseProgram(program)\n        val loc0 = glGetUniformLocation(program, \"texture1\")\n        glUniform1i(loc0, 0)\n\n        // Load the vertex data\n        glVertexAttribPointer(0, 3, GL_FLOAT, false, 8 * 4, 0)\n        glEnableVertexAttribArray(0)\n        glVertexAttribPointer(1, 3, GL_FLOAT, false, 8 * 4, 3 * 4)\n        glEnableVertexAttribArray(1)\n        glVertexAttribPointer(2, 2, GL_FLOAT, false, 8 * 4, 6 * 4)\n        glEnableVertexAttribArray(2)\n        glBindBuffer(GL_ARRAY_BUFFER, 0)\n        GLES30.glBindVertexArray(0)\n        glClearColor(0.5f, 0.5f, 0.5f, 0.5f)\n        glEnable(GL_DEPTH_TEST)\n    }\n\n    override fun onSurfaceChanged(gl: GL10?, width: Int, height: Int) {\n        glViewport(0, 0, width, height)\n        this.width = width.toFloat()\n        this.height = height.toFloat()\n    }\n\n    var width: Float = 1f\n    var height: Float = 1f\n\n    var transform = FloatArray(16)\n\n    override fun onDrawFrame(gl: GL10?) {\n        // Clear the color buffer\n        glClear(GL_COLOR_BUFFER_BIT or GL_DEPTH_BUFFER_BIT);\n\n        surfaceTexture?.updateTexImage()\n        surfaceTexture?.getTransformMatrix(transform)\n\n        // Use the program object\n        glUseProgram(program)\n//        glBindTexture(GL_TEXTURE_2D, tex[0])\n        glBindTexture(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, tex[0])\n\n\n        //        Matrix.setIdentityM(modelMat, 0);\n\n//        Matrix.setIdentityM(modelMat, 0);\n        Matrix.setIdentityM(viewMat, 0)\n        Matrix.setIdentityM(projectionMat, 0)\n\n        Matrix.perspectiveM(\n            projectionMat,\n            0,\n            OurCamera.radians(ourCamera.Zoom),\n            width / height,\n            0.1f,\n            100.0f\n        )\n        ourCamera.GetViewMatrix(viewMat)\n\n        val loc1 = glGetUniformLocation(program, \"view\")\n        glUniformMatrix4fv(loc1, 1, false, viewMat, 0)\n        val loc2 = glGetUniformLocation(program, \"projection\")\n        glUniformMatrix4fv(loc2, 1, false, projectionMat, 0)\n        Matrix.setIdentityM(modelMat, 0)\n        Matrix.translateM(modelMat, 0, 0f, 0f, 0f)\n        Matrix.rotateM(modelMat, 0, rx, 0.0f, 1.0f, 0.0f)\n        Matrix.rotateM(modelMat, 0, ry, 1.0f, 0.0f, 0.0f)\n        val loc3 = glGetUniformLocation(program, \"model\")\n        glUniformMatrix4fv(loc3, 1, false, modelMat, 0)\n\n//        glDrawElements(GL_TRIANGLES, vertices.size, GL_UNSIGNED_INT, 0)\n        sphere?.draw()\n    }\n\n    fun createOESTexture(): IntArray {\n        val arr = IntArray(1)\n        glGenTextures(1, arr, 0)\n        glBindTexture(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, arr[0])\n        glTexParameterf(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_MIN_FILTER, GL_LINEAR.toFloat())\n        glTexParameterf(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_MAG_FILTER, GL_LINEAR.toFloat())\n        glTexParameterf(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE.toFloat())\n        glTexParameterf(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE.toFloat())\n        return arr\n    }\n\n}\n```\n\u9876\u70b9\u7740\u8272\u5668\n```glsl\n#version 300 es\nlayout (location = 0) in vec3 vPosition;\nlayout (location = 1) in vec2 vTexCoord;\nout vec2 aTexCoord;\n\nuniform mat4 model;\nuniform mat4 view;\nuniform mat4 projection;\n\nvoid main() {\n     gl_Position = projection * view * model * vec4(vPosition, 1.0f);\n     aTexCoord = vec4(vTexCoord, 1.0f, 1.0f).xy;\n}\n```\n\u7247\u6bb5\u7740\u8272\u5668\n```glsl\n#version 300 es\n#extension GL_OES_EGL_image_external : require\n#extension GL_OES_EGL_image_external_essl3 : require\n\nprecision mediump float;\nin vec2 aTexCoord;\nout vec4 fragColor;\n\nuniform samplerExternalOES texture1;\n\nvoid main() {\n     fragColor = texture(texture1, aTexCoord);\n}\n```\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---\u7403\u5f62\u89c6\u9891\u64ad\u653e\u5668", "dateCreated": "20220718T18:04:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491496.html", "permalink": "https://www.cnblogs.com/rome753/p/16491496.html", "postid": 16491496, "description": "\n\n![\u622a\u5c4f2022-04-01 \u4e0b\u53485.54.46.png](https://rome753.github.io/cdn/1896166-071194312dd2c6b3.png)\n\n\u5728B\u7ad9\u4e0a\u5076\u7136\u770b\u5230\u4e00\u4e2a\u8fd9\u6837\u7684[\u9c7c\u7fa4\u6a21\u62df\u7684\u89c6\u9891](https://www.bilibili.com/video/BV1tq4y1j7TW?spm_id_from=333.999.0.0)\uff0c\u5f88\u6709\u610f\u601d\u3002\u5927\u81ea\u7136\u5f88\u591a\u4e1c\u897f\u90fd\u662f\u7c7b\u4f3c\u5206\u5f62\u3001\u7fa4\u4f53\u6d8c\u73b0\u7684\u6a21\u5f0f\u3002\u6211\u4eec\u53ef\u4ee5\u7528OpenGL\u7b80\u5355\u5730\u6a21\u62df\u4e00\u4e0b\uff0c\u5148\u5b9e\u73b0\u4e00\u4e2a\u4e8c\u7ef4\u6a21\u578b\uff0c\u518d\u5c1d\u8bd5\u6269\u5c55\u5230\u4e09\u7ef4\u3002\n\n\u76f8\u5173\u8d44\u6599\uff1a\nhttps://blog.csdn.net/liweizhao/article/details/82106886\n\u4ecb\u7ecd\u4e86\u7b80\u5355\u7684\u96c6\u7fa4\u7b97\u6cd5\u539f\u7406\nhttps://www.jianshu.com/p/9881630fb542\n\u7528\u8ba1\u7b97\u7740\u8272\u5668\u5b9e\u73b0\u7684\u96c6\u7fa4\u7b97\u6cd5\uff0c\u975e\u5e38\u5f3a\u5927\n\n\u539f\u7406\u5206\u6790\uff1a\u6bcf\u6761\u9c7c\u53ef\u4ee5\u5148\u7528\u70b9\u4ee3\u66ff\uff0c\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u751f\u6210\u4e00\u4e9b\u968f\u673a\u70b9\uff0c\u5b83\u4eec\u6709\u5750\u6807\u548c\u901f\u5ea6\uff0c\u6bcf\u4e2a\u70b9\u4f1a\u5bfb\u627e\u5468\u56f4\u7684\u70b9\uff0c\u8ddf\u968f\u7fa4\u4f53\u79fb\u52a8\u3002\u5173\u952e\u5728\u4e8e\u5bfb\u627e\u5468\u56f4\u7684\u70b9\uff0c\u6bcf\u4e2a\u70b9\u4e0d\u80fd\u53bb\u904d\u5386\u6240\u6709\u70b9\u7684\u4f4d\u7f6e\uff0c\u90a3\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(N2)\u3002\u9700\u8981\u5bf9\u7a7a\u95f4\u8fdb\u884c\u5212\u5206\uff0c\u6709\u56db\u53c9\u6811\u3001\u5e0c\u5c14\u4f2f\u7279\u66f2\u7ebf\u7b49\u65b9\u6cd5\u3002\u611f\u89c9\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0a\u5c06\u7a7a\u95f4\u5747\u5300\u5212\u5206\u66f4\u597d\u641c\u7d22\u76f8\u90bb\u7684\u70b9\uff0c\u53ef\u4ee5\u5212\u5206\u62108x8\u621616x16\u7684\u77e9\u5f62\u5757\uff0c\u6bcf\u6b21\u641c\u7d223x3\u7684\u533a\u5757\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e0b\u964d\u5230\u4e86O(N)\u3002\u5f53\u7136\u6781\u7aef\u60c5\u51b5\u4e0b\u5982\u679c\u6240\u6709\u70b9\u90fd\u96c6\u4e2d\u5230\u4e863x3\u7684\u7a7a\u95f4\u91cc\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u56de\u5230O(N2)\uff0c\u8fd9\u662f\u9700\u8981\u4f18\u5316\u7684\u5730\u65b9\u3002\n\n# 1 \u6a21\u62df\u7b97\u6cd5\n\n## 1.1 \u521d\u59cb\u5316\u6240\u6709\u70b9\n\n\u7528\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u6240\u6709\u70b9\u7684\u4f4d\u7f6e\uff0c\u6570\u7ec4\u6309[x0,y0,x1,y1...]\u65b9\u5f0f\u4fdd\u5b58\uff1b\u53e6\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u6240\u6709\u70b9\u7684\u901f\u5ea6\uff0c\u6570\u7ec4\u6309[vx0,vy0,vx1,vy1...]\u65b9\u5f0f\u4fdd\u5b58\uff1b\u518d\u7528\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u6240\u6709\u70b9\u7684\u4e34\u65f6\u65b0\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u8981\u5148\u7528\u8001\u4f4d\u7f6e\u8ba1\u7b97\uff0c\u5168\u90e8\u8ba1\u7b97\u5b8c\u624d\u80fd\u5237\u65b0\u4f4d\u7f6e\uff0c\u4e0d\u80fd\u7528\u65b0\u8001\u4f4d\u7f6e\u5939\u6742\u8ba1\u7b97\u3002\u70b9\u7684\u901f\u5ea6\u63a7\u5236\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u3002\n\n```java\n    float[] pos = new float[MAX_COUNT * 2];\n    float[] vel = new float[MAX_COUNT * 2];\n\n    float[] tempPos = new float[pos.length];\n\n    void controlSpeed(int i) {\n        float vx = vel[i];\n        float vy = vel[i + 1];\n        float vv = (float) Math.sqrt(vx * vx + vy * vy);\n        float mul = 1f;\n        if (vv >= vmax) {\n            mul = vmax / vv;\n        } else if (vv < vmin) {\n            mul = vmin / vv;\n        }\n        vel[i] *= mul;\n        vel[i + 1] *= mul;\n    }\n```\n# 1.2 \u5212\u5206\u533a\u5757\n\u5212\u5206\u621016x16\u4e2a\u7a7a\u95f4\u533a\u5757\u3002\u7528Part\u8868\u793a\u533a\u5757\uff0c\u5b9e\u9645\u4e0a\u91cc\u9762\u662f\u4e00\u4e2aHashSet\uff0c\u4fdd\u5b58\u4e86\u533a\u5757\u91cc\u9762\u7684\u70b9\uff1b\u518d\u7528\u4e00\u4e2aHashMap\u4fdd\u5b58\u6240\u6709\u7684\u533a\u5757\uff0ckey\u662f\u533a\u5757\u7684\u7d22\u5f15\uff0c\u4e5f\u5c31\u662f\u4ece0~16x16-1\u987a\u5e8f\u6392\u5217\u3002\u6bcf\u4e2a\u533a\u5757\u7b2c\u4e00\u6b21\u7528\u5230\u65f6\u624d\u521b\u5efa\uff0c\u9632\u6b62\u521d\u59cb\u5316\u592a\u6162\u3002\n\n```java\n    // PART index -> Part\n\n    static int PARTS = 16; // 8 * 8\n    static int partW = BOUND / PARTS;\n    HashMap<Integer, Part> partMap = new HashMap<>();\n\n    static class Part {\n\n        public Part() {\n            set = new HashSet<>();\n        }\n\n        HashSet<Integer> set;\n\n    }\n```\n\u67e5\u627e\u4e00\u4e2a\u70b9\u6240\u5728\u533a\u5757\n```java\n\n    Part findPart(int posIndex) {\n        float x = pos[posIndex];\n        float y = pos[posIndex + 1];\n        int px = (int)x / partW;\n        int py = (int)y / partW;\n        int partIndex = px + py * PARTS;\n        Part p = partMap.get(partIndex);\n        if (p == null) {\n            p = new Part();\n            partMap.put(partIndex, p);\n            Log.d(\"chao\", \"create part \" + partIndex);\n        }\n        return p;\n    }\n\n```\n\u67e5\u627e3x3\u76f8\u90bb\u533a\u5757\n```java\n\n    int[] neighborsDir = {\n            -1, -1, 0, -1, 1, -1,\n            -1,  0, 0,  0, 1,  0,\n            -1,  1, 0,  1, 1,  1,\n    };\n    void findNeighborParts(int posIndex) {\n        float x = pos[posIndex];\n        float y = pos[posIndex + 1];\n        int px = (int)x / partW;\n        int py = (int)y / partW;\n        int iNeighbor = 0;\n        for (int i = 0; i < neighborsDir.length - 1; i+=2) {\n            int rx = px + neighborsDir[i];\n            int ry = py + neighborsDir[i + 1];\n            if (rx >= 0 && rx < PARTS && ry >= 0 && ry < PARTS) {\n                int partIndex = rx + ry * PARTS;\n                Part p = partMap.get(partIndex);\n                if (p != null) {\n                    for (Integer iPos: p.set) {\n                        neighbors[iNeighbor++] = iPos;\n                    }\n                }\n            }\n        }\n        neighbors[iNeighbor] = -1; // \u7ed3\u5c3e\u6807\u5fd7\n    }\n```\n## 1.3 \u6838\u5fc3\u7b97\u6cd5\uff1a\u66f4\u65b0\u4f4d\u7f6e\n\u904d\u5386\u4e00\u904d\u6240\u6709\u70b9\uff0c\u5bfb\u627e\u6bcf\u4e2a\u70b9\u5728\u76f8\u90bb\u533a\u5757\u5185\u7684\u76f8\u90bb\u70b9\uff0c\u4fdd\u5b58\u5230neighbors\u6570\u7ec4\u91cc\uff0c\u8ba1\u7b97\u51fa\u5b83\u4eec\u7684\u5e73\u5747\u901f\u5ea6\uff0c\u5e94\u7528\u5230\u5f53\u524d\u70b9\uff0c\u7528\u8be5\u901f\u5ea6\u8ba1\u7b97\u51fa\u65b0\u4f4d\u7f6e\uff0c\u4fdd\u5b58\u5230\u4e34\u65f6\u5217\u8868\u4e2d\u3002\n\u518d\u6b21\u904d\u5386\u6240\u6709\u70b9\uff0c\u5e94\u7528\u65b0\u4f4d\u7f6e\u3002\u5e76\u6bd4\u8f83\u65b0\u8001\u4f4d\u7f6e\uff0c\u5982\u679c\u65b0\u8001\u4f4d\u7f6e\u5728\u4e0d\u540c\u533a\u5757\u4e2d\uff0c\u90a3\u4e48\u66f4\u65b0\u8fd9\u4e24\u4e2a\u533a\u5757\u3002\n```java    void updateAll() {\n        long time = System.currentTimeMillis();\n\n        for (int i = 0; i < pos.length - 1; i+=2) {\n\n            findNeighborParts(i);\n\n            // \u8ba1\u7b97\u7fa4\u901f\u5ea6\uff1a\u53ef\u89c1\u7684\u522b\u7684\u70b9\u7684\u901f\u5ea6\u548c\n            float vxSum = 0;\n            float vySum = 0;\n            float count = 0;\n            for (Integer j : neighbors) {\n                if (j == -1) {\n                    break;\n                }\n                if (j == i) {\n                    continue;\n                }\n                float dx = pos[i] - pos[j];\n                float dy = pos[i + 1] - pos[j + 1];\n                float dis = dx * dx + dy * dy;\n                if (dis < visiDis) {\n                    vxSum += -dx;\n                    vySum += -dy;\n                    count++;\n                } else if (dis < closeDis) {\n                    vxSum -= dx;\n                    vySum -= dy;\n                    count++;\n                }\n            }\n\n            // \u6539\u53d8\u901f\u5ea6\n            if (count > 0) {\n                float vxAve = vxSum / count;\n                float vyAve = vySum / count;\n                vel[i] = vel[i] * 0.8f + vxAve * 0.2f;\n                vel[i + 1] = vel[i + 1] * 0.8f + vyAve * 0.2f;\n                controlSpeed(i);\n            }\n\n            // \u66f4\u65b0\u4f4d\u7f6e\uff0c\u4fdd\u5b58\u5230temp\u91cc\n            float x1 = pos[i] + dt * vel[i];\n            float y1 = pos[i + 1] + dt * vel[i + 1];\n            boolean out = false;\n            if (x1 < 0 || x1 >= BOUND) {\n                vel[i] = -vel[i];\n                out = true;\n            }\n            if (y1 < 0 || y1 >= BOUND) {\n                vel[i + 1] = -vel[i + 1];\n                out = true;\n            }\n            if (out) {\n                tempPos[i] = pos[i];\n                tempPos[i + 1] = pos[i + 1];\n            } else {\n                tempPos[i] = x1;\n                tempPos[i + 1] = y1;\n            }\n        }\n\n        // \u66f4\u65b0Part\uff0c\u5199\u5165\u65b0\u901f\u5ea6\n        for (int i = 0; i < pos.length - 1; i+=2) {\n            Part p0 = findPart(i);\n            pos[i] = tempPos[i];\n            pos[i + 1] = tempPos[i + 1];\n            Part p1 = findPart(i);\n            if (p0 == p1) {\n                continue;\n            }\n            p0.set.remove(i);\n            p1.set.add(i);\n        }\n\n        posBuffer.position(0);\n        posBuffer.asFloatBuffer().put(pos);\n\n        time = System.currentTimeMillis() - time;\n        Log.d(\"chao\", \"updae time \" + time);\n    }\n\n```\n\n# 2 OpenGL\u7ed8\u5236\n\n## 2.1 \u521b\u5efa\u9876\u70b9\u6570\u7ec4\n\u9876\u70b9\u6570\u7ec4ByteBuffer posBuffer\u5927\u5c0f\u8ddf\u4f4d\u7f6e\u6570\u7ec4\u76f8\u540c\uff0c\n```java\n    int[] vao;\n    int[] vbo;\n\n    ByteBuffer posBuffer;\n\n    @Override\n    public void onSurfaceCreated(GL10 gl, EGLConfig config) {\n\n//        initPos();\n        initAll();\n\n        program = ShaderUtils.loadProgramGroup();\n\n//        //\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n        posBuffer = ByteBuffer\n                .allocateDirect(2 * 4 * MAX_COUNT)\n                .order(ByteOrder.nativeOrder());\n\n        vao = new int[1];\n        glGenVertexArrays(1, vao, 0);\n        glBindVertexArray(vao[0]);\n\n        vbo = new int[1];\n        glGenBuffers(1, vbo, 0);\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n//        glBufferData(GL_ARRAY_BUFFER, vertices.length * 4, vertexBuffer, GL_STATIC_DRAW);\n        glBufferData(GL_ARRAY_BUFFER, MAX_COUNT * 4 * 2, posBuffer, GL_STREAM_DRAW);\n\n        // Load the vertex data\n        glVertexAttribPointer(0, 2, GL_FLOAT, false, 2 * 4, 0);\n        glEnableVertexAttribArray(0);\n\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n        glBindVertexArray(0);\n\n        glClearColor(0.0f, 0.0f, 0.0f, 1.0f);\n\n//        glCullFace(GL_BACK);\n//        glEnable(GL_CULL_FACE);\n    }\n```\n# 2.2 \u5237\u65b0\u548c\u7ed8\u5236\n\u8ba1\u7b97\u5b8c\u4f4d\u7f6e\u540e\u5c06\u4f4d\u7f6e\u6570\u7ec4\u4f20\u7ed9posBuffer\uff0c\u518d\u5c06posBuffer\u4f20\u7ed9vbo\uff0c\u7528glDrawArrays(GL_POINTS, 0, MAX_COUNT)\u65b9\u5f0f\u7ed8\u5236\u70b9\u7cbe\u7075\u3002\n```java\n\n    void updateAll() {\n        ...\n        posBuffer.position(0);\n        posBuffer.asFloatBuffer().put(pos);\n    }\n\n    @Override\n    public void onDrawFrame(GL10 gl) {\n        super.onDrawFrame(gl);\n\n//        update();\n        updateAll();\n\n        // Clear the color buffer\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n\n        // \u5237\u65b0vbo\u6570\u636e\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n        glBufferSubData(GL_ARRAY_BUFFER, 0, MAX_COUNT * 4 * 2,  posBuffer);\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n\n\n        // Use the program object\n        glUseProgram(program);\n        glBindVertexArray(vao[0]);\n\n        glDrawArrays(GL_POINTS, 0, MAX_COUNT);\n    }\n```\n## 2.3 \u7740\u8272\u5668\n\u9876\u70b9\u7740\u8272\u5668\u5c06\u4f20\u5165\u7684\u4f4d\u7f6e\u8f6c\u6362\u4e00\u4e0b\uff0c\u8bbe\u7f6e\u70b9\u7684\u5927\u5c0f\nshader_group_v.glsl\n```glsl\n#version 300 es\nlayout (location = 0) in vec2 vPosition;\n\nout vec2 vPos;\n\nvoid main() {\n     vPos = (vPosition / 1024.0f - 0.5f) * 2.0f;\n     gl_PointSize = 10.0f;\n     gl_Position  = vec4(vPos, 0.0f, 1.0f);\n}\n```\n\u7247\u6bb5\u7740\u8272\u5668\u6839\u636e\u4f4d\u7f6e\u9009\u62e9\u4e0d\u540c\u989c\u8272\n```glsl\n#version 300 es\nprecision mediump float;\n\nin vec2 vPos;\n\nout vec4 fragColor;\n\nvoid main() {\n     fragColor = vec4((vPos + 1.0f) * 0.5f, 0.5f, 1.0f);\n}\n```\n\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\uff01\n\n# 3 \u6269\u5c55\u5230\u4e09\u7ef4\n\n\u5728\u4e8c\u7ef4\u7684\u57fa\u7840\u4e0a\u4fee\u6539\uff0c\u4e3b\u8981\u662f\u4f4d\u7f6e\u548c\u901f\u5ea6\u90fd\u589e\u52a0\u4e86z\u65b9\u5411\uff0c\u7a7a\u95f4\u5212\u5206\u7684\u533a\u5757\u6210\u4e8616x16x16\u4e2a\uff0c\u6bcf\u4e2a\u70b9\u9700\u8981\u5bfb\u627e\u5468\u56f43x3x3=27\u4e2a\u533a\u5757\u3002\u5176\u5b9e\u7b97\u6cd5\u7684\u4e3b\u8981\u65f6\u95f4\u548c\u7a7a\u95f4\u7684\u590d\u6742\u5ea6\u57fa\u672c\u4e0a\u662f\u7ebf\u6027\u589e\u957f\uff0c\u53d8\u6210\u539f\u6765\u76841.5\u500d\uff0c\u662f\u5b8c\u5168\u6ca1\u95ee\u9898\u7684\u3002\n\n```java\n\n    float[] pos = new float[MAX_COUNT * 3];\n    float[] vel = new float[MAX_COUNT * 3];\n\n    // \u7a7a\u95f4\u4e2d27\u4e2a\u65b9\u5757\u7684\u4e09\u7ef4\u5750\u6807\u504f\u79fb\n    int[] neighborsDir = {-1, -1, -1, -1, -1, 0, -1, -1, 1, -1, 0, -1, -1, 0, 0, -1, 0, 1, -1, 1, -1, -1, 1, 0, -1, 1, 1, 0, -1, -1, 0, -1, 0, 0, -1, 1, 0, 0, -1, 0, 0, 0, 0, 0, 1, 0, 1, -1, 0, 1, 0, 0, 1, 1, 1, -1, -1, 1, -1, 0, 1, -1, 1, 1, 0, -1, 1, 0, 0, 1, 0, 1, 1, 1, -1, 1, 1, 0, 1, 1, 1};\n    int[] neighbors = new int[pos.length / 3 + 1];\n\n    Part findPart(int posIndex) {\n        float x = pos[posIndex];\n        float y = pos[posIndex + 1];\n        float z = pos[posIndex + 2];\n        int px = (int)x / partW;\n        int py = (int)y / partW;\n        int pz = (int)z / partW;\n        int partIndex = px + py * PARTS + pz * PARTS * PARTS;\n        Part p = partMap.get(partIndex);\n        if (p == null) {\n            p = new Part();\n            partMap.put(partIndex, p);\n            Log.d(\"chao\", \"create part \" + partIndex);\n        }\n        return p;\n    }\n\n    void findNeighborParts(int posIndex) {\n        float x = pos[posIndex];\n        float y = pos[posIndex + 1];\n        float z = pos[posIndex + 2];\n        int px = (int)x / partW;\n        int py = (int)y / partW;\n        int pz = (int)z / partW;\n        int iNeighbor = 0;\n        for (int i = 0; i < neighborsDir.length - 2; i+=3) {\n            int rx = px + neighborsDir[i];\n            int ry = py + neighborsDir[i + 1];\n            int rz = pz + neighborsDir[i + 2];\n            if (rx >= 0 && rx < PARTS && ry >= 0 && ry < PARTS && rz >= 0 && rz < PARTS) {\n                int partIndex = rx + ry * PARTS + rz * PARTS * PARTS;\n                Part p = partMap.get(partIndex);\n                if (p != null) {\n                    for (Integer iPos: p.set) {\n                        neighbors[iNeighbor++] = iPos;\n                    }\n                }\n            }\n        }\n        neighbors[iNeighbor] = -1; // \u7ed3\u5c3e\u6807\u5fd7\n    }\n```\nOpenGL\u7ed8\u5236\u4e0a\u6709\u4e00\u4e9b\u589e\u52a0\uff0c\u53d8\u6210\u4e09\u7ef4\u540e\u9700\u8981\u4e00\u4e9b\u7a7a\u95f4\u77e9\u9635\u53d8\u6362\n```java\n\n    float[] modelMat = new float[16];\n    float[] viewMat = new float[16];\n    float[] projectionMat = new float[16];\n\n    @Override\n    public void onDrawFrame(GL10 gl) {\n        super.onDrawFrame(gl);\n//        update();\n        updateAll();\n\n        // Clear the color buffer\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n\n        // \u5237\u65b0vbo\u6570\u636e\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n        glBufferSubData(GL_ARRAY_BUFFER, 0, MAX_COUNT * 4 * 3,  posBuffer);\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n\n\n        // Use the program object\n        glUseProgram(program);\n\n//        Matrix.setIdentityM(modelMat, 0);\n        Matrix.setIdentityM(viewMat, 0);\n        Matrix.setIdentityM(projectionMat, 0);\n\n        Matrix.perspectiveM(projectionMat, 0, OurCamera.radians(ourCamera.Zoom), width / height, 0.1f, 100.0f);\n        ourCamera.GetViewMatrix(viewMat);\n\n        int loc1 = glGetUniformLocation(program, \"view\");\n        glUniformMatrix4fv(loc1, 1, false, viewMat, 0);\n        int loc2 = glGetUniformLocation(program, \"projection\");\n        glUniformMatrix4fv(loc2, 1, false, projectionMat, 0);\n        Matrix.setIdentityM(modelMat, 0);\n        Matrix.translateM(modelMat, 0, 0, 0, 0);\n        Matrix.rotateM(modelMat, 0, rx, 0.0f, 1.0f, 0.0f);\n        Matrix.rotateM(modelMat, 0, ry, 1.0f, 0.0f, 0.0f);\n        int loc3 = glGetUniformLocation(program, \"model\");\n        glUniformMatrix4fv(loc3, 1, false, modelMat, 0);\n\n\n        glBindVertexArray(vao[0]);\n        glDrawArrays(GL_POINTS, 0, MAX_COUNT);\n\n        // \u5148\u753b\u4e0d\u900f\u660e\u7684\u7269\u4f53\n        // \u8bbe\u7f6e\u6807\u5fd7\u4f4d\n        glDepthMask(false);\n        // \u518d\u753b\u534a\u900f\u660e\u7269\u4f53\n        boxShader.draw(modelMat, viewMat, projectionMat);\n        // \u91cd\u7f6e\u6807\u5fd7\u4f4d\n        glDepthMask(true);\n    }\n\n```\n\u9876\u70b9\u7740\u8272\u5668\nshader_group3d_v.glsl\n```glsl\n#version 300 es\nlayout (location = 0) in vec3 vPosition;\n\nuniform mat4 model;\nuniform mat4 view;\nuniform mat4 projection;\n\nout vec3 vPos;\n\nvoid main() {\n     vPos = (vPosition / 1024.0f - 0.5f) * 2.0f;\n     gl_PointSize = 10.0f;\n     gl_Position  = projection * view * model * vec4(vPos, 1.0f);\n}\n```\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---\u9c7c\u7fa4\u6a21\u62df", "dateCreated": "20220718T18:03:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491499.html", "permalink": "https://www.cnblogs.com/rome753/p/16491499.html", "postid": 16491499, "description": "![\u53d8\u6362\u53cd\u9988](https://rome753.github.io/cdn/1896166-9093be225232b8d4.png)\n\n![image.png](https://rome753.github.io/cdn/1896166-d92202fe5364473a.png)\n\n![image.png](https://rome753.github.io/cdn/1896166-12753205c916a572.png)\n\nhttps://www.jianshu.com/p/0b66c00d7073\niOS \u8ba1\u7b97\u548c\u8bfb\u53d6\u7684\u4f8b\u5b50\nhttps://wiki.jikexueyuan.com/project/modern-opengl-tutorial/tutorial28.html\nPC\u4e0a\u89e3\u91ca\u6bd4\u8f83\u6e05\u6670\u7684\u7c92\u5b50\u7cfb\u7edf\nhttps://mathweb.ucsd.edu/~sbuss/MathCG2/OpenGLsoft/ParticlesTransformFeedback/PTFexplain.html\nPC\u4e0a\u6781\u7b80\u7684\u7c92\u5b50\u7cfb\u7edf\uff0c\u6709win\u53ef\u6267\u884c\u6587\u4ef6\nhttps://github.com/pwambach/webgl2-particles\nWebGL\u7684\u6781\u7b80\u7c92\u5b50\u7cfb\u7edf\uff0c\u5c55\u793a\u6548\u679c\u4e0d\u9519\uff0c\u9879\u76ee\u5b8c\u6574\n\nTransform Feedback\u53d8\u6362\u53cd\u9988\u662f\u5c06\u9876\u70b9\u7740\u8272\u5668\u7684\u8ba1\u7b97\u7ed3\u679c\u8f93\u51fa\u5230GPU\u7684\u7f13\u5b58\u4e2d\uff0c\u7136\u540e\u4e0b\u4e00\u6b21\u7ed8\u5236\u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u4e2a\u7f13\u5b58\u8f93\u5165\u5230\u9876\u70b9\u7740\u8272\u5668\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4f7f\u7528GPU\u5185\u5b58\uff0c\u4e0d\u9700\u8981CPU\u53bb\u590d\u5236\u6216\u8bfb\u53d6\u6570\u636e\u3002\n\n\u4e0b\u9762\u7528\u53d8\u6362\u53cd\u9988\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u7c92\u5b50\u7cfb\u7edf\u3002\n\n# 1 \u7c92\u5b50\u7cfb\u7edf\n\u5148\u5b9e\u73b0\u4e00\u4e2a\u7c92\u5b50\u7cfb\u7edf\uff0c\u4e0d\u7528\u53d8\u6362\u53cd\u9988\u3002\u521b\u5efa\u5f88\u591a\u70b9\uff0c\u8bbe\u7f6e\u968f\u673a\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\uff0c\u7528glDrawArrays(GL_POINTS, 0, MAX_COUNT)\u753b\u70b9\uff0c\u5728\u7740\u8272\u5668\u91cc\u6839\u636e\u4f20\u5165\u7684\u65f6\u95f4\u8ba1\u7b97\u70b9\u7684\u4f4d\u7f6e\u5e76\u66f4\u65b0\u3002\n\n```java\n\npublic class TransformFeedbackRenderer extends BaseRender {\n\n   int program;\n   int[] vao;\n   int[] vbo;\n\n   static int MAX_COUNT = 100000;\n   float[] pos = new float[MAX_COUNT * 4]; // x,y,vx,vy\n   Random r = new Random();\n\n   float[] time = {0f, 0f, 0f}; // time,centerX,centerY\n\n   @Override\n   public void onSurfaceCreated(GL10 gl, EGLConfig config) {\n\n      initAll();\n\n      program = ShaderUtils.loadProgramTransformFeedback();\n\n      // \u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n      ByteBuffer posBuffer = ByteBuffer\n              .allocateDirect(pos.length * 4)\n              .order(ByteOrder.nativeOrder());\n\n      posBuffer.position(0);\n      posBuffer.asFloatBuffer().put(pos);\n\n      vao = new int[1];\n      glGenVertexArrays(1, vao, 0);\n      glBindVertexArray(vao[0]);\n\n      vbo = new int[1];\n      glGenBuffers(1, vbo, 0);\n      glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n      glBufferData(GL_ARRAY_BUFFER, MAX_COUNT * 4 * 4, posBuffer, GL_STATIC_DRAW);\n\n      // Load the vertex data\n      glVertexAttribPointer(0, 2, GL_FLOAT, false, 2 * 4, 0);\n      glEnableVertexAttribArray(0);\n      glVertexAttribPointer(1, 2, GL_FLOAT, false, 2 * 4, 2 * 4);\n      glEnableVertexAttribArray(1);\n\n      glBindBuffer(GL_ARRAY_BUFFER, 0);\n      glBindVertexArray(0);\n\n      glClearColor(0.0f, 0.0f, 0.0f, 1.0f);\n\n   }\n\n   @Override\n   public void onSurfaceChanged(GL10 gl, int width, int height) {\n      glViewport(0, 0, width, height);\n//        glViewport(-(height - width) / 2, 0, height, height);\n      this.width = width;\n      this.height = height;\n   }\n\n   int width, height;\n\n   @Override\n   public void onDrawFrame(GL10 gl) {\n      super.onDrawFrame(gl);\n\n      // Clear the color buffer\n      glClear(GL_COLOR_BUFFER_BIT);\n\n      // Use the program object\n      glUseProgram(program);\n\n      time[0] += 0.01;\n\n      int loc = glGetUniformLocation(program, \"time\");\n      glUniform3fv(loc, 1, time, 0);\n\n      glBindVertexArray(vao[0]);\n\n      glDrawArrays(GL_POINTS, 0, MAX_COUNT);\n   }\n\n   void initAll() {\n      for (int i = 0; i < pos.length; i++) {\n         pos[i] = (float)r.nextInt(1000) / 1000;\n         if (i % 4 < 2) {\n             pos[i] = (pos[i] - 0.5f) * 2;\n         } else {\n             pos[i] = pos[i] - 0.5f;\n         }\n      }\n   }\n}\n```\ntransform_feedback_v.glsl\n```glsl\n#version 300 es\nlayout (location = 0) in vec2 vPosition;\nlayout (location = 1) in vec2 vVelocity;\n\nuniform vec3 time;\nuniform vec2 center;\n\nout vec2 vPos;\nout vec2 vVel;\n\nvoid main() {\n     vPos = vPosition;\n     vVel = vVelocity;\n     gl_PointSize = 5.0;\n\n     float cx = time.g;\n     float cy = time.b;\n     float dx = (cx - vPos.x) * time.r;\n     float dy = (cy - vPos.y) * time.r;\n\n     float x = vPos.x + vVel.x * time.r + dx;\n     float y = vPos.y + vVel.y * time.r + dy;\n\n     gl_Position  = vec4(x, y, 0.0, 1.0);\n}\n```\n![image.png](https://rome753.github.io/cdn/1896166-83469f21965a3b6b.png)\n\n\u6548\u679c\u5982\u56fe\uff0c\u8fd9\u4e2a\u6781\u7b80\u7684\u7c92\u5b50\u7cfb\u7edf\u6027\u80fd\u5f88\u4e0d\u9519\u3002\u4e00\u767e\u4e07\u4e2a\u7c92\u5b50\u5728\u6211\u7684\u9a81\u9f99865\u624b\u673a\u4e0a\u80fd\u591f\u6ee1\u5e27\u8fd0\u884c\u3002\n\n\u5982\u6b64\u6d41\u7545\u7684\u539f\u56e0\u662f\u6570\u636e\u662f\u4e00\u6b21\u6027\u53d1\u9001\u5230GPU\uff0c\u540e\u7eed\u7684\u8ba1\u7b97\u90fd\u5728GPU\u3002\u8fd9\u6837\u6709\u4e00\u4e2a\u7f3a\u70b9\uff0c\u5c31\u662f\u6bcf\u6b21\u8ba1\u7b97\u7528\u7684\u90fd\u662f\u9876\u70b9\u6570\u636e\u7684\u521d\u59cb\u503c\uff0c\u6ca1\u6cd5\u5728\u4e0a\u4e00\u6b21\u7684\u8ba1\u7b97\u7ed3\u679c\u7684\u57fa\u7840\u4e0a\u8ba1\u7b97\uff0c\u5c31\u4f1a\u6709\u5c40\u9650\uff0c\u4e0d\u80fd\u5b9e\u73b0\u590d\u6742\u7684\u8fc7\u7a0b\u3002\u5982\u679c\u60f3\u5229\u7528\u8ba1\u7b97\u7ed3\u679c\uff0c\u53ef\u4ee5\u7528\u5185\u5b58\u6620\u5c04\u628aGPU\u6570\u636e\u590d\u5236\u51fa\u6765\uff0c\u518d\u8f93\u5165\u7ed9vbo\u8fdb\u884c\u4e0b\u4e00\u6b21\u7ed8\u5236\uff0c\u8fd9\u6837\u6027\u80fd\u80af\u5b9a\u4f1a\u6709\u635f\u8017\u3002\u60f3\u8981\u65e0\u635f\u4f7f\u7528GPU\u6570\u636e\u7f13\u5b58\uff0c\u5c31\u5f97\u7528\u53d8\u6362\u53cd\u9988\u4e86\u3002\n\n# 2 \u6dfb\u52a0\u53d8\u6362\u53cd\u9988\n\u4e3a\u4e86\u6dfb\u52a0\u53d8\u6362\u53cd\u9988\uff0c\u8fd9\u51e0\u5929\u6211\u5728\u7f51\u4e0a\u641c\u7d22\u4e86\u5927\u91cf\u7684\u8d44\u6599\uff0c\u5305\u62ec\u5404\u79cd\u5404\u6837\u7684Demo\uff0c\u5b83\u4eec\u5b9e\u73b0\u7684\u65b9\u5f0f\u5343\u5947\u767e\u602a\uff1a\u6709C++\u7684\u3001WebGL\u7684\u3001iOS\u7684\u3001PC\u7684\u3001\u4e0d\u7528vao\u7684\u3001\u4e0d\u7528tfo\uff08\u53d8\u6362\u53cd\u9988\u5bf9\u8c61\uff09\u7684\u3001\u4e0d\u4ea4\u66ff\u53d8\u6362\u53ea\u6253\u5370\u6570\u636e\u7684\u3001\u7981\u6b62\u5149\u6805\u5316\u7684\u3001\u52a0fence\u540c\u6b65\u5c4f\u969c\u7684\u3002\n\n\u5728\u8fd9\u4e9b\u8d44\u6599\u57fa\u7840\u4e0a\u6211\u603b\u7ed3\u51fa\u4e86\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\n\n## 2.1 \u7f16\u8bd1Shader\n\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u52a0\u5165\u8f93\u51fa\u53d8\u91cf`vPos`\uff0c\u5728glLinkProgram\u4e4b\u524d\u7528glTransformFeedbackVaryings\u8bbe\u7f6e\u8fd9\u4e2a\u53d8\u91cf\u5b57\u7b26\u4e32\u3002\n\n```glsl\n#version 300 es\nlayout (location = 0) in vec2 vPosition;\nlayout (location = 1) in vec2 vVelocity;\n\nout vec2 vPos;\n...\n```\n```java\n    public static int loadProgramTransformFeedback() {\n        int vShader = ShaderUtils.loadShader(GL_VERTEX_SHADER, loadAssets(\"transform_feedback_v.glsl\"));\n        int fShader = ShaderUtils.loadShader(GL_FRAGMENT_SHADER, loadAssets(\"transform_feedback_f.glsl\"));\n//        return linkProgram(vShader, fShader, new String[]{\"vPos\", \"vVel\"});\n        return linkProgram(vShader, fShader, new String[]{\"vPos\"});\n    }\n\n    private static int linkProgram(int vShader, int fShader, String[] transformFeedbackVaryings) {\n        int program = glCreateProgram();\n        if (program == 0) {\n            Log.e(\"chao\", \"program == 0\");\n            return 0;\n        }\n\n        glAttachShader(program, vShader);\n        glAttachShader(program, fShader);\n\n        if (transformFeedbackVaryings != null) {\n            glTransformFeedbackVaryings(program, transformFeedbackVaryings, GL_INTERLEAVED_ATTRIBS);\n        }\n\n        glLinkProgram(program);\n        int[] linkStatus = new int[1];\n        glGetProgramiv(program, GL_LINK_STATUS, linkStatus, 0);\n        if (linkStatus[0] == 0) {\n            String log = glGetProgramInfoLog(program);\n            Log.e(\"chao\", \"linkProgram fail \" + log);\n            glDeleteProgram(program);\n            return 0;\n        }\n        return program;\n    }\n```\n\n## 2.1 \u6dfb\u52a0tfo\u53d8\u6362\u53cd\u9988\u5bf9\u8c61\n\u7528glGenTransformFeedbacks\u521b\u5efa\u4e24\u4e2atfo\uff0c\u7136\u540e\u7528glBindBufferBase\u65b9\u6cd5\u5206\u522b\u7ed1\u5b9a\u4e00\u4e2avbo\uff08\u539f\u6765\u7684vao\u3001vbo\u521d\u59cb\u5316\u90fd\u4e0d\u7528\u4fee\u6539\uff09\u3002\n\n> \u6ce8\u610f\uff1a\u53d8\u6362\u53cd\u9988\u5bf9\u8c61\u7684\u672c\u8d28\u662f\u7ed1\u5b9a\u4e00\u5757\u5185\u5b58\uff0c\u8ba9\u8ba1\u7b97\u7ed3\u679c\u8f93\u51fa\u5230\u8fd9\u5757\u5185\u5b58\u3002\u5b83\u53ef\u4ee5\u76f4\u63a5\u7ed1\u5b9avbo\u3002\u8fd9\u8ddfvbo\u539f\u6765\u7ed1\u5b9a\u7684vao\u5b8c\u5168\u4e0d\u51b2\u7a81\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2avbo\u53ef\u4ee5\u540c\u65f6\u8ddfvao\u548ctfo\u7ed1\u5b9a\u3002\u8fd9\u8ba9\u4e0b\u4e00\u6b65\u4ea4\u66ff\u5207\u6362\u5f88\u65b9\u4fbf\u3002\n\n```java\n      tfo = new int[2];\n      glGenTransformFeedbacks(2, tfo, 0);\n\n      for (int i = 0; i < 2; i++) {\n         glBindVertexArray(vao[i]);\n         glBindBuffer(GL_ARRAY_BUFFER, vbo[i]);\n         glBufferData(GL_ARRAY_BUFFER, MAX_COUNT * 4 * 2, buffer, GL_DYNAMIC_DRAW);\n\n         // Load the vertex data\n         glVertexAttribPointer(0, 2, GL_FLOAT, false, 2 * 4, 0);\n         glEnableVertexAttribArray(0);\n//         glVertexAttribPointer(1, 2, GL_FLOAT, false, 2 * 4, 2 * 4);\n//         glEnableVertexAttribArray(1);\n\n         glBindTransformFeedback(GL_TRANSFORM_FEEDBACK, tfo[i]);\n         glBindBufferBase(GL_TRANSFORM_FEEDBACK_BUFFER, 0, vbo[i]);\n      }\n```\n# 2.2 \u4ea4\u66ff\u5207\u6362tfo\n\u7528i0\u8868\u793a\u5f53\u524d\u5e8f\u53f7\uff0c\u5b83\u57280\u548c1\u4e4b\u95f4\u53d8\u6362\u3002\n\n**\u9996\u5148\u7ed1\u5b9atfo[0]\uff0c\u63a5\u6536\u8f93\u51fa\u7684\u9876\u70b9\u6570\u636e\uff0c\u56e0\u4e3atfo[0]\u7ed1\u5b9a\u4e86vbo[0]\uff0cvao[0]\u4e5f\u7ed1\u5b9a\u4e86vbo[0]\uff0c\u76f8\u5f53\u4e8e\u6570\u636e\u8f93\u51fa\u5230vao[0]\u4e86\u3002\u7528glBeginTransformFeedback\u5f00\u542f\u53d8\u6362\u53cd\u9988\uff0c\u7ed1\u5b9avao[1]\u753b\u70b9\uff0c\u7136\u540e\u7528glEndTransformFeedback\u7ed3\u675f\u53d8\u6362\u53cd\u9988\u3002\u4e3a\u4ec0\u4e48\u7ed1\u5b9avao[1]\u753b\u70b9\u5462\uff0c\u56e0\u4e3avao[1]\u7ed1\u5b9a\u4e86vbo[1]\uff0c\u5728\u5f00\u542f\u4e86\u53d8\u6362\u53cd\u9988\u4e0b\u753b\u70b9\u5c31\u76f8\u5f53\u4e8e\u628avbo[1]\u7684\u6570\u636e\u4f20\u7ed9\u4e86tfo[0]\uff0ctfo[0]\u7ecf\u8fc7\u8ba1\u7b97\uff0c\u628a\u6570\u636e\u8f93\u51fa\u5230vbo[0]\u3002\u6570\u636e\u6d41\u662f\u8fd9\u6837\u7684\uff1avbo[1] -> tfo[0] -> vbo[0]\u3002**\n\ni0\u53d8\u6362\u540e\uff0c\u628atfo\u548cvao\u5e8f\u53f7\u540c\u65f6\u6539\u53d8\u5373\u53ef\uff0c\u6570\u636e\u6d41\u662f\uff1avbo[0] -> tfo[1] -> vbo[1]\u3002\n\n\u8fd9\u6837\u6570\u636e\u5c31\u5728vbo[0]\u548cvbo[1]\u4e4b\u95f4\u4ea4\u66ff\u6d41\u52a8\uff0c\u4e0d\u9700\u8981\u7ecf\u8fc7CPU\uff0c\u76f8\u5f53\u4e8e\u5728GPU\u91cc\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u91cc\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e0a\u4e00\u6b65\u7684\u8ba1\u7b97\u7ed3\u679c\u4e86\u3002\n\n```java\n\n   int i0 = 0;\n\n   @Override\n   public void onDrawFrame(GL10 gl) {\n      super.onDrawFrame(gl);\n\n      // Clear the color buffer\n      glClear(GL_COLOR_BUFFER_BIT);\n\n      // Use the program object\n      glUseProgram(program);\n\n      time[0] += 0.01;\n\n      int loc = glGetUniformLocation(program, \"time\");\n      glUniform3fv(loc, 1, time, 0);\n\n\n      if (i0 == 0) {\n         // \u7ed1\u5b9atfo[0]\uff0c\u63a5\u6536\u8f93\u51fa\u7684\u9876\u70b9\u6570\u636e\uff0c\u6570\u636e\u76f8\u5f53\u4e8e\u8f93\u51fa\u5230vao[0]\u4e86\n         glBindTransformFeedback(GL_TRANSFORM_FEEDBACK, tfo[0]);\n         glBeginTransformFeedback(GL_POINTS);\n         // \u7ed1\u5b9avao[1]\uff0c\u8f93\u5165\u9876\u70b9\u6570\u636e\n         glBindVertexArray(vao[1]);\n         glDrawArrays(GL_POINTS, 0, MAX_COUNT);\n         glEndTransformFeedback();\n      } else {\n         // \u7ed1\u5b9atfo[1]\uff0c\u63a5\u6536\u8f93\u51fa\u7684\u9876\u70b9\u6570\u636e\uff0c\u6570\u636e\u76f8\u5f53\u4e8e\u8f93\u51fa\u5230vao[1]\u4e86\n         glBindTransformFeedback(GL_TRANSFORM_FEEDBACK, tfo[1]);\n         glBeginTransformFeedback(GL_POINTS);\n         // \u7ed1\u5b9avao[0]\uff0c\u8f93\u5165\u9876\u70b9\u6570\u636e\n         glBindVertexArray(vao[0]);\n         glDrawArrays(GL_POINTS, 0, MAX_COUNT);\n         glEndTransformFeedback();\n      }\n\n      // \u4ea4\u6362\n      i0 = 1 - i0;\n   }\n```\n\n## 2.3 \u8f93\u51fa\u591a\u53d8\u91cf\u95ee\u9898\n\u4e00\u5f00\u59cb\u6211\u51c6\u5907\u7528tfo\u8f93\u51favPos\u548cvVel\u4e24\u4e2avec2\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4f46\u662f\u8f93\u51fa\u7ed3\u679c\u4e00\u76f4\u9519\u4e71\uff0c \u627e\u4e86\u5f88\u591a\u5730\u65b9\u4e5f\u6ca1\u89e3\u51b3\u95ee\u9898\u3002\u4f46\u662f\u5f53\u6211\u628a\u8f93\u51fa\u53d8\u91cf\u6539\u6210\u53ea\u6709\u4e00\u4e2avPos\uff0c\u95ee\u9898\u5c31\u83ab\u540d\u5176\u5999\u5730\u89e3\u51b3\u4e86\uff0c\u53d8\u6362\u53cd\u9988\u80fd\u6b63\u5e38\u8fd0\u884c\u4e86\uff0c\u8fd9\u5c31\u8bf4\u660e\u4e3b\u8981\u6d41\u7a0b\u6ca1\u6709\u95ee\u9898\u3002\u53ea\u662f\u4f7f\u7528\u591a\u4e2a\u8f93\u51fa\u53d8\u91cf\u65f6\uff0c\u9876\u70b9\u6570\u636e\u5728\u67d0\u4e00\u6b65\u5199\u5165\u6216\u8bfb\u53d6\u65f6\u51fa\u4e86\u95ee\u9898\u3002\u8fd9\u4e2a\u95ee\u9898\u6211\u8fd8\u5728\u67e5\u627e\uff0c\u5982\u679c\u6709\u5927\u4f6c\u77e5\u9053\u539f\u56e0\uff0c\u8bf7\u8d50\u6559\u4e00\u4e0b\u3002\n\n# 3 \u53d8\u6362\u53cd\u9988\u7c92\u5b50\u7cfb\u7edf\n\u5728Github\u4e0a\u770b\u5230\u8fd9\u4e2a[WebGL\u5b9e\u73b0\u7684\u7c92\u5b50\u7cfb\u7edf](https://github.com/pwambach/webgl2-particles)\uff0c\u5b83\u8fd8\u6709\u6f14\u793a\u7684\u7f51\u7ad9[Live Demo](https://pwambach.github.io/webgl2-particles)\uff0c\u6548\u679c\u4e0d\u9519\u3002\u540c\u4e8b\u8bf4\u6709\u70b9\u6c34\u58a8\u4e2d\u56fd\u98ce\u7684\u6837\u5b50\u3002\u90a3\u4e48\u6211\u628a\u5b83\u642c\u5230\u624b\u673a\u4e0a\u6765\u3002\n\n![image.png](https://rome753.github.io/cdn/1896166-d3ad7dba8d2968ae.png)\n\n\u8be5\u9879\u76ee\u7ed8\u5236\u7684\u6838\u5fc3\u4ee3\u7801\u5728calc_vertex.js\u6587\u4ef6\u91cc\uff0c\u7a0d\u5fae\u4fee\u6539\u5c31\u80fd\u4f7f\u7528\u4e86\u3002\u5b83\u7684\u903b\u8f91\u662f\uff1a\u53d6\u5c4f\u5e55\u4e0a\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u4e2d\u5fc3\uff0c\u6240\u6709\u7684\u70b9\u53d7\u5230\u8fd9\u4e2a\u4e2d\u5fc3\u7684\u5f15\u529b\uff0c\u5411\u5b83\u52a0\u901f\u79fb\u52a8\u3002\u5f15\u529b\u8f6c\u6362\u4e3a\u52a0\u901f\u5ea6\uff0c\u52a0\u901f\u5ea6\u8f6c\u6362\u4e3a\u901f\u5ea6\uff0c\u6839\u636e\u5f53\u524d\u70b9\u7684\u901f\u5ea6\u548c\u4f4d\u7f6e\u7b97\u51fa\u4e0b\u4e2a\u65f6\u95f4\u70b9\u7684\u901f\u5ea6\u548c\u4f4d\u7f6e\uff0c\u8f93\u51fa\u5230vec4 vPos\u91cc\u9762\uff08\u7531\u4e8e\u6211\u524d\u9762\u9047\u5230\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2avec4\u6253\u5305\u4f4d\u7f6e\u548c\u901f\u5ea6\uff09\u3002\n\n\u53d8\u6362\u53cd\u9988\u7684\u90e8\u5206\u5728\u524d\u9762\u57fa\u7840\u4e0a\u4e0d\u7528\u4fee\u6539\u3002\n\n```glsl\n#version 300 es\nlayout (location = 0) in vec4 aPos;\n//layout (location = 1) in vec2 vVelocity;\n\nout vec4 vPos;\n//out vec2 vVel;\n\nuniform vec3 time;\n\nfloat PARTICLE_MASS = 1.0;\nfloat GRAVITY_CENTER_MASS = 100.0;\nfloat DAMPING = 2e-6;\nvoid main() {\n     vec2 gravityCenter = time.gb;\n\n     float r = distance(aPos.xy, gravityCenter);\n     vec2 direction = gravityCenter - aPos.xy;\n     float force = PARTICLE_MASS * GRAVITY_CENTER_MASS / (r * r) * DAMPING;\n     float maxForce = min(force, DAMPING * 10.0);\n\n     vec2 acceleration = force / PARTICLE_MASS * direction;\n     vec2 newVelocity = aPos.zw + acceleration;\n     vec2 newPosition = aPos.xy + newVelocity;\n     vec2 v_velocity = newVelocity * 0.99;\n     vec2 v_position = newPosition;\n     // bounce at borders\n     if (v_position.x > 1.0 || v_position.x < -1.0) {\n          v_velocity.x *= -0.5;\n     }\n     if (v_position.y > 1.0 || v_position.y < -1.0) {\n          v_velocity.y *= -0.5;\n     }\n     vPos = vec4(v_position, v_velocity * 0.99);\n     gl_Position  = vec4(v_position, 0.0, 1.0);\n     gl_PointSize = 2.0;\n}\n```\n\u4e2d\u5fc3\u70b9\u53ef\u4ee5\u6839\u636e\u5c4f\u5e55\u89e6\u6478\u4f4d\u7f6e\u66f4\u65b0\u3002\n\n```java\n    glSurfaceView.setOnTouchListener(new View.OnTouchListener() {\n        @Override\n        public boolean onTouch(View v, MotionEvent event) {\n            if (render instanceof TransformFeedbackRenderer) {\n                ((TransformFeedbackRenderer) render).updateCenter(event.getX(), event.getY());\n            }\n            return true;\n        }\n    });\n\n   float[] time = {0f, 0f, 0f}; // time,centerX,centerY\n\n   public void updateCenter(float x, float y) {\n      time[1] = (x / width - 0.5f) * 2;\n      time[2] = -(y / height - 0.5f) * 2;\n   }\n\n      int loc = glGetUniformLocation(program, \"time\");\n      glUniform3fv(loc, 1, time, 0);\n```\n\n# 4 \u4e00\u4e9b\u6ce8\u610f\u70b9\n\n**\u7981\u7528\u5149\u6805\u5316\u548c\u8ba1\u7b97\u7ed8\u5236\u5206\u79bb**\n\n\u6709\u7684Demo\u63d0\u5230\u505a\u53d8\u6362\u53cd\u9988\u65f6\u7528`glEnable(GL_RASTERIZER_DISCARD)`\u6765\u7981\u7528\u5149\u6805\u5316\u3002\u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a\u5fc5\u987b\u8fd9\u6837\uff0c\u5176\u5b9e\u8fd9\u5e76\u4e0d\u662f\u5fc5\u8981\u7684\u8fc7\u7a0b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c**\u53d8\u6362\u53cd\u9988\u4e0d\u5f71\u54cd\u6b63\u5e38\u7ed8\u5236\uff0c\u53d8\u6362\u53cd\u9988\u7684\u8ba1\u7b97\u7ed3\u679c\u53ef\u4ee5\u540c\u65f6\u8f93\u51fa\u5230\u7f13\u5b58\u548c\u7ed8\u5236\u5230\u5c4f\u5e55\uff1b\u9876\u70b9\u7740\u8272\u5668\u53ef\u4ee5\u540c\u65f6\u8f93\u51fa\u7ed3\u679c\u5230\u53d8\u6362\u53cd\u9988\u7684\u7f13\u5b58\u548c\u7247\u6bb5\u7740\u8272\u5668**\u3002\u5982\u679c\u505a\u7b80\u5355\u7684Demo\uff0c\u6ca1\u6709\u5fc5\u8981\u7981\u6b62\u5149\u6805\u5316\uff0c\u4e5f\u6ca1\u6709\u5fc5\u8981\u4e3a\u53d8\u6362\u53cd\u9988\u4f7f\u7528\u4e00\u5957\u5355\u72ec\u7684\u7740\u8272\u5668\u548cprogram\u3002\n\n\u7981\u7528\u5149\u6805\u5316\u7684\u4f7f\u7528\u573a\u666f\u662f\u5c06\u53d8\u6362\u53cd\u9988\u9876\u70b9\u8ba1\u7b97\u4e0e\u6700\u7ec8\u7ed8\u5236\u5206\u79bb\uff0c\u9700\u8981\u4f7f\u7528\u4e24\u5957\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u4e00\u5957\u7528\u6765\u505a\u53d8\u6362\u53cd\u9988\u8ba1\u7b97\u9876\u70b9\u6570\u636e\uff0c\u4e00\u5957\u7528\u6765\u771f\u6b63\u7ed8\u5236\u3002\n\n\u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b\uff0c\u6211\u6ca1\u6709\u771f\u6b63\u5b9e\u73b0\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e0b\u3002\n```java\n\n      int program, tfProgram;\n      int vao,vbo,tfo;\n      int vao1,vbo1,tfo1;\n\n      // \u7981\u7528\u5149\u6805\u5316\uff0c\u4f7f\u7528\u53d8\u6362\u53cd\u9988\u7a0b\u5e8ftfProgram\uff0c\u7ed1\u5b9avao\u8f93\u5165\uff0c\u8f93\u51fa\u5230tfo1(\u7ed1\u5b9a\u4e86vao1)\n      glUseProgram(tfProgram);\n      glEnable(GL_RASTERIZER_DISCARD);\n      glBindTransformFeedback(GL_TRANSFORM_FEEDBACK, tfo1);\n      glBeginTransformFeedback(GL_POINTS);\n      glBindVertexArray(vao);\n      glDrawArrays(GL_POINTS, 0, particles);\n      glEndTransformFeedback();\n\n      // \u5f00\u542f\u5149\u6805\u5316\uff0c\u4f7f\u7528\u7ed8\u56fe\u7a0b\u5e8fprogram\uff0c\u7ed1\u5b9avao1\u8f93\u5165\uff08tfo1\u7684\u8ba1\u7b97\u7ed3\u679c\uff09\uff0c\u7ed8\u5236\u5230\u5c4f\u5e55\n      glDisable(GL_RASTERIZER_DISCARD);\n      glUseProgram(program);\n      glBindVertexArray(vao1);\n      glDrawArrays(GL_POINTS, 0, particles);\n```\n\n**fence\u540c\u6b65**\n\u6709\u7684Demo\u63d0\u5230\u7528fence\u540c\u6b65\u6765\u9632\u6b62\u7ed8\u5236\u4e0d\u5b8c\u6574\uff0c\u8fd9\u4e2a\u5e94\u8be5\u662f\u5728\u591a\u7ebf\u7a0b\u6216\u66f4\u590d\u6742\u7684\u573a\u666f\u4e2d\u4f7f\u7528\uff0c\u5148\u63d2\u5165\u4e00\u4e2afence\uff0c\u5728\u5176\u4ed6\u7ebf\u7a0b\u7b49\u5f85\uff0c\u5b8c\u6210\u540e\u5220\u9664\u5b83\uff1a\n```java\nfenceSyncObject\u00a0=\u00a0GLES30.glFenceSync(GLES30.GL_SYNC_GPU_COMMANDS_COMPLETE,\u00a00)\nGLES30.glWaitSync(fenceSyncObject,\u00a00,\u00a0GLES30.GL_TIMEOUT_IGNORED)\u00a0\nGLES30.glDeleteSync(fenceSyncObject)\n```\n\n**glDrawTransformFeedback**\n\u6709\u7684Demo\u5728\u53d8\u6362\u53cd\u9988\u65f6\u7528glDrawTransformFeedback\u65b9\u6cd5\u7ed8\u5236\uff0cOpenGL ES3\u5e94\u8be5\u6ca1\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u7528\u666e\u901a\u7684glDrawArrays\u65b9\u6cd5\u5373\u53ef\u3002\n\n**\u6211\u7684\u601d\u8003**\n\u53d8\u6362\u53cd\u9988\u7528\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e86GPU\u7f13\u5b58\uff0c\u76f8\u6bd4\u666e\u901a\u7684GPU\u7f13\u5b58\u6765\u8bf4\u5b83\u6ca1\u90a3\u4e48\u76f4\u89c2\u597d\u7406\u89e3\u3002\u5b83\u7684\u4f18\u70b9\u5728\u4e8e\u628a\u7f13\u5b58\u7528GPU\u5e76\u884c\u673a\u5236\u5206\u914d\u7ed9\u9876\u70b9\u7740\u8272\u5668\uff0c\u7701\u53bb\u4e86\u4ece\u6570\u7ec4\u91cc\u904d\u5386\u6216\u8005\u7528\u4e0b\u6807\u201c\u627e\u70b9\u201d\u7684\u8fc7\u7a0b\uff0c\u6709\u6bd4\u8f83\u597d\u7684\u6027\u80fd\u3002\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---Transform-Feedback\u53d8\u6362\u53cd\u9988\u7c92\u5b50\u7cfb\u7edf", "dateCreated": "20220718T18:03:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491487.html", "permalink": "https://www.cnblogs.com/rome753/p/16491487.html", "postid": 16491487, "description": "\u51e0\u5e74\u524d\u5199\u4e86\u4e00\u7bc7[Android SurfaceView \u591a\u7ebf\u7a0b\u7ed8\u56fe](https://www.jianshu.com/p/e81aacb365bc)\uff0c\u591a\u7ebf\u7a0b\u8ba1\u7b97\u5206\u5f62\u56fe\u6848\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\uff0c\u8fd9\u79cd\u5e76\u884c\u8fd0\u7b97\u66f4\u9002\u5408\u7528GPU\u5904\u7406\u3002\u76ee\u524d\u624b\u673aGPU\u6709\u51e0\u767e\u4e43\u81f3\u4e0a\u5343\u4e2aALU\u8fd0\u7b97\u5355\u5143\uff0c\u7b80\u5355\u5730\u8bf4\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u51e0\u767e\u6838\u7684\u5904\u7406\u5668\uff0c\u90a3\u4e48\u5904\u7406\u901f\u5ea6\u4e5f\u5c31\u6bd4CPU\u5f00\u542f\u591a\u7ebf\u7a0b\u5feb\u591a\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7528OpenGL\u6765\u5b9e\u73b0\u4e00\u4e0b\uff0c\u6548\u679c\u5982\u4e0b\uff1a\n![7mgto-qwaih.gif](https://rome753.github.io/cdn/1896166-8e3c68a5f0f26530.gif)\n\n\n\u7ed8\u5236\u7684\u8fd9\u4e2a\u5206\u5f62\u6709\u70b9\u50cf\u7164\u6c14\u7076 (-_ -)!\u3002\u4e0d\u8fc73D\u6548\u679c\u5f88\u660e\u663e\uff0c\u52a8\u753b\u4e5f\u975e\u5e38\u6d41\u7545\uff0c\u8fdc\u8fdc\u4e0d\u662fCPU\u8fd0\u7b97\u6240\u80fd\u6bd4\u7684\uff08\u6709\u70b9\u6a21\u7cca\u662f\u5f55\u5c4f\u8bbe\u7f6e\u7684\uff0c\u771f\u673a\u6548\u679c\u8fd8\u662f\u5f88\u6e05\u6670\u7684\uff09\u3002\u8fd9\u5df2\u7ecf\u4e0d\u662f\u201c\u9e1f\u67aa\u6362\u70ae\u201d\u4e86\uff0c\u7b80\u76f4\u5c31\u662f\u201c\u9e1f\u67aa\u6362\u706b\u7bad\u201d\uff01\n\n\u6765\u770b\u770b\u4ee3\u7801\u5b9e\u73b0\u3002\n\n## Activity\u76f8\u5173\n\u5728 GLActivity \u4e2d\u6dfb\u52a0 GLSurfaceView\uff0c\u8bbe\u7f6e Renderer \u3002\n```java\npublic class GLActivity extends AppCompatActivity {\n\n    GLSurfaceView glSurfaceView;\n    OurCamera ourCamera;\n    BaseRender render;\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        glSurfaceView = new GLSurfaceView(this);\n        setContentView(glSurfaceView);\n\n        glSurfaceView.setEGLContextClientVersion(3);\n\n        glSurfaceView.setRenderer(render = new FractorRender());\n    }\n```\n\n## Renderer \u5b9e\u73b0\n\n\u521b\u5efa\u4e00\u4e2a401*401\u7684\u9876\u70b9\u6570\u7ec4\uff0c\u5206\u914dNative\u5185\u5b58\uff0c\u7ed1\u5b9aVAO\u548cVBO\u3002\n\n```java\n    float vertices[] = new float[401 * 401 * 2];\n\n    int program;\n    FloatBuffer vertexBuffer;\n    int[] vao;\n\n    IntBuffer intBuffer;\n\n    @Override\n    public void onSurfaceCreated(GL10 gl, EGLConfig config) {\n\n        int p = 0;\n        for (int i = -200; i <= 200; i++) {\n            for (int j = -200; j <= 200; j++) {\n                vertices[p] = i;\n                vertices[p + 1] = j;\n                p += 2;\n            }\n        }\n\n        program = ShaderUtils.loadProgramFractor();\n        //\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n        vertexBuffer = ByteBuffer.allocateDirect(vertices.length * 4)\n                .order(ByteOrder.nativeOrder())\n                .asFloatBuffer();\n        //\u4f20\u5165\u6307\u5b9a\u7684\u5750\u6807\u6570\u636e\n        vertexBuffer.put(vertices);\n        vertexBuffer.position(0);\n\n        vao = new int[1];\n        glGenVertexArrays(1, vao, 0);\n        glBindVertexArray(vao[0]);\n\n        int[] vbo = new int[1];\n        glGenBuffers(1, vbo, 0);\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0]);\n        glBufferData(GL_ARRAY_BUFFER, vertices.length * 4, vertexBuffer, GL_STATIC_DRAW);\n    }\n\n```\n\n\u5c06\u9876\u70b9\u5750\u6807\u6309\u4e09\u89d2\u5f62\u6761\u5e26\u65b9\u5f0f\u6392\u5217\uff0c\u4f7f\u7528 GL_TRIANGLE_STRIP \u65b9\u5f0f\u7ed8\u5236\uff0c\u6548\u7387\u66f4\u9ad8\u3002(\u5982\u679c\u76f4\u63a5\u7528\u70b9\u65b9\u5f0f\u7ed8\u5236\uff0c\u70b9\u4e4b\u95f4\u7a7a\u9699\u592a\u5927\uff0c\u65e0\u6cd5\u5c55\u793a3D\u56fe\u5f62\u6548\u679c)\u3002\n\u603b\u5171\u6709400 * 400\u4e2a\u65b9\u683c\u5b50\uff0c\u6bcf\u4e2a\u65b9\u683c\u5b50\u7ed8\u5236\u4e24\u4e2a\u4e09\u89d2\u5f62\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e00\u5e27\u7ed8\u523632\u4e07\u4e2a\u4e09\u89d2\u5f62\u3002\n\n\n```java\n\n    // \u7528GL_TRIANGLE_STRIP\u65b9\u5f0f\u628a\u5e73\u9762\u4e0a\u6240\u6709\u70b9\u8f6c\u5316\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62\u6761\u5e26\n    public static int[] strip(int w, int h) {\n        List<Integer> list = new ArrayList<>();\n        int k = 0;\n        boolean reverse = false;\n        for (int j = 0; j < h - 1; j++) {\n            for (int i = 0; i < w; i++) {\n                if (reverse) {\n                    int p = j * w + w - 1 - i;\n                    if (i == 0) {\n                        list.add(p);\n                        list.add(p + w);\n                    }\n                    list.add(p + w);\n                    list.add(p);\n                    if (i == w - 1) {\n                        list.add(p);\n                        list.add(p + w);\n                    }\n                } else {\n                    int p = j * w + i;\n                    list.add(p);\n                    list.add(p + w);\n                }\n            }\n            reverse = !reverse;\n        }\n        int[] a = new int[list.size()];\n        for (int i = 0; i < list.size(); i++) {\n            a[i] = list.get(i);\n        }\n        return a;\n    }\n\n    glDrawElements(GL_TRIANGLE_STRIP, vertices.length, GL_UNSIGNED_INT, 0);\n```\n\n\u5206\u5f62\u8ba1\u7b97\u53c2\u6570 `float[] c`\u7ed8\u5236\u6bcf\u4e00\u5e27\u540e\u81ea\u52a8\u6539\u53d8\uff0c\u7528`glUniform2fv`\u65b9\u6cd5\u4f20\u7ed9Shader\uff0c\u5f62\u6210\u52a8\u753b\u6548\u679c\u3002\n```java\n    float[] c = {0.225f, 0.01f};\n\n    @Override\n    public void onDrawFrame(GL10 gl) {\n        // Clear the color buffer\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n\n        // Use the program object\n        glUseProgram(program);\n\n        c[0] += 0.0001f;\n//        c[1] += 0.00001f;\n        int loc = glGetUniformLocation(program, \"c\");\n        glUniform2fv(loc, 1, c, 0);\n    }\n\n```\n\n## Shader\u5b9e\u73b0\n\n\u9876\u70b9Shader\uff1ashader_fractor_v.glsl\n\n\u6839\u636e\u9876\u70b9\u4f4d\u7f6e\u548cRender\u4f20\u8fdb\u6765\u7684\u5206\u5f62\u53c2\u6570 `c` \u8ba1\u7b97\u5206\u5f62\u8fed\u4ee3\u6570 `k`\n\n```glsl\n\n    uniform vec2 c;\n\n    vec2 z = vPosition / 200.0;\n\n    int k = 0;\n    for (; k < 63; k++) {\n        if (z.x * z.x + z.y * z.y > 4.0) break;\n        z = mul(z,z) + c;\n    }\n```\n\n\u7f51\u4e0a\u627e\u4e00\u4e2a\u70ed\u5ea6\u6e10\u53d8\u8272\u6570\u7ec4`colors`\uff0c\u6839\u636e `k`\u5927\u5c0f\u9009\u62e9\u4e0d\u540c\u989c\u8272\uff0c\u5e76\u8f6c\u6362\u6210 `vec3` \u683c\u5f0f\n\n```java\n// \u70ed\u5ea6\u6e10\u53d8\u8272 64\nconst int[] colors = int[](-16777216,-16318464,-15859712,-15400960,-14876672,-14417920,-13959168,-13500416,-12976128,-12517376,-12058624,-11599872,-11075584,-10158080,-9240576,-8323072,-7405568,-6488064,-5570560,-4653056,-3735552,-2818048,-1900544,-983040,-65536,-61440,-57088,-52736,-48640,-44288,-39936,-35840,-31488,-27136,-23040,-18688,-14336,-13312,-12032,-11008,-9728,-8704,-7424,-6144,-5120,-3840,-2816,-1536,-256,-235,-214,-193,-171,-150,-129,-108,-86,-65,-44,-23,-1,-1,-1,-1);\nlayout (location = 0) in vec2 vPosition;\n\nout vec3 aColor;\n\nvec3 generateColor(int k) {\n    int c = colors[k];\n    int r = (c >> 16) & 0xff;\n    int g = (c >> 8) & 0xff;\n    int b = c & 0xff;\n    return vec3(float(r)/255.0f, float(g)/255.0f, float(b)/255.0f);\n}\n```\n\u7247\u6bb5\u7740\u8272\u5668\uff1ashader_fractor_f.glsl\n\u9876\u70b9\u7740\u8272\u5668\u5c06\u989c\u8272\u4f20\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u5c55\u793a\u5373\u53ef\n\n```glsl\n#version 300 es\nprecision mediump float;\nin vec3 aColor;\nout vec4 fragColor;\n\nvoid main() {\n     fragColor = vec4(aColor, 1.0);\n}\n```\n\n## Github\n\u5b8c\u6574\u4ee3\u7801\u5728[SurfacePaint\u9879\u76ee](https://github.com/rome753/SurfacePaint)\u7684opengles3\u6a21\u5757\u7684fractal\u4e2d\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---\u7ed8\u52363D\u5206\u5f62", "dateCreated": "20220718T18:02:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491493.html", "permalink": "https://www.cnblogs.com/rome753/p/16491493.html", "postid": 16491493, "description": "https://developer.arm.com/documentation/100587/0100/compute-shaders/compute-shaders-example\nARM\u5b98\u65b9\u6587\u6863\u91cc\u7684\u7b80\u5355\u8ba1\u7b97Demo\nhttps://blog.csdn.net/koibiki/article/details/80593229\n\u7528\u6765\u505a\u7b80\u5355\u7684\u8ba1\u7b97\nhttps://blog.csdn.net/qq_39561000/article/details/103112147\n\u7528\u6765\u505a\u7c92\u5b50\u7cfb\u7edf\nhttps://www.jianshu.com/p/9881630fb542\n\u7528\u6765\u505a\u96c6\u7fa4\u7b97\u6cd5\nhttps://zhuanlan.zhihu.com/p/68886986\n\u624b\u673a\u517c\u5bb9\u6027\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---\u8ba1\u7b97\u7740\u8272\u5668", "dateCreated": "20220718T18:02:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491477.html", "permalink": "https://www.cnblogs.com/rome753/p/16491477.html", "postid": 16491477, "description": "WebRTC\u5b89\u5353\u7aef\u6ca1\u6709\u5b98\u65b9\u6559\u7a0b\uff0c\u751a\u81f3\u8fdeAPI\u6587\u6863\u90fd\u6ca1\u6709\u3002\u8fd9\u662f\u4e00\u4ef6\u5947\u602a\u7684\u4e8b\uff0c\u6bd5\u7adfWebRTC\u662fGoogle\u5f00\u53d1\u7684\u3002\u76ee\u524d\u5b98\u65b9\u6587\u6863\u548cDemo\u90fd\u53ea\u6709web\u7aef\u7684\uff0c\u867d\u7136\u5199\u5f97\u7b80\u5355\u6613\u61c2\uff0c\u6574\u4f53\u7528\u6cd5\u4e5f\u548c\u5b89\u5353\u7aef\u76f8\u540c\uff0c\u4f46\u662f\u5177\u4f53\u7ec6\u8282\u8fd8\u662f\u6709\u5de8\u5927\u7684\u5dee\u5f02\u3002\n\n\u5f53\u7136\uff0c\u4ed4\u7ec6\u627eGoogle\u548cGithub\u4e0a\u8fd8\u662f\u80fd\u627e\u5230\u4e00\u4e9b\u4e0d\u9519\u7684\u6559\u7a0b\uff0c\u6211\u8fd9\u91cc\u5c06\u5b83\u4eec\u7ed3\u5408\u4e00\u4e0b\uff0c\u7ec4\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u5165\u95e8\u6559\u7a0b\uff0c\u5e76\u5e26\u6709\u53ef\u8fd0\u884cDemo.\n\n\u9996\u5148\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\nRTC(Real Time Communication): \u5b9e\u65f6\u901a\u4fe1\nWebRTC: \u57fa\u4e8eweb\u7684\u5b9e\u65f6\u901a\u4fe1\nSignaling: \u4fe1\u4ee4, \u4e00\u4e9b\u63cf\u8ff0\u5a92\u4f53\u6216\u7f51\u7edc\u7684\u5b57\u7b26\u4e32\nSDP(Session Description Protocol): \u4f1a\u8bdd\u63cf\u8ff0\u534f\u8bae, \u4e3b\u8981\u63cf\u8ff0\u5a92\u4f53\u4fe1\u606f\nICE(Interactive Connectivity Establishment): \u4ea4\u4e92\u5f0f\u8fde\u63a5\u5efa\u7acb\nSTUN(Session Traversal Utilities for NAT): NAT\u4f1a\u8bdd\u7a7f\u900f\u5de5\u5177\nTURN(Traversal Using Relays around NAT): \u4e2d\u7ee7\u7a7f\u900fNAT\n\n\u63a5\u4e0b\u6765\u662f\u4f7f\u7528\u65b9\u6cd5\n\n\u6dfb\u52a0WebRTC\u5e93\n---------------------\n\u5728module\u7684build.gradle\u4e2d\u6dfb\u52a0\u4f9d\u8d56\uff0c\u8fd9\u4e2a\u662f\u5b98\u65b9\u6253\u5305\u7684\u6700\u65b0\u7248\u672c\uff08201901\uff09\u3002\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5 [\u81ea\u5df1\u6784\u5efa](https://github.com/RestComm/restcomm-android-sdk/wiki/How-to-build-webrtc-library-for-Android-in-OSX-host).\n```java\ndependencies {\n    ...\n    implementation 'org.webrtc:google-webrtc:1.0.26131'\n}\n\n```\n\n\u6dfb\u52a0\u6743\u9650\n------------\n```java\n    <uses-permission android:name=\"android.permission.CAMERA\" />\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\n```\n> \u6ce8\u610fAndroid6.0\u4ee5\u4e0a\u9700\u8981\u5230\u8bbe\u7f6e\u91cc\u5f00\u542f\u76f8\u673a\u548c\u9ea6\u514b\u98ce\u6743\u9650\u3002\u56e0\u4e3a\u8ddf\u4e3b\u9898\u65e0\u5173, \u6240\u4ee5\u8fd9\u91cc\u6ca1\u52a0\u7533\u8bf7\u6743\u9650\u4ee3\u7801.\n\n\u6dfb\u52a0SurfaceViewRenderer\n-----------------------------------\n\u5b83\u662fSurfaceView\u7684\u5b50\u7c7b\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"cc.rome753.wat.MainActivity\">\n\n    <org.webrtc.SurfaceViewRenderer\n        android:id=\"@+id/localView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintLeft_toLeftOf=\"parent\"\n        app:layout_constraintRight_toRightOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n</android.support.constraint.ConstraintLayout>\n```\n\n\u4f7f\u7528\u76f8\u673a\n------------\n\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\n1. \u521b\u5efaPeerConnectionFactory\n2. \u521b\u5efa\u5e76\u542f\u52a8VideoCapturer\n3. \u7528PeerConnectionFactory\u521b\u5efaVideoSource\n4. \u7528PeerConnectionFactory\u548cVideoSource\u521b\u5efaVideoTrack\n5. \u521d\u59cb\u5316\u89c6\u9891\u63a7\u4ef6SurfaceViewRenderer\n6. \u5c06VideoTrack\u5c55\u793a\u5230SurfaceViewRenderer\u4e2d\n\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        // create PeerConnectionFactory\n        PeerConnectionFactory.InitializationOptions initializationOptions =\n                PeerConnectionFactory.InitializationOptions.builder(this).createInitializationOptions();\n        PeerConnectionFactory.initialize(initializationOptions);\n        PeerConnectionFactory peerConnectionFactory = PeerConnectionFactory.builder().createPeerConnectionFactory();\n\n        // create AudioSource\n        AudioSource audioSource = peerConnectionFactory.createAudioSource(new MediaConstraints());\n        AudioTrack audioTrack = peerConnectionFactory.createAudioTrack(\"101\", audioSource);\n\n        EglBase.Context eglBaseContext = EglBase.create().getEglBaseContext();\n\n        SurfaceTextureHelper surfaceTextureHelper = SurfaceTextureHelper.create(\"CaptureThread\", eglBaseContext);\n        // create VideoCapturer\n        VideoCapturer videoCapturer = createCameraCapturer();\n        VideoSource videoSource = peerConnectionFactory.createVideoSource(videoCapturer.isScreencast());\n        videoCapturer.initialize(surfaceTextureHelper, getApplicationContext(), videoSource.getCapturerObserver());\n        videoCapturer.startCapture(480, 640, 30);\n\n        SurfaceViewRenderer localView = findViewById(R.id.localView);\n        localView.setMirror(true);\n        localView.init(eglBaseContext, null);\n\n        // create VideoTrack\n        VideoTrack videoTrack = peerConnectionFactory.createVideoTrack(\"101\", videoSource);\n        // display in localView\n        videoTrack.addSink(localView);\n    }\n\n    private VideoCapturer createCameraCapturer() {\n        Camera1Enumerator enumerator = new Camera1Enumerator(false);\n        final String[] deviceNames = enumerator.getDeviceNames();\n\n        // First, try to find front facing camera\n        for (String deviceName : deviceNames) {\n            if (enumerator.isFrontFacing(deviceName)) {\n                VideoCapturer videoCapturer = enumerator.createCapturer(deviceName, null);\n\n                if (videoCapturer != null) {\n                    return videoCapturer;\n                }\n            }\n        }\n\n        // Front facing camera not found, try something else\n        for (String deviceName : deviceNames) {\n            if (!enumerator.isFrontFacing(deviceName)) {\n                VideoCapturer videoCapturer = enumerator.createCapturer(deviceName, null);\n\n                if (videoCapturer != null) {\n                    return videoCapturer;\n                }\n            }\n        }\n\n        return null;\n    }\n\n}\n```\n\n\u9644\u5f55\n------\nhttps://webrtc.org/start/\nhttps://codelabs.developers.google.com/codelabs/webrtc-web/#0\nhttps://developer.mozilla.org/en-US/docs/Web/API/MediaStream\nhttps://vivekc.xyz/getting-started-with-webrtc-for-android-daab1e268ff4\nhttps://www.html5rocks.com/en/tutorials/webrtc/basics/\n\n[\u672c\u9879\u76eeGitHub\u5730\u5740/step1camera](https://github.com/rome753/webrtc-android-tutorial)\n\n[\u4e0b\u4e00\u7bc7: Android WebRTC\u5b8c\u6574\u5165\u95e8\u6559\u7a0b02: \u672c\u5730\u56de\u73af](https://www.jianshu.com/p/2b9239eb793b)\n", "mt_excerpt": "", "title": "Android-WebRTC\u5b8c\u6574\u5165\u95e8\u6559\u7a0b01--\u4f7f\u7528\u76f8\u673a", "dateCreated": "20220718T18:01:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491485.html", "permalink": "https://www.cnblogs.com/rome753/p/16491485.html", "postid": 16491485, "description": "\u76f8\u673a\u5904\u7406\u662fOpenGL\u4e00\u4e2a\u91cd\u8981\u7684\u5e94\u7528\u573a\u666f\uff0c\u56e0\u4e3aOpenGL\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u5904\u7406\u56fe\u50cf\uff0c\u800c\u76f8\u673a\u6bcf\u79d2\u751f\u6210\u51e0\u5341\u5e27\u56fe\u50cf\uff0c\u7528GPU\u6765\u5904\u7406\u518d\u5408\u9002\u4e0d\u8fc7\u4e86\u3002\n\n\u81f3\u4e8eAndroid CameraX\u548cOpenGL\u7684\u7ed3\u5408\u4f7f\u7528\uff0c\u7f51\u4e0a\u6709\u4e0d\u5c11\u6559\u7a0b\u4e86\uff0c\u7136\u800c\u5b83\u4eec\u90fd\u6709\u4e00\u4e2a\u7279\u70b9\uff0c\u5c31\u662f\u7ed9\u4e24\u8005\u589e\u52a0\u4e86\u4e0d\u5fc5\u8981\u7684\u8026\u5408\u3002\u7531\u4e8e\u4e24\u8005\u672c\u8eab\u67b6\u6784\u90fd\u8bbe\u8ba1\u5f97\u975e\u5e38\u597d\uff0c\u5b9e\u9645\u4e0a\u5b83\u4eec\u53ea\u9700\u8981\u4e00\u70b9\u8026\u5408\uff1a\u5c31\u662fOpenGL\u7ed9Camera\u63d0\u4f9b\u4e00\u4e2aSurface\u3002\n\n\u5982\u679c\u5206\u522b\u5b9e\u73b0\u4e86CameraX\u548cOpenGL\u7684Texture\u7eb9\u7406\u56fe\u7247\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u6539\u52a8\u6781\u5c11\u7684\u4ee3\u7801\u5c31\u80fd\u628a\u4e24\u8005\u7ed3\u5408\u8d77\u6765\u3002\n\n![Screenshot_2022-03-13-23-42-22-725_com.example.opengles3camera.jpg](https://rome753.github.io/cdn/1896166-e10cbe01f15ed7b3.jpg)\n\n## 1 CameraX\u4f7f\u7528\n\u8be6\u89c1\u6559\u7a0bhttps://www.jianshu.com/p/f79855586ee2\n\u5728\u4e00\u4e2aMainActivity\u4e2d\u5c31\u80fd\u5199\u5b8c\u5168\u90e8\u4ee3\u7801\n```kotlin\n\ntypealias LumaListener = (luma: Double) -> Unit\n\nclass MainActivity : AppCompatActivity() {\n    private var imageCapture: ImageCapture? = null\n\n    private lateinit var outputDirectory: File\n    private lateinit var cameraExecutor: ExecutorService\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        if (allPermissionsGranted()) {\n            startCamera()\n        } else {\n            ActivityCompat.requestPermissions(this, REQUIRED_PERMISSIONS, REQUEST_CODE_PERMISSIONS)\n        }\n\n        camera_capture_button.setOnClickListener { takePhoto() }\n\n        outputDirectory = getOutputDirectory()\n\n        cameraExecutor = Executors.newSingleThreadExecutor()\n    }\n\n    private class LuminosityAnalyzer(private val listener : LumaListener) : ImageAnalysis.Analyzer {\n\n        private fun ByteBuffer.toByteArray() : ByteArray {\n            rewind()\n            val data = ByteArray(remaining())\n            get(data)\n            return data\n        }\n\n        override fun analyze(image: ImageProxy) {\n            val buffer = image.planes[0].buffer\n            val data = buffer.toByteArray()\n            val pixels = data.map { it.toInt() and 0xFF }\n            val luma = pixels.average()\n\n            listener(luma)\n\n            image.close()\n        }\n\n    }\n\n    private fun takePhoto() {\n        val imageCapture = imageCapture ?: return\n\n        val photoFile = File(\n                outputDirectory, SimpleDateFormat(FILENAME_FORMAT, Locale.US).format(System.currentTimeMillis()) + \".jpg\"\n        )\n\n        val outputOptions = ImageCapture.OutputFileOptions.Builder(photoFile).build()\n\n        imageCapture.takePicture(\n                outputOptions, ContextCompat.getMainExecutor(this), object : ImageCapture.OnImageSavedCallback {\n            override fun onImageSaved(outputFileResults: ImageCapture.OutputFileResults) {\n                val savedUri = Uri.fromFile(photoFile)\n                val msg = \"Photo captured: $savedUri\"\n                Toast.makeText(baseContext, msg, Toast.LENGTH_SHORT).show()\n                Log.d(\"chao\", msg)\n            }\n\n            override fun onError(exception: ImageCaptureException) {\n                exception.printStackTrace()\n            }\n        })\n    }\n\n    private fun startCamera() {\n        val cameraProviderFuture = ProcessCameraProvider.getInstance(this)\n\n        cameraProviderFuture.addListener(Runnable {\n            // 1. \u9009\u62e9\u6444\u50cf\u5934\uff0c\u76f8\u673a\u9884\u89c8\n            val cameraSelector = CameraSelector.DEFAULT_BACK_CAMERA\n            val cameraProvider: ProcessCameraProvider = cameraProviderFuture.get()\n\n            val preview = Preview.Builder()\n                .setTargetResolution(Size(480, 640))\n                .build().also {\n                it.setSurfaceProvider(viewFinder.createSurfaceProvider())\n            }\n\n            // 2. \u76f8\u673a\u62cd\u7167\n            imageCapture = ImageCapture.Builder().build()\n\n            // 3. \u6570\u636e\u5904\u7406\n            val imageAnalyzer = ImageAnalysis.Builder().build().also {\n                it.setAnalyzer(cameraExecutor, LuminosityAnalyzer {luma ->\n                    Log.d(\"chao\", \"Average luminosity: $luma\")\n                })\n            }\n\n            try {\n                cameraProvider.unbindAll()\n\n                cameraProvider.bindToLifecycle(this, cameraSelector, preview, imageCapture, imageAnalyzer)\n\n            } catch (e: Exception) {\n                e.printStackTrace()\n            }\n\n        }, ContextCompat.getMainExecutor(this))\n\n    }\n\n    private fun allPermissionsGranted() = REQUIRED_PERMISSIONS.all {\n        ContextCompat.checkSelfPermission(baseContext, it) == PackageManager.PERMISSION_GRANTED\n    }\n\n    private fun getOutputDirectory(): File {\n        val mediaDir = externalMediaDirs.firstOrNull()?.let {\n            File(it, resources.getString(R.string.app_name)).apply { mkdirs() }\n        }\n        return if (mediaDir != null && mediaDir.exists()) mediaDir else filesDir\n    }\n\n    override fun onDestroy() {\n        cameraExecutor.shutdown()\n        super.onDestroy()\n    }\n\n    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {\n        if (requestCode == REQUEST_CODE_PERMISSIONS) {\n            if (allPermissionsGranted()) {\n                startCamera()\n            } else {\n                Toast.makeText(this,\"Permissions not granted by the user.\",\n                        Toast.LENGTH_SHORT).show()\n                finish()\n            }\n        }\n    }\n\n    companion object {\n        private const val TAG = \"CameraXBasic\"\n        private const val FILENAME_FORMAT = \"yyyy-MM-dd-HH-mm-ss-SSS\"\n        private const val REQUEST_CODE_PERMISSIONS = 10\n        private val REQUIRED_PERMISSIONS = arrayOf(Manifest.permission.CAMERA)\n    }\n\n```\n\n## 2 OpenGL\u7ed8\u5236Texture\u56fe\u7247\n\n\u9876\u70b9\u6570\u636e\u91cc\u6dfb\u52a0\u5750\u6807\u3001\u989c\u8272\u548c\u7eb9\u7406\u5750\u6807\uff1b\n\u521b\u5efaVAO\u3001VBO\u548cEBO\uff1b\n\u521b\u5efaGL_TEXTURE_2D\u7eb9\u7406\uff0c\u7528glUniform1i\u4f20\u7ed9Shader\uff1b\n\u7ed8\u5236\u65f6\u7528glUniformMatrix4fv\u4f20\u5165\u53d8\u5316\u77e9\u9635\u7ed9Shader\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u53d8\u5316\uff0c\u6240\u4ee5\u6682\u65f6\u7528\u5355\u5143\u77e9\u9635\u3002\n\n```kotlin\npackage com.example.opengles3camera\n\nimport android.graphics.Bitmap\nimport android.graphics.SurfaceTexture\nimport android.opengl.*\nimport android.opengl.GLES20.*\nimport androidx.camera.core.Preview\nimport androidx.camera.core.SurfaceRequest\nimport java.nio.ByteBuffer\nimport java.nio.ByteOrder\nimport java.nio.FloatBuffer\nimport java.nio.IntBuffer\nimport javax.microedition.khronos.egl.EGLConfig\nimport javax.microedition.khronos.opengles.GL10\n\nclass CameraRender: GLSurfaceView.Renderer {\n\n    var vertices = floatArrayOf( //     ---- \u4f4d\u7f6e ----       ---- \u989c\u8272 ----     - \u7eb9\u7406\u5750\u6807 -\n        0.5f, 0.5f, 0.0f, 1.0f, 0.0f, 0.0f, 1.0f, 1.0f,  // \u53f3\u4e0a\n        0.5f, -0.5f, 0.0f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f,  // \u53f3\u4e0b\n        -0.5f, -0.5f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f,  // \u5de6\u4e0b\n        -0.5f, 0.5f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, 1.0f // \u5de6\u4e0a\n    )\n\n    val indices = intArrayOf( // \u6ce8\u610f\u7d22\u5f15\u4ece0\u5f00\u59cb!\n        0, 1, 3,  // \u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\n        1, 2, 3 // \u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\n    )\n\n    var program = 0\n    var vertexBuffer: FloatBuffer? = null\n    var intBuffer: IntBuffer? = null\n    var vao: IntArray = IntArray(1)\n    var tex: IntArray = IntArray(1)\n\n    override fun onSurfaceCreated(gl: GL10?, config: EGLConfig?) {\n        program = ShaderUtils.loadProgram()\n        //\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u6bcf\u4e2a\u6d6e\u70b9\u578b\u53604\u5b57\u8282\u7a7a\u95f4\n        vertexBuffer = ByteBuffer.allocateDirect(vertices.size * 4)\n            .order(ByteOrder.nativeOrder())\n            .asFloatBuffer()\n        //\u4f20\u5165\u6307\u5b9a\u7684\u5750\u6807\u6570\u636e\n        vertexBuffer!!.put(vertices)\n        vertexBuffer!!.position(0)\n        vao = IntArray(1)\n        GLES30.glGenVertexArrays(1, vao, 0)\n        GLES30.glBindVertexArray(vao[0])\n        val vbo = IntArray(1)\n        glGenBuffers(1, vbo, 0)\n        glBindBuffer(GL_ARRAY_BUFFER, vbo[0])\n        glBufferData(GL_ARRAY_BUFFER, vertices.size * 4, vertexBuffer, GL_STATIC_DRAW)\n\n        intBuffer = IntBuffer.allocate(indices.size * 4)\n        intBuffer!!.put(indices)\n        intBuffer!!.position(0)\n        val ebo = IntArray(1)\n        glGenBuffers(1, ebo, 0)\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, ebo[0])\n        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size * 4, intBuffer, GL_STATIC_DRAW)\n\n        glGenTextures(1, tex, 0)\n        glActiveTexture(GL_TEXTURE0)\n        glBindTexture(GL_TEXTURE_2D, tex[0])\n        // \u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u8bbe\u7f6e\u73af\u7ed5\u3001\u8fc7\u6ee4\u65b9\u5f0f\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR)\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR)\n        val bitmap: Bitmap = ShaderUtils.loadImageAssets(\"face.png\")\n        GLUtils.texImage2D(GL_TEXTURE_2D, 0, bitmap, 0)\n        glGenerateMipmap(GL_TEXTURE_2D)\n\n        glUseProgram(program)\n        val loc0 = glGetUniformLocation(program, \"texture1\")\n        glUniform1i(loc0, 0)\n\n        // Load the vertex data\n        glVertexAttribPointer(0, 3, GL_FLOAT, false, 8 * 4, 0)\n        glEnableVertexAttribArray(0)\n        glVertexAttribPointer(1, 3, GL_FLOAT, false, 8 * 4, 3 * 4)\n        glEnableVertexAttribArray(1)\n        glVertexAttribPointer(2, 2, GL_FLOAT, false, 8 * 4, 6 * 4)\n        glEnableVertexAttribArray(2)\n        glBindBuffer(GL_ARRAY_BUFFER, 0)\n        GLES30.glBindVertexArray(0)\n        glClearColor(0.5f, 0.5f, 0.5f, 0.5f)\n    }\n\n    override fun onSurfaceChanged(gl: GL10?, width: Int, height: Int) {\n        glViewport(0, 0, width, height)\n    }\n\n    var transform = FloatArray(16)\n\n    override fun onDrawFrame(gl: GL10?) {\n        // Clear the color buffer\n        glClear(GL_COLOR_BUFFER_BIT)\n\n        // Use the program object\n        glUseProgram(program)\n        glBindTexture(GL_TEXTURE_2D, tex[0])\n\n        Matrix.setIdentityM(transform, 0)\n        //        Matrix.translateM(transform, 0, 0, 0, 0);\n\n        val loc = glGetUniformLocation(program, \"transform\")\n        glUniformMatrix4fv(loc, 1, false, transform, 0)\n        GLES30.glBindVertexArray(vao[0])\n\n//            glDrawArrays ( GL_TRIANGLES, 0, vertices.length );\n        glDrawElements(GL_TRIANGLES, vertices.size, GL_UNSIGNED_INT, 0)\n    }\n\n}\n```\n\n\u5728MainActivity\u4e2d\u505a\u4e00\u70b9\u4fee\u6539\uff0c\u521b\u5efaGLSurfaceView\u6dfb\u52a0\u5230Activity\u4e2d\u3002\n```kotlin\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        glSurfaceView = GLSurfaceView(this)\n        val screenW = resources.displayMetrics.widthPixels\n        glSurfaceView.layoutParams = FrameLayout.LayoutParams(screenW, screenW * 4 / 3)\n        setContentView(glSurfaceView)\n\n        glSurfaceView.setEGLContextClientVersion(3)\n        cameraRender = CameraRender()\n        glSurfaceView.setRenderer(cameraRender)\n        glSurfaceView.renderMode = GLSurfaceView.RENDERMODE_CONTINUOUSLY\n\n        if (allPermissionsGranted()) {\n            startCamera()\n        } else {\n            ActivityCompat.requestPermissions(this, REQUIRED_PERMISSIONS, REQUEST_CODE_PERMISSIONS)\n        }\n\n//        camera_capture_button.setOnClickListener { takePhoto() }\n\n        outputDirectory = getOutputDirectory()\n\n        cameraExecutor = Executors.newSingleThreadExecutor()\n    }\n```\n\n\n## 3 \u7528OpenGL\u9884\u89c8\u76f8\u673a\n**\u4fee\u6539\u76f8\u673a\u9884\u89c8\u76ee\u6807**\n\u5c06startCamera\u65b9\u6cd5\u4e2dsetSurfaceProvider\u53c2\u6570\u6539\u6210cameraRender\n```kotlin\n    private fun startCamera() {\n        val cameraProviderFuture = ProcessCameraProvider.getInstance(this)\n\n        cameraProviderFuture.addListener(Runnable {\n            // 1. \u9009\u62e9\u6444\u50cf\u5934\uff0c\u76f8\u673a\u9884\u89c8\n            val cameraSelector = CameraSelector.DEFAULT_BACK_CAMERA\n            val cameraProvider: ProcessCameraProvider = cameraProviderFuture.get()\n\n            val preview = Preview.Builder()\n                .setTargetResolution(Size(480, 640))\n                .build().also {\n//                it.setSurfaceProvider(viewFinder.createSurfaceProvider())\n                it.setSurfaceProvider(cameraRender)\n            }\n\n```\n**cameraRender\u521b\u5efaOESTexture\uff0c\u5b9e\u73b0Preview.SurfaceProvider\u63a5\u53e3**\n\u5c06\u539f\u6765\u521b\u5efaGL_TEXTURE_2D\u7684\u65b9\u6cd5\u6539\u6210\u521b\u5efaGL_TEXTURE_EXTERNAL_OES\uff0c\u5e76\u521b\u5efa\u4e00\u4e2aSurfaceTexture\u5bf9\u8c61\uff1b\n\n```kotlin\n\n    var surfaceTexture: SurfaceTexture? = null\n\n    private val executor = Executors.newSingleThreadExecutor()\n\n    override fun onSurfaceCreated(gl: GL10?, config: EGLConfig?) {\n    ...\n//        glGenTextures(1, tex, 0)\n//        glActiveTexture(GL_TEXTURE0)\n//        glBindTexture(GL_TEXTURE_2D, tex[0])\n//        // \u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u8bbe\u7f6e\u73af\u7ed5\u3001\u8fc7\u6ee4\u65b9\u5f0f\n//        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)\n//        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)\n//        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR)\n//        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR)\n//        val bitmap: Bitmap = ShaderUtils.loadImageAssets(\"face.png\")\n//        GLUtils.texImage2D(GL_TEXTURE_2D, 0, bitmap, 0)\n//        glGenerateMipmap(GL_TEXTURE_2D)\n\n        tex = createOESTexture()\n        surfaceTexture = SurfaceTexture(tex[0])\n        surfaceTexture?.setOnFrameAvailableListener {\n//            requestRender()\n        }\n}\n\n\n    fun createOESTexture(): IntArray {\n        val arr = IntArray(1)\n        glGenTextures(1, arr, 0)\n        glBindTexture(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, arr[0])\n        glTexParameterf(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_MIN_FILTER, GL_LINEAR.toFloat())\n        glTexParameterf(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_MAG_FILTER, GL_LINEAR.toFloat())\n        glTexParameterf(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE.toFloat())\n        glTexParameterf(GLES11Ext.GL_TEXTURE_EXTERNAL_OES, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE.toFloat())\n        return arr\n    }\n\n```\n\u5b9e\u73b0Preview.SurfaceProvider\u63a5\u53e3\u7684onSurfaceRequested\u65b9\u6cd5\uff0c\u6839\u636e\u65b9\u6cd5\u63d0\u4f9b\u7684\u53c2\u6570\u8bbe\u7f6esurfaceTexture\u7684BufferSize\uff0c\u7136\u540e\u7528surfaceTexture\u521b\u5efa\u4e00\u4e2aSurface\uff0c\u5c06\u5b83\u63d0\u4f9b\u7ed9SurfaceRequest\u3002\n\n```kotlin\nclass CameraRender: GLSurfaceView.Renderer, Preview.SurfaceProvider {\n    ...\n    override fun onSurfaceRequested(request: SurfaceRequest) {\n        val size = request.resolution\n        surfaceTexture?.setDefaultBufferSize(size.width, size.height)\n        val surface = Surface(surfaceTexture)\n        request.provideSurface(surface, executor, Consumer {\n            surfaceTexture?.release()\n            surface.release()\n        })\n    }\n}\n```\n**\u7ed8\u5236**\n\u5728\u7ed8\u5236\u524d\u8c03\u7528surfaceTexture?.updateTexImage()\u66f4\u65b0\u753b\u9762\uff0c\u7136\u540e\u83b7\u53d6\u5750\u6807\u53d8\u6362\u77e9\u9635\u7ed9transform\u3002\n```kotlin\n    override fun onDrawFrame(gl: GL10?) {\n        // Clear the color buffer\n        glClear(GL_COLOR_BUFFER_BIT)\n\n        surfaceTexture?.updateTexImage()\n        surfaceTexture?.getTransformMatrix(transform)\n\n        // Use the program object\n        glUseProgram(program)\n        glBindTexture(GL_TEXTURE_2D, tex[0])\n\n//        Matrix.setIdentityM(transform, 0)\n//        Matrix.translateM(transform, 1, 1f, 0f, 0f);\n\n        var loc = glGetUniformLocation(program, \"transform\")\n        glUniformMatrix4fv(loc, 1, false, transform, 0)\n        GLES30.glBindVertexArray(vao[0])\n\n//            glDrawArrays ( GL_TRIANGLES, 0, vertices.length );\n        glDrawElements(GL_TRIANGLES, vertices.size, GL_UNSIGNED_INT, 0)\n    }\n```\n**Shader**\n\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u7528transform\u5bf9\u7eb9\u7406\u5750\u6807\u8fdb\u884c\u8f6c\u6362\u3002\n```kotlin\n#version 300 es\nlayout (location = 0) in vec3 vPosition;\nlayout (location = 1) in vec3 vColor;\nlayout (location = 2) in vec2 vTexCoord;\nout vec3 aColor;\nout vec2 aTexCoord;\n\nuniform mat4 transform;\n\nvoid main() {\n     gl_Position = vec4(vPosition, 1.0f);\n     aColor = vColor;\n     aTexCoord = (transform * vec4(vTexCoord, 1.0f, 1.0f)).xy;\n}\n```\n\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5c06sampler2D\u6539\u6210samplerExternalOES\uff0c\u6dfb\u52a0\u5fc5\u8981\u7684extension\u3002\n```kotlin\n#version 300 es\n#extension GL_OES_EGL_image_external : require\n#extension GL_OES_EGL_image_external_essl3 : require\n\nprecision mediump float;\nin vec3 aColor;\nin vec2 aTexCoord;\nout vec4 fragColor;\n\nuniform samplerExternalOES texture1;\n\nvoid main() {\n\n     // \u6b63\u5e38\u753b\u9762\n     fragColor = texture(texture1, aTexCoord);\n}\n```\n\u8fd9\u6837\u5c31\u80fd\u770b\u5230\u76f8\u673a\u753b\u9762\u4e86\u3002\n\n## 4 \u5b9e\u73b0\u7b80\u5355\u6ee4\u955c\n\n\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u7a0d\u4f5c\u5904\u7406\u5c31\u80fd\u5b9e\u73b0\u4e00\u4e9b\u6ee4\u955c\u6548\u679c\u3002\n\n```glsl\n    // \u5f69\u8272\u6ee4\u955c\u6548\u679c\n    fragColor = mix(texture(texture1, aTexCoord), vec4(aColor, 1.0f), 0.5f);\n```\n![Screenshot_2022-03-13-23-32-41-342_com.example.opengles3camera.jpg](https://rome753.github.io/cdn/1896166-e25a83f84f52fb4f.jpg)\n\n```glsl\n     // \u56db\u5206\u5c4f\u6548\u679c\n     float s = aTexCoord.s;\n     float t = aTexCoord.t;\n     if (s > 0.5f) {\n          s = s - 0.5f;\n     }\n     if (t > 0.5f) {\n          t = t - 0.5f;\n     }\n     fragColor = texture(texture1, vec2(s, t));\n```\n![Screenshot_2022-03-13-23-27-21-744_com.example.opengles3camera.jpg](https://rome753.github.io/cdn/1896166-32278ac71d3a8921.jpg)\n\n\n```glsl\n     // \u9a6c\u8d5b\u514b\u6548\u679c\n     float s = aTexCoord.s;\n     float t = aTexCoord.t;\n     float msk = 50.0f;\n     s = float(int(s * msk)) / msk;\n     t = float(int(t * msk)) / msk;\n     fragColor = texture(texture1, vec2(s, t));\n```\n![Screenshot_2022-03-13-23-41-25-639_com.example.opengles3camera.jpg](https://rome753.github.io/cdn/1896166-d8d589ef65f14f68.jpg)\n\n# 5 Github\u5730\u5740\n\u5b8c\u6574\u9879\u76ee\u5728[SurfacePaint](https://github.com/rome753/SurfacePaint)\u9879\u76ee\u4e0b\u7684`opengles3camera`\u6a21\u5757\u91cc\u3002\n", "mt_excerpt": "", "title": "Android-OpenGLES3\u7ed8\u56fe---\u4f7f\u7528CameraX", "dateCreated": "20220718T18:01:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491470.html", "permalink": "https://www.cnblogs.com/rome753/p/16491470.html", "postid": 16491470, "description": "# 1. \u683c\u5f0f\u8bf4\u660e\n\n\u5728\u5b89\u5353\u5f00\u53d1\u7684\u4e00\u4e9b\u573a\u666f\uff0c\u6bd4\u5982\u64cd\u4f5c\u76f8\u673a\u8f93\u51fa\u3001\u89c6\u9891\u7f16\u89e3\u7801\u4e2d\u4f1a\u7528\u5230YUV\u56fe\u50cf\u683c\u5f0f\u3002YUV\u4e2d\u6700\u5e38\u7528\u7684\u662fYUV420\u683c\u5f0f\uff0cYUV420\u5c31\u662f\u6bcf4\u4e2aY\u5206\u91cf\u5171\u7528\u4e00\u4e2aU\u5206\u91cf\u548c\u4e00\u4e2aV\u5206\u91cf\u3002\n\nYUV420\u5206\u4e3a4\u79cd\uff1a\n- I420\uff1a  YYYYYYYY UU VV\n- YV12\uff1aYYYYYYYY VV UU\n- NV12\uff1aYYYYYYYY UVUV\n- NV21\uff1aYYYYYYYY VUVU\n\nI420\u548cYV12\u5c5e\u4e8eYUV420P\uff0c\u4e5f\u5c31\u662fU\u548cV\u5206\u5f00\u653e\u7f6e\uff0c\u4e0d\u540c\u7684\u662fI420\u662f\u5148\u653eU\uff0cYV12\u662f\u5148\u653eV\uff1b\nNV12\u548cNV21\u5c5e\u4e8eYUV420SP\uff0c\u4e5f\u5c31\u662fU\u548cV\u4ea4\u66ff\u653e\u7f6e\uff0c\u4e0d\u540c\u7684\u662fNV12\u662fUV\u4ea4\u66ff\uff0cNV21\u662fVU\u4ea4\u66ff\u3002\n\n> \u8fd94\u79cd\u683c\u5f0f\u548c\u540d\u79f0\u662f\u6211\u603b\u7ed3\u4e86\u56fd\u5185\u5916\u5f88\u591a\u7bc7\u8d44\u6599\u5f97\u51fa\u6765\u7684\uff0c\u5e76\u4e14\u7ecf\u8fc7\u4e86\u7b97\u6cd5\u68c0\u9a8c\uff0c\u5e94\u8be5\u6bd4\u8f83\u51c6\u786e\u3002\u56fd\u5185\u90e8\u5206\u8d44\u6599\u53ef\u80fd\u6709\u63cf\u8ff0\u9519\u8bef\u3002\n\n\u7531\u4e8eYUV420\u547d\u540d\u548c\u683c\u5f0f\u6709\u4e9b\u4e71\uff08\u5305\u62ec\u5b98\u65b9\u8d44\u6599\uff09\uff0c\u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\uff0c\u5728\u505a\u56fe\u50cf\u5904\u7406\u65f6\uff0c\u5f88\u5bb9\u6613\u5f04\u9519\uff0c\u5bfc\u81f4\u8f93\u51fa\u7684\u56fe\u50cf\u9519\u4e71\u3002\n![device-2019-06-03-121131.png](https://rome753.github.io/cdn/1896166-f4a95ed1f4f852d0.png)\n\u6211\u51b3\u5b9a\u505a\u4e00\u4e2a\u80fd\u8bc6\u522bYUV420\u56fe\u50cf\u683c\u5f0f\u7684\u5de5\u5177\u3002\n\u5f53\u672a\u77e5\u683c\u5f0f\uff08\u662fYUV420\uff0c\u4f46\u5177\u4f53\u683c\u5f0f\u4e0d\u786e\u5b9a\uff09\u7684\u56fe\u50cf\u6570\u636e\u8f93\u5165\u65f6\uff0c\u5b83\u540c\u65f6\u4ee5I420\u3001YV12\u3001NV12\u548cNV21\u8fd94\u79cd\u683c\u5f0f\u53bb\u89e3\u6790\u56fe\u50cf\uff0c\u5e76\u5b9e\u65f6\u663e\u793a\u3002\u5176\u4e2d\u53ea\u6709\u4e00\u79cd\u662f\u663e\u793a\u6b63\u786e\u7684\uff0c\u53e6\u5916\u4e09\u79cd\u90fd\u4f1a\u6709\u989c\u8272\u5f02\u5e38\u3002\n\u6b64\u5916\u518d\u52a0\u4e0a\u65b9\u5411\u65cb\u8f6c\uff08\u4e0a\u56fe\u4e2d\u7684Rotate\uff09\u548c\u5bbd\u9ad8\u4ea4\u6362\uff08\u4e0a\u56fe\u4e2d\u7684Flip\uff09\u529f\u80fd\u3002\n\n# 2. \u6570\u636e\u6765\u6e90\n\n\u6570\u636e\u6765\u6e90\u4e8e\u5b89\u5353\u76f8\u673a\uff0c\u5206\u4e3aCamera1\u548cCamera2\u3002Camera1\u662f\u65e7\u7684API\uff0c\u6807\u8bb0\u4e3aDeprecated\uff0c\u529f\u80fd\u8f83\u7b80\u5355\uff0c\u5b98\u65b9\u63a8\u8350\u7528Camera2 API\u3002Camera2\u529f\u80fd\u66f4\u5f3a\u5927\uff0c\u4f7f\u7528\u8d77\u6765\u4e5f\u590d\u6742\u4e00\u70b9\u3002\n\u5b83\u4eec\u7684\u4f7f\u7528\u65b9\u6cd5\u53ef\u53c2\u8003\u5b98\u65b9Demo\uff1a\n1. Camera1\u5b98\u65b9Demo\u955c\u50cf\n[https://github.com/appium/android-apidemos/blob/master/app/src/main/java/io/appium/android/apis/graphics/CameraPreview.java](https://github.com/appium/android-apidemos/blob/master/app/src/main/java/io/appium/android/apis/graphics/CameraPreview.java)\n2. Camera2\u5b98\u65b9Demo\n[https://github.com/googlesamples/android-Camera2Basic](https://github.com/googlesamples/android-Camera2Basic)\n\nCamera1\u83b7\u53d6\u8f93\u51fa\u7684\u56fe\u50cf\u6570\u636e\u65b9\u6cd5\u5982\u4e0b\uff1a\n```java\n\n        // 1. \u521b\u5efaCamera.Parameters\u5e76\u8bbe\u7f6e\u9884\u89c8\u56fe\u50cf\u683c\u5f0f\n       Camera.Parameters parameters = mCamera.getParameters();\n        parameters.setPreviewSize(mPreviewSize.width, mPreviewSize.height);\n        parameters.setPreviewFormat(ImageFormat.YV12); \n        requestLayout();\n        mCamera.setParameters(parameters);\n\n        // 2. \u8bbe\u7f6e\u9884\u89c8\u56fe\u50cf\u56de\u8c03\n        mCamera = Camera.open();\n        mCamera.setPreviewCallback(this);\n\n        // 3. \u5904\u7406\u56de\u8c03\u56fe\u50cf\u7684byte[]\u6570\u636e\n    @Override\n    public void onPreviewFrame(byte[] data, Camera camera) {\n        ...\n    }\n```\n\nCamera2\u83b7\u53d6\u8f93\u51fa\u7684\u56fe\u50cf\u6570\u636e\u65b9\u6cd5\u5982\u4e0b\uff1a\n```java\n        // 1. \u521b\u5efaImageReader\u5e76\u8bbe\u7f6e\u56fe\u50cf\u683c\u5f0f\n                mImageReader = ImageReader.newInstance(640, 480,\n                        ImageFormat.YUV_420_888, /*maxImages*/2);\n                mImageReader.setOnImageAvailableListener(\n                        mOnImageAvailableListener, mBackgroundHandler);\n\n        // 2. \u4eceImageReader\u4e2d\u53d6\u5f97getSurface()\u5e76\u4f20\u7ed9mCameraDevice\n            mPreviewRequestBuilder.addTarget(mImageReader.getSurface());\n\n            // Here, we create a CameraCaptureSession for camera preview.\n            mCameraDevice.createCaptureSession(Arrays.asList(surface, mImageReader.getSurface()),\n                    new CameraCaptureSession.StateCallback() {\n\n        // 3. \u5728ImageReader\u7684OnImageAvailableListener\u56de\u8c03\u4e2d\u83b7\u53d6Image\u6570\u636e\n    private final ImageReader.OnImageAvailableListener mOnImageAvailableListener\n            = new ImageReader.OnImageAvailableListener() {\n\n        @Override\n        public void onImageAvailable(ImageReader reader) {\n            handleImage(reader);\n        }\n\n    };\n```\n\n# 3. \u683c\u5f0f\u8f6c\u6362\u7b97\u6cd5\n\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u7684\u5de5\u5177\u4e2d\u4f7f\u75284\u4e2aImageView\u6765\u5c55\u793a\u56fe\u50cf\u3002\u4e0d\u7528\u62c5\u5fc3\u56fe\u50cf\u662f\u9759\u6b62\u7684\uff0c\u7531\u4e8e\u4e0d\u505c\u5237\u65b0\uff0c\u56fe\u50cf\u662f\u5b9e\u65f6\u8fd0\u52a8\u7684\u3002\u539f\u59cb\u56fe\u50cf\u9700\u8981\u8f6c\u6210Bitmap\u624d\u80fd\u5728ImageView\u4e2d\u663e\u793a\u3002\n\nYUV420\u8f6cBitmap\u7b97\u6cd5\uff1a\n```java\n    public static Bitmap nv12ToBitmap(byte[] data, int w, int h) {\n        return spToBitmap(data, w, h, 0, 1);\n    }\n\n    public static Bitmap nv21ToBitmap(byte[] data, int w, int h) {\n        return spToBitmap(data, w, h, 1, 0);\n    }\n\n    private static Bitmap spToBitmap(byte[] data, int w, int h, int uOff, int vOff) {\n        int plane = w * h;\n        int[] colors = new int[plane];\n        int yPos = 0, uvPos = plane;\n        for(int j = 0; j < h; j++) {\n            for(int i = 0; i < w; i++) {\n                // YUV byte to RGB int\n                final int y1 = data[yPos] & 0xff;\n                final int u = (data[uvPos + uOff] & 0xff) - 128;\n                final int v = (data[uvPos + vOff] & 0xff) - 128;\n                final int y1192 = 1192 * y1;\n                int r = (y1192 + 1634 * v);\n                int g = (y1192 - 833 * v - 400 * u);\n                int b = (y1192 + 2066 * u);\n\n                r = (r < 0) ? 0 : ((r > 262143) ? 262143 : r);\n                g = (g < 0) ? 0 : ((g > 262143) ? 262143 : g);\n                b = (b < 0) ? 0 : ((b > 262143) ? 262143 : b);\n                colors[yPos] = ((r << 6) & 0xff0000) |\n                        ((g >> 2) & 0xff00) |\n                        ((b >> 10) & 0xff);\n\n                if((yPos++ & 1) == 1) uvPos += 2;\n            }\n            if((j & 1) == 0) uvPos -= w;\n        }\n        return Bitmap.createBitmap(colors, w, h, Bitmap.Config.RGB_565);\n    }\n\n    public static Bitmap i420ToBitmap(byte[] data, int w, int h) {\n        return pToBitmap(data, w, h, true);\n    }\n\n    public static Bitmap yv12ToBitmap(byte[] data, int w, int h) {\n        return pToBitmap(data, w, h, false);\n    }\n\n    private static Bitmap pToBitmap(byte[] data, int w, int h, boolean uv) {\n        int plane = w * h;\n        int[] colors = new int[plane];\n        int off = plane >> 2;\n        int yPos = 0, uPos = plane + (uv ? 0 : off), vPos = plane + (uv ? off : 0);\n        for(int j = 0; j < h; j++) {\n            for(int i = 0; i < w; i++) {\n                // YUV byte to RGB int\n                final int y1 = data[yPos] & 0xff;\n                final int u = (data[uPos] & 0xff) - 128;\n                final int v = (data[vPos] & 0xff) - 128;\n                final int y1192 = 1192 * y1;\n                int r = (y1192 + 1634 * v);\n                int g = (y1192 - 833 * v - 400 * u);\n                int b = (y1192 + 2066 * u);\n\n                r = (r < 0) ? 0 : ((r > 262143) ? 262143 : r);\n                g = (g < 0) ? 0 : ((g > 262143) ? 262143 : g);\n                b = (b < 0) ? 0 : ((b > 262143) ? 262143 : b);\n                colors[yPos] = ((r << 6) & 0xff0000) |\n                        ((g >> 2) & 0xff00) |\n                        ((b >> 10) & 0xff);\n\n                if((yPos++ & 1) == 1) {\n                    uPos++;\n                    vPos++;\n                }\n            }\n            if((j & 1) == 0) {\n                uPos -= (w >> 1);\n                vPos -= (w >> 1);\n            }\n        }\n        return Bitmap.createBitmap(colors, w, h, Bitmap.Config.RGB_565);\n    }\n```\n\u8fd9\u662f\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u662fIntel\u63d0\u4f9b\u7684\u3002https://software.intel.com/en-us/android/articles/trusted-tools-in-the-new-android-world-optimization-techniques-from-intel-sse-intrinsics-to\n\n\u53e6\u4e00\u79cdYUV420\u8f6cBitmap\u7b97\u6cd5\uff1a\n```java\n    public static Bitmap nv21ToBitmap(byte[] data, int w, int h) {\n        final YuvImage image = new YuvImage(data, ImageFormat.NV21, w, h, null);\n        ByteArrayOutputStream os = new ByteArrayOutputStream(data.length);\n        if (image.compressToJpeg(new Rect(0, 0, w, h), 100, os)) {\n            byte[] tmp = os.toByteArray();\n            return BitmapFactory.decodeByteArray(tmp, 0, tmp.length);\n        }\n        return null;\n    }\n```\n\u8fd9\u79cd\u65b9\u6cd5\u662f\u5229\u7528\u5b89\u5353\u63d0\u4f9b\u7684YuvImage\u7c7b\u5c06NV21\u683c\u5f0f\u8f6c\u6362\u6210Bitmap\u3002\u867d\u7136\u8fd9\u662f\u5b98\u65b9\u7684\uff0c\u4f46\u662f\u8f6c\u6362\u6548\u7387\u6bd4\u8f83\u4f4e\uff0c\u6bd4\u7b2c\u4e00\u79cd\u65b9\u6cd5\u6162\u4e00\u500d\uff0c\u800c\u4e14\u53ea\u652f\u6301NV21\u683c\u5f0f\uff0c\u6240\u4ee5\u4e0d\u63a8\u8350\u4f7f\u7528\u3002\n\nCamera2\u7684\u56fe\u50cf\u6570\u636e\u56de\u8c03\u4e2d\u63d0\u4f9b\u7684\u662fImageReader\uff0c\u9700\u8981\u4eceImageReader\u4e2d\u83b7\u53d6Image.Plane[]\uff0c\u518d\u8f6c\u6362\u6210byte[]\u6570\u636e\u3002\u65b9\u6cd5\u5982\u4e0b\uff1a\n```java\n    /**\n     * \u4eceImageReader\u4e2d\u83b7\u53d6byte[]\u6570\u636e\n     */\n    public static byte[] getBytesFromImageReader(ImageReader imageReader) {\n        try (Image image = imageReader.acquireNextImage()) {\n            final Image.Plane[] planes = image.getPlanes();\n            int len = 0;\n            for (Image.Plane plane : planes) {\n                len += plane.getBuffer().remaining();\n            }\n            byte[] bytes = new byte[len];\n            int off = 0;\n            for (Image.Plane plane : planes) {\n                ByteBuffer buffer = plane.getBuffer();\n                int remain = buffer.remaining();\n                buffer.get(bytes, off, remain);\n                off += remain;\n            }\n            return bytes;\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n```\n\n# 4. \u65cb\u8f6c\u7b97\u6cd5\n```java\n\n    // NV21\u6216NV12\u987a\u65f6\u9488\u65cb\u8f6c90\u5ea6\n    public static void rotateSP90(byte[] src, byte[] dest, int w, int h) {\n        int pos = 0;\n        int k = 0;\n        for (int i = 0; i <= w - 1; i++) {\n            for (int j = h - 1; j >= 0; j--) {\n                dest[k++] = src[j * w + i];\n            }\n        }\n\n        pos = w * h;\n        for (int i = 0; i <= w - 2; i += 2) {\n            for (int j = h / 2 - 1; j >= 0; j--) {\n                dest[k++] = src[pos + j * w + i];\n                dest[k++] = src[pos + j * w + i + 1];\n            }\n        }\n    }\n\n    // NV21\u6216NV12\u987a\u65f6\u9488\u65cb\u8f6c270\u5ea6\n    public static void rotateSP270(byte[] src, byte[] dest, int w, int h) {\n        int pos = 0;\n        int k = 0;\n        for (int i = w - 1; i >= 0; i--) {\n            for (int j = 0; j <= h - 1; j++) {\n                dest[k++] = src[j * w + i];\n            }\n        }\n\n        pos = w * h;\n        for (int i = w - 2; i >= 0; i -= 2) {\n            for (int j = 0; j <= h / 2 - 1; j++) {\n                dest[k++] = src[pos + j * w + i];\n                dest[k++] = src[pos + j * w + i + 1];\n            }\n        }\n    }\n\n    // NV21\u6216NV12\u987a\u65f6\u9488\u65cb\u8f6c180\u5ea6\n    public static void rotateSP180(byte[] src, byte[] dest, int w, int h) {\n        int pos = 0;\n        int k = w * h - 1;\n        while (k >= 0) {\n            dest[pos++] = src[k--];\n        }\n\n        k = src.length - 2;\n        while (pos < dest.length) {\n            dest[pos++] = src[k];\n            dest[pos++] = src[k + 1];\n            k -= 2;\n        }\n    }\n\n    // I420\u6216YV12\u987a\u65f6\u9488\u65cb\u8f6c90\u5ea6\n    public static void rotateP90(byte[] src, byte[] dest, int w, int h) {\n        int pos = 0;\n        //\u65cb\u8f6cY\n        int k = 0;\n        for (int i = 0; i < w; i++) {\n            for (int j = h - 1; j >= 0; j--) {\n                dest[k++] = src[j * w + i];\n            }\n        }\n        //\u65cb\u8f6cU\n        pos = w * h;\n        for (int i = 0; i < w / 2; i++) {\n            for (int j = h / 2 - 1; j >= 0; j--) {\n                dest[k++] = src[pos + j * w / 2 + i];\n            }\n        }\n\n        //\u65cb\u8f6cV\n        pos = w * h * 5 / 4;\n        for (int i = 0; i < w / 2; i++) {\n            for (int j = h / 2 - 1; j >= 0; j--) {\n                dest[k++] = src[pos + j * w / 2 + i];\n            }\n        }\n    }\n\n    // I420\u6216YV12\u987a\u65f6\u9488\u65cb\u8f6c270\u5ea6\n    public static void rotateP270(byte[] src, byte[] dest, int w, int h) {\n        int pos = 0;\n        //\u65cb\u8f6cY\n        int k = 0;\n        for (int i = w - 1; i >= 0; i--) {\n            for (int j = 0; j < h; j++) {\n                dest[k++] = src[j * w + i];\n            }\n        }\n        //\u65cb\u8f6cU\n        pos = w * h;\n        for (int i = w / 2 - 1; i >= 0; i--) {\n            for (int j = 0; j < h / 2; j++) {\n                dest[k++] = src[pos + j * w / 2 + i];\n            }\n        }\n\n        //\u65cb\u8f6cV\n        pos = w * h * 5 / 4;\n        for (int i = w / 2 - 1; i >= 0; i--) {\n            for (int j = 0; j < h / 2; j++) {\n                dest[k++] = src[pos + j * w / 2 + i];\n            }\n        }\n    }\n\n    // I420\u6216YV12\u987a\u65f6\u9488\u65cb\u8f6c180\u5ea6\n    public static void rotateP180(byte[] src, byte[] dest, int w, int h) {\n        int pos = 0;\n        int k = w * h - 1;\n        while (k >= 0) {\n            dest[pos++] = src[k--];\n        }\n\n        k = w * h * 5 / 4;\n        while (k >= w * h) {\n            dest[pos++] = src[k--];\n        }\n\n        k = src.length - 1;\n        while (pos < dest.length) {\n            dest[pos++] = src[k--];\n        }\n    }\n```\n\u6ce8\u610f\uff0c\u5982\u679c\u65cb\u8f6c\u89d2\u5ea6\u662f90\u6216270\u5ea6\uff0c\u90a3\u4e48\u65cb\u8f6c\u540e\u56fe\u50cf\u5bbd\u9ad8\u5c31\u4ea4\u6362\u4e86\u3002\n\n# 5. \u68c0\u6d4b\u5de5\u5177\n\u6709\u4e86\u6570\u636e\u6765\u6e90\u548c\u7b97\u6cd5\uff0c\u5c01\u88c5\u4e00\u4e2a\u68c0\u6d4b\u5de5\u5177\u7528\u6765\u5c55\u793a\u5c31\u7b80\u5355\u4e86\u3002\u68c0\u6d4b\u5de5\u5177YUVDetectView\u7ee7\u627f\u81eaFrameLayout\uff0c\u91cc\u9762\u653e4\u4e2aImageView\u3002\n```java\npublic class YUVDetectView extends FrameLayout {\n\n    ImageView[] ivs;\n    CheckBox cb;\n    boolean isFlip = false;\n    boolean isShowing = false;\n    int rotation = 0;\n\n    public YUVDetectView(@NonNull Context context) {\n        this(context, null);\n    }\n\n    public YUVDetectView(@NonNull Context context, @Nullable AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public YUVDetectView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        inflate(context, R.layout.view_yuv_detect, this);\n\n        ivs = new ImageView[]{\n                findViewById(R.id.iv1), // I420\n                findViewById(R.id.iv2), // YV12\n                findViewById(R.id.iv3), // NV12\n                findViewById(R.id.iv4), // NV21\n        };\n        cb = findViewById(R.id.cb);\n        cb.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            @Override\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                isFlip = isChecked;\n            }\n        });\n\n        View btn = findViewById(R.id.btn);\n        btn.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                rotation = (rotation + 90) % 360;\n            }\n        });\n    }\n\n    public void input(final ImageReader imageReader) {\n        final int w = isFlip ? imageReader.getHeight() : imageReader.getWidth();\n        final int h = isFlip ? imageReader.getWidth() : imageReader.getHeight();\n        final byte[] bytes = YUVTools.getBytesFromImageReader(imageReader);\n        if(bytes != null) {\n            displayImage(bytes, w, h);\n        }\n    }\n\n    public void inputAsync(final byte[] data, int width, int height) {\n        final int w = isFlip ? height : width;\n        final int h = isFlip ? width : height;\n\n        if (isShowing) return;\n        isShowing = true;\n        new Thread() {\n            @Override\n            public void run() {\n                displayImage(data, w, h);\n                isShowing = false;\n            }\n        }.start();\n    }\n\n    private void displayImage(byte[] data, int w, int h) {\n        long time = System.currentTimeMillis();\n\n        byte[] rotated = rotation == 0 ? data : new byte[data.length];\n        int rw = rotation % 180 == 0 ? w : h, rh = rotation % 180 == 0 ? h : w; // rotated\n\n        YUVTools.rotateP(data, rotated, w, h, rotation);\n        final Bitmap b0 = YUVTools.i420ToBitmap(rotated, rw, rh);\n\n        YUVTools.rotateP(data, rotated, w, h, rotation);\n        final Bitmap b1 = YUVTools.yv12ToBitmap(rotated, rw, rh);\n\n        YUVTools.rotateSP(data, rotated, w, h, rotation);\n        final Bitmap b2 = YUVTools.nv12ToBitmap(rotated, rw, rh);\n\n        YUVTools.rotateSP(data, rotated, w, h, rotation);\n        final Bitmap b3 = YUVTools.nv21ToBitmap(rotated, rw, rh);\n\n        time = System.currentTimeMillis() - time;\n        Log.d(\"YUVDetectView\", \"convert time: \" + time);\n        post(new Runnable() {\n            @Override\n            public void run() {\n                if (b0 != null) ivs[0].setImageBitmap(b0);\n                if (b1 != null) ivs[1].setImageBitmap(b1);\n                if (b2 != null) ivs[2].setImageBitmap(b2);\n                if (b3 != null) ivs[3].setImageBitmap(b3);\n            }\n        });\n    }d\n}\n```\n\n## Github\u5730\u5740\nhttps://github.com/rome753/android-YuvTools\n", "mt_excerpt": "", "title": "Android-YUV\u56fe\u50cf\u8f6c\u6362\u7b97\u6cd5\u548c\u68c0\u6d4b\u5de5\u5177", "dateCreated": "20220718T18:00:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491464.html", "permalink": "https://www.cnblogs.com/rome753/p/16491464.html", "postid": 16491464, "description": "![\u5b57\u7b26\u753b\u9762.jpg](https://rome753.github.io/cdn/1896166-057d07a10bfd07b2.jpg)\n\n\u5f88\u65e9\u5c31\u770b\u5230\u8fc7\u8fd9\u79cd\u573a\u666f\uff0c\u7528\u5b57\u7b26\u6765\u5c55\u793a\u56fe\u7247\u751a\u81f3\u64ad\u653e\u89c6\u9891\uff0c\u53ef\u4ee5\u8bf4\u662f\u9ed1\u5ba2\u70ab\uff08zhuang\uff09\u6280\uff08b\uff09\u795e\u5668\u3002\u5f53\u7136\u6709\u4e86\u4e00\u5b9a\u7684\u6280\u672f\u4e4b\u540e\uff0c\u5c31\u660e\u767d\u5176\u5b9e\u5b9e\u73b0\u633a\u7b80\u5355\u3002\n\n\u76f8\u673a\u9884\u89c8\n------------\n\u9996\u5148\u662f\u76f8\u673a\u9884\u89c8\u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u4e0d\u662f\u8fd9\u91cc\u7684\u91cd\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u5728Github\u4e0a\u627e\u5230\u6210\u719f\u7684\u4ee3\u7801\u3002Google\u5b98\u65b9\u7684Demo\u5f53\u7136\u662f\u6700\u597d\u7684\uff1a\nhttps://github.com/googlesamples/android-Camera2Basic\n\u8fd9\u4e2a\u9879\u76ee\u6f14\u793a\u4e86Camera2 API\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u5e76\u5728\u4e00\u4e2aTextureView\u4e0a\u5c55\u793a\u4e86\u76f8\u673a\u5b9e\u65f6\u753b\u9762\u3002\n\n\u8f6c\u6362\u7b97\u6cd5\u4e00(RGB\u8f6c\u6362)\n------------------------------\n\u6709\u4e86TextureView\uff0c\u5c31\u80fd\u901a\u8fc7getBitmap()\u65b9\u6cd5\u62ff\u5230bitmap\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u628abitmap\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c\u76f8\u5173\u7b97\u6cd5\u8fd9\u91cc\u6709\u4e00\u4efd\uff1a\nhttps://github.com/idevelop/ascii-camera/blob/master/script/ascii.js\n\u867d\u7136\u662fJavaScript\u7684\uff0c\u4f46\u662f\u7b80\u5355\u770b\u4e00\u4e0b\u5c31\u77e5\u9053\u539f\u7406\uff1a\n1. \u628abitmap\u4e2d\u50cf\u7d20\u70b9\u7684RGB\u503c\u8f6c\u6362\u6210\u7070\u5ea6\n2. \u7528\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u8868\u793a\u4e0d\u540c\u7684\u7070\u5ea6\uff0c\u5982ascii\u5b57\u7b26\u4e32```\" .,:;i1tfLCG08@\"```\uff0c\u8d8a\u5f80\u540e\u8868\u793a\u7070\u5ea6\u8d8a\u9ad8\uff0c\u4e5f\u5c31\u662f\u989c\u8272\u8d8a\u6df1\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e2d\u6587```\"\u3000\u4e00\u5341\u5927\u6728\u672c\u7c73\u83dc\u6570\u7c07\u9f8d\u9f98\"```\u3002\n3. \u91c7\u6837\u50cf\u7d20\u70b9\u7070\u5ea6\u8f6c\u6362\u6210\u5b57\u7b26\uff0c\u6bcf\u884c\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e0d\u540c\u884c\u7528\u6362\u884c\u7b26\u8fde\u63a5\u6210\u4e00\u4e2a\u603b\u7684\u5b57\u7b26\u4e32\uff0c\u5c55\u793a\u5230TextView\u4e0a\u3002\n\n\u7b97\u6cd5 Utils.java\n```java\npublic class Utils {\n\n    public static void startConvert(final TextureView textureView, final TextView textView) {\n        Handler handler = new Handler(){\n            @Override\n            public void handleMessage(Message msg) {\n                if(textureView != null) {\n                    Bitmap bitmap = textureView.getBitmap();\n                    if(bitmap != null) {\n                        String s = Utils.bitmap2string(bitmap);\n                        textView.setText(s);\n                    }\n                }\n                sendEmptyMessageDelayed(0, 20);\n            }\n        };\n        handler.sendEmptyMessage(0);\n    }\n\n    public static Bitmap imageReader2Bitmap(ImageReader imageReader) {\n        Image image = null;\n        ByteBuffer buffer = null;\n\n        try {\n            image = imageReader.acquireNextImage();\n            buffer = image.getPlanes()[0].getBuffer();\n            byte[] bytes = new byte[buffer.remaining()];\n            buffer.get(bytes);\n            return BitmapFactory.decodeByteArray(bytes, 0, bytes.length);\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if(buffer != null) {\n                buffer.clear();\n            }\n            if(image != null) {\n                image.close();\n            }\n        }\n        return null;\n    }\n\n    public static String bitmap2string(Bitmap bitmap) {\n        StringBuilder sb = new StringBuilder();\n        int w = bitmap.getWidth();\n        int h = bitmap.getHeight();\n        for(int j = 0; j < h; j+=20) {\n            for(int i = 0; i < w; i+=15) {\n                int pixel = bitmap.getPixel(i, j);\n                sb.append(color2char(pixel));\n            }\n            sb.append(\"\\r\\n\");\n        }\n        return sb.toString();\n    }\n\n//    private static char[] sChars = \" .,:;i1tfLCG08@\".toCharArray();\n    private static char[] sChars = \"\u3000\u4e00\u5341\u5927\u6728\u672c\u7c73\u83dc\u6570\u7c07\u9f8d\u9f98\".toCharArray();\n\n    public static Character color2char(int color) {\n        int red = Color.red(color);\n        int green = Color.green(color);\n        int blue = Color.blue(color);\n        int brightness = Math.round(0.299f * red + 0.587f * green + 0.114f * blue);\n        return sChars[brightness * (sChars.length - 1) / 255];\n    }\n}\n```\n\n\u5728\u539f\u9879\u76ee\u7684Camera2BasicFragment\u7684```onViewCreated()```\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4e00\u884c\u4ee3\u7801\u542f\u52a8\u5373\u53ef\n```java\n    @Override\n    public void onViewCreated(final View view, Bundle savedInstanceState) {\n        view.findViewById(R.id.picture).setOnClickListener(this);\n        view.findViewById(R.id.info).setOnClickListener(this);\n        mTextureView = (AutoFitTextureView) view.findViewById(R.id.texture);\n        Utils.startConvert(mTextureView, (TextView) view.findViewById(R.id.text));\n    }\n```\n\n\n\u8f6c\u6362\u7b97\u6cd5\u4e8c(YUV\u8f6c\u6362)\n-----------------------------\n\u4e0a\u9762\u867d\u7136\u5b9e\u73b0\u4e86\u56fe\u50cf\u5230\u5b57\u7b26\u4e32\u7684\u8f6c\u6362, \u4f46\u662f\u6709\u4e00\u4e9b\u95ee\u9898: \n- TextureView\u4e0a\u9762\u8fd8\u5728\u663e\u793a\u89c6\u9891\u753b\u9762, \u800c\u6211\u4eec\u53ea\u9700\u8981TextView\u663e\u793a\u7684\u5b57\u7b26\u4e32, \u8fd9\u662f\u4e00\u79cd\u6d6a\u8d39, \u53ef\u662fTextureView\u4e0d\u663e\u793a\u5c31\u62ff\u4e0d\u5230Bitmap\n- \u5f88\u591a\u89c6\u9891\u64ad\u653e\u5668\u662fSurfaceView\u7684\u5c01\u88c5, \u4e5f\u662f\u6ca1\u6cd5\u76f4\u63a5\u83b7\u53d6\u5230Bitmap\u7684\n- \u4eceBitmap\u4e2d\u53d6\u5f97\u50cf\u7d20\u7684RGB\u503c, \u8f6c\u6362\u6210\u7070\u5ea6, \u518d\u8f6c\u6362\u6210\u5b57\u7b26\u4e32, \u9700\u8981\u4e00\u5b9a\u7684\u8ba1\u7b97\u91cf, \u662f\u5426\u6709\u66f4\u7b80\u5355\u7684\u65b9\u5f0f?\n\n> \u4f7f\u7528`ImageReader`\u53ef\u4ee5\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898. `ImageReader`\u662fAndroid API 19\u540e\u63d0\u4f9b\u7684\u5de5\u5177\u7c7b, \u5b83\u5185\u90e8\u6709\u4e00\u4e2aSurface, \u53ef\u4ee5\u52a0\u8f7d\u548c\u8bfb\u53d6\u56fe\u50cf, \u4f46\u662f\u4e0d\u9700\u8981\u76f4\u63a5\u663e\u793a\u5728\u754c\u9762\u4e0a. \u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6ca1\u6709\u754c\u9762\u7684\u540e\u53f0\u64ad\u653e\u5668, \u6211\u4eec\u9700\u8981\u65f6\u53ef\u4ee5\u4ece\u91cc\u9762\u83b7\u53d6\u5f53\u524d\"\u64ad\u653e\"\u7684\u56fe\u50cf\u6570\u636e.\n\n> `ImageReader`\u8fd8\u80fd\u8bbe\u7f6e\u56fe\u50cf\u7684\u683c\u5f0f, \u9664\u4e86RGB\u5916, \u53e6\u4e00\u79cd\u5e38\u7528\u7684\u683c\u5f0f\u662fYUV. \u5b83\u4e5f\u662f\u7528\u50cf\u7d20\u70b9\u7684\u5206\u91cf\u6765\u8868\u793a\u56fe\u50cf, \u4e0d\u540c\u7684\u662f, \u5b83\u7684Y\u5206\u91cf\u4ee3\u8868\u4eae\u5ea6, U\u548cV\u4e24\u4e2a\u5206\u91cf\u4ee3\u8868\u989c\u8272. \u8fd9\u6837\u8868\u793a\u7684\u597d\u5904\u662f\u5f69\u8272\u4e0e\u9ed1\u767d\u753b\u9762\u7684\u8f6c\u6362\u5f88\u65b9\u4fbf, \u53bb\u6389UV\u5c31\u662f\u9ed1\u767d\u7684, \u4e5f\u5c31\u662f\u7070\u5ea6; \u5e76\u4e14Y\u5206\u91cf\u53ef\u4ee5\u505a\u4e00\u5b9a\u7684\u538b\u7f29, \u6bd4\u5982\u6bcf\u4e24\u4e2a\u6216\u56db\u4e2a\u50cf\u7d20\u70b9\u53d6\u4e00\u4e2aY\u5206\u91cf, \u4ee5\u8282\u7701\u7a7a\u95f4, \u8fd9\u5c31\u4ea7\u751f\u4e86\u4e0d\u540c\u683c\u5f0f\u7684YUV, \u5982\u4e0b\u56fe\n\n![YUV.jpg](https://rome753.github.io/cdn/1896166-4cb28b241fc8b112.jpg)\n\nYUV\u683c\u5f0f\u7684\u8be6\u7ec6\u4ecb\u7ecd\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0\nhttp://www.cnblogs.com/azraelly/archive/2013/01/01/2841269.html\n\n**\u4ee3\u7801\u5b9e\u73b0**\n\u4e4b\u524d\u521d\u59cb\u5316\u76f8\u673a\u7684\u65f6\u5019\u4f20\u5165\u4e00\u4e2aTextureView\u663e\u793a\u9884\u89c8, \u73b0\u5728\u4f20\u5165\u4e00\u4e2aImageReader\u53ef\u4ee5\u5417? \u5176\u5b9e\u76f8\u673a\u4f9d\u8d56\u7684\u4e0d\u662fTextureView\u800c\u662fSurface, `ImageReader.getSurface()`\u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97\u5b83\u5185\u90e8\u7684Surface. \n\u5728`ImageReader.OnImageAvailableListener`\u56de\u8c03\u4e2d\u53ef\u4ee5\u83b7\u53d6ImageReader\u4e2d\u7684\u56fe\u50cf.\n\u6211\u8fd9\u91cc\u7ed9ImageReader\u8bbe\u7f6e\u7684\u683c\u5f0f\u662f`ImageFormat.YUV_420_888`, \u8fd9\u79cd\u683c\u5f0f\u53ef\u4ee5\u76f4\u63a5\u83b7\u5f97\u56fe\u50cf\u7684Y\u5206\u91cf\u4e5f\u5c31\u662f\u7070\u5ea6.\n```java\n    private ImageReader mImageReader = ImageReader.newInstance(MAX_PREVIEW_WIDTH, MAX_PREVIEW_HEIGHT,\n                        ImageFormat.YUV_420_888, /*maxImages*/2);\n    mImageReader.setOnImageAvailableListener(\n                        mOnImageAvailableListener, mBackgroundHandler);\n\n    private void createCameraPreviewSession() {\n        try {\n\n            // We set up a CaptureRequest.Builder with the output Surface.\n            mPreviewRequestBuilder\n                    = mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);\n            mPreviewRequestBuilder.addTarget(mImageReader.getSurface());\n\n            // Here, we create a CameraCaptureSession for camera preview.\n            mCameraDevice.createCaptureSession(Arrays.asList(mImageReader.getSurface()),\n```\n\u8f6c\u6362\u7b97\u6cd5\u5982\u4e0b, \u4eceImageReader\u4e2d\u53d6\u5f97Image, Image\u4e2d\u6709\u51e0\u4e2a\u5e73\u9762`Image.Plane[]`, \u5176\u4e2d\u7b2c\u4e00\u4e2a\u5e73\u9762\u5c31\u662fY\u5206\u91cf\u6570\u7ec4. \u5b83\u662f\u4e00\u7ef4\u6570\u7ec4, \u901a\u8fc7\u9010\u884c\u626b\u63cf\u5c06\u4e8c\u7ef4\u56fe\u50cf\u4fdd\u5b58\u6210\u4e00\u7ef4, \u6211\u4eec\u83b7\u53d6\u56fe\u50cf\u5bbd\u5ea6\u540e\u8fdb\u884c\u76f8\u53cd\u7684\u64cd\u4f5c\u5c31\u80fd\u8f6c\u6362\u6210\u4e8c\u7ef4. \u6570\u7ec4\u4e2d\u4fdd\u5b58\u7684\u7070\u5ea6\u503c\u8303\u56f4\u662f`-128~127`. \u8f6c\u6362\u4e00\u4e0b\u5c31\u80fd\u6620\u5c04\u6210\u5b57\u7b26\u4e32\u4e86. \n```java\npublic static String yuv2string(ImageReader imageReader) {\n        Image image = null;\n        ByteBuffer buffer = null;\n\n        try {\n            image = imageReader.acquireNextImage();\n            Image.Plane[] planes = image.getPlanes();\n            buffer = planes[0].getBuffer();\n            byte[] bytes = new byte[buffer.remaining()];\n            buffer.get(bytes);\n            int w = image.getWidth();\n            int h = image.getHeight();\n//            Log.e(\"chao\", \"planes \" + planes.length + \" \" + w + \",\" + h);\n            StringBuilder sb = new StringBuilder();\n            for(int j = 0; j < h; j+=6) {\n                for (int i = 0; i < w; i+=6) {\n//                    int y = bytes[i * w + j] + 128;\n                    int y = bytes[j * w + i] + 128;\n                    char c = sChars[y * (sChars.length - 1) / 255];\n                    sb.append(c);\n                }\n                sb.append(\"\\r\\n\");\n            }\n            return sb.toString();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if(buffer != null) {\n                buffer.clear();\n            }\n            if(image != null) {\n                image.close();\n            }\n        }\n        return null;\n    }\n```\n> \u6700\u7ec8\u7684\u5c55\u793a\u6548\u679c\u4e0eRGB\u8f6c\u6362\u540e\u76f8\u4f3c, \u4f46\u662f**YUV\u8f6c\u6362\u901a\u7528\u6027\u66f4\u597d, \u6548\u7387\u66f4\u9ad8**, \u5b83\u4e5f\u662f\u56fe\u50cf\u5904\u7406\u4e2d\u7ecf\u5e38\u7528\u5230\u7684\u683c\u5f0f.\n\n\n\nGithub\u5730\u5740\n---------------\nhttps://github.com/rome753/StringCamera\n", "mt_excerpt": "", "title": "Android\u5b57\u7b26\u4e32\u76f8\u673a", "dateCreated": "20220718T17:59:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491457.html", "permalink": "https://www.cnblogs.com/rome753/p/16491457.html", "postid": 16491457, "description": "[\u4e0a\u4e00\u7bc7: Android WebRTC\u5b8c\u6574\u5165\u95e8\u6559\u7a0b02: \u672c\u5730\u56de\u73af](https://www.jianshu.com/p/2b9239eb793b)\n\n\u4e0a\u4e00\u7bc7\u5b8c\u6210\u4e86\u4e24\u4e2a\u4eba\u5728\u540c\u4e00\u4e2a\u624b\u673a\u4e2d\u7684\u6a21\u62df\u8fde\u63a5, \u8fd9\u4e00\u7bc7\u5728\u6b64\u57fa\u7840\u4e0a\u7ed9\u4e24\u4e2a\u624b\u673a\u5efa\u7acb\u771f\u6b63\u7684\u8fde\u63a5. \u8fd9\u5c31\u9700\u8981\u4e00\u4e2a\u4fe1\u4ee4\u670d\u52a1\u5668, \u5176\u5b9e\u5c31\u662f\u7528\u6765\u7ed9\u53cc\u65b9\u4ea4\u6362\u4fe1\u606f, \u5e76\u4e0d\u9700\u8981\u5bf9\u4fe1\u606f\u8fdb\u884c\u5904\u7406. \u56e0\u6b64\u670d\u52a1\u5668\u548c\u4fe1\u606f\u7684\u6570\u636e\u683c\u5f0f\u90fd\u53ef\u4ee5\u81ea\u5df1\u9009\u62e9, \u8fd9\u91cc\u7528[\u5b98\u65b9Demo](https://github.com/googlecodelabs/webrtc-web)\u63d0\u4f9b\u7684Nodejs\u670d\u52a1\u5668, \u7528soket.io\u5efa\u7acb\u8fde\u63a5.\n\n\u4fe1\u4ee4\u670d\u52a1\u7aef\n--------------\n\n\u7b80\u5355\u4ecb\u7ecd\u4e0b, Node.js\u5de5\u7a0b\u4e2d\u4e3b\u8981\u6587\u4ef6\u662f *index.js* \u548c *js/main.js* ,   *index.js* \u8d1f\u8d23\u542f\u52a8Node.js\u670d\u52a1\u5668, \u521d\u59cb\u5316socket.io\u670d\u52a1\u7aef, \u7b49\u5f85\u7ed9\u5ba2\u6237\u7aef\u53d1\u9001\u6570\u636e. \u800c *js/main.js* \u662f\u7f51\u9875\u5ba2\u6237\u7aef(\u8be6\u7ec6\u4f7f\u7528\u65b9\u6cd5\u8bf7\u53c2\u8003[\u5b98\u65b9\u6559\u7a0b](https://codelabs.developers.google.com/codelabs/webrtc-web/#0)).\n\n\u8fd9\u91cc\u5bf9 *index.js* \u7a0d\u4f5c\u4fee\u6539, \u6dfb\u52a0https\u652f\u6301(\u65b0\u7248WebRTC\u4e0d\u652f\u6301http), \u6dfb\u52a0\u63a7\u5236\u53f0\u65e5\u5fd7. \n1. \u81ea\u5df1\u751f\u6210https\u8bc1\u4e66, \u5e76\u590d\u5236key.pem\u548ccert.pem\u6587\u4ef6\u5230Node.js\u5de5\u7a0b\u7684\u6839\u76ee\u5f55. \n2. \u5728log()\u65b9\u6cd5\u4e2d\u52a0\u4e0a` console.log('chao', array);`\n\n```java\nvar fs = require('fs');\nvar options = {\n  key: fs.readFileSync('key.pem'),\n  cert: fs.readFileSync('cert.pem')\n};\n\nvar fileServer = new(nodeStatic.Server)();\nvar app = https.createServer(options, function(req, res) {\n  fileServer.serve(req, res);\n}).listen(8080);\n\nvar io = socketIO.listen(app);\nio.sockets.on('connection', function(socket) {\n\n  // convenience function to log server messages on the client\n  function log() {\n    var array = ['Message from server:'];\n    array.push.apply(array, arguments);\n    socket.emit('log', array);\n    \n    console.log('chao', array);\n  }\n```\n\n\u4fe1\u4ee4\u5ba2\u6237\u7aef\n---------------\n\u5728module\u7684build.gradle\u6dfb\u52a0socket.io\u4f9d\u8d56\n```java\n    implementation('io.socket:socket.io-client:0.8.3') {\n        // excluding org.json which is provided by Android\n        exclude group: 'org.json', module: 'json'\n    }\n```\nSignalingClient.java\n\u901a\u8fc7socket.io\u8fde\u63a5\u4fe1\u4ee4\u670d\u52a1\u5668, \u7136\u540e\u6536\u53d1\u6570\u636e. \u628aSDP\u548cIceCandidate\u8f6c\u6362\u6210json.\n```java\npublic class SignalingClient {\n\n    private static SignalingClient instance;\n    private SignalingClient(){\n        init();\n    }\n    public static SignalingClient get() {\n        if(instance == null) {\n            synchronized (SignalingClient.class) {\n                if(instance == null) {\n                    instance = new SignalingClient();\n                }\n            }\n        }\n        return instance;\n    }\n\n    private Socket socket;\n    private String room = \"OldPlace\";\n    private Callback callback;\n\n    private final TrustManager[] trustAll = new TrustManager[]{\n            new X509TrustManager() {\n                @Override\n                public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n\n                }\n\n                @Override\n                public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n\n                }\n\n                @Override\n                public X509Certificate[] getAcceptedIssuers() {\n                    return new X509Certificate[0];\n                }\n            }\n    };\n\n    public void setCallback(Callback callback) {\n        this.callback = callback;\n    }\n\n    private void init() {\n        try {\n            SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n            sslContext.init(null, trustAll, null);\n            IO.setDefaultHostnameVerifier((hostname, session) -> true);\n            IO.setDefaultSSLContext(sslContext);\n\n            socket = IO.socket(\"https://192.168.1.97:8080\");\n            socket.connect();\n\n            socket.emit(\"create or join\", room);\n\n            socket.on(\"created\", args -> {\n                Log.e(\"chao\", \"room created\");\n                callback.onCreateRoom();\n            });\n            socket.on(\"full\", args -> {\n                Log.e(\"chao\", \"room full\");\n            });\n            socket.on(\"join\", args -> {\n                Log.e(\"chao\", \"peer joined\");\n                callback.onPeerJoined();\n            });\n            socket.on(\"joined\", args -> {\n                Log.e(\"chao\", \"self joined\");\n                callback.onSelfJoined();\n            });\n            socket.on(\"log\", args -> {\n                Log.e(\"chao\", \"log call \" + Arrays.toString(args));\n            });\n            socket.on(\"bye\", args -> {\n                Log.e(\"chao\", \"bye \" + args[0]);\n                callback.onPeerLeave((String) args[0]);\n            });\n            socket.on(\"message\", args -> {\n                Log.e(\"chao\", \"message \" + Arrays.toString(args));\n                Object arg = args[0];\n                if(arg instanceof String) {\n\n                } else if(arg instanceof JSONObject) {\n                    JSONObject data = (JSONObject) arg;\n                    String type = data.optString(\"type\");\n                    if(\"offer\".equals(type)) {\n                        callback.onOfferReceived(data);\n                    } else if(\"answer\".equals(type)) {\n                        callback.onAnswerReceived(data);\n                    } else if(\"candidate\".equals(type)) {\n                        callback.onIceCandidateReceived(data);\n                    }\n                }\n            });\n\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        } catch (KeyManagementException e) {\n            e.printStackTrace();\n        } catch (URISyntaxException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void sendIceCandidate(IceCandidate iceCandidate) {\n        JSONObject jo = new JSONObject();\n        try {\n            jo.put(\"type\", \"candidate\");\n            jo.put(\"label\", iceCandidate.sdpMLineIndex);\n            jo.put(\"id\", iceCandidate.sdpMid);\n            jo.put(\"candidate\", iceCandidate.sdp);\n\n            socket.emit(\"message\", jo);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void sendSessionDescription(SessionDescription sdp) {\n        JSONObject jo = new JSONObject();\n        try {\n            jo.put(\"type\", sdp.type.canonicalForm());\n            jo.put(\"sdp\", sdp.description);\n\n            socket.emit(\"message\", jo);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public interface Callback {\n        void onCreateRoom();\n        void onPeerJoined();\n        void onSelfJoined();\n        void onPeerLeave(String msg);\n\n        void onOfferReceived(JSONObject data);\n        void onAnswerReceived(JSONObject data);\n        void onIceCandidateReceived(JSONObject data);\n    }\n}\n\n```\n\nMainActivity.java\n\u8ddf\u4e0a\u4e00\u7bc7\u7684\u5dee\u522b\u5c31\u662f, \u628a\u539f\u6765\u76f4\u63a5\u5171\u4eab\u7684\u6570\u636e\u901a\u8fc7SignalingClient\u53d1\u9001\u7ed9\u670d\u52a1\u7aef, \u670d\u52a1\u7aef\u518d\u53d1\u7ed9\u63a5\u6536\u7aef. \u6b64\u5916, \u670d\u52a1\u7aef\u6709\u4e00\u4e2a\u623f\u95f4\u7684\u6982\u5ff5, \u8fde\u63a5\u4e0a\u670d\u52a1\u7aef\u5c31\u76f8\u5f53\u4e8e\u8fdb\u5165\u623f\u95f4, \u5148\u8fdb\u5165\u623f\u95f4\u7684\u4eba\u662f\u623f\u4e3b. \u7531\u540e\u8fdb\u5165\u623f\u95f4\u7684\u4eba\u53d1\u9001Offer, \u623f\u4e3b\u63a5\u53d7Offer\u5e76\u56de\u590dAnswer.\n```java\npublic class MainActivity extends AppCompatActivity implements SignalingClient.Callback {\n\n    PeerConnectionFactory peerConnectionFactory;\n    PeerConnection peerConnection;\n    SurfaceViewRenderer localView;\n    SurfaceViewRenderer remoteView;\n    MediaStream mediaStream;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        EglBase.Context eglBaseContext = EglBase.create().getEglBaseContext();\n\n        // create PeerConnectionFactory\n        PeerConnectionFactory.initialize(PeerConnectionFactory.InitializationOptions\n                .builder(this)\n                .createInitializationOptions());\n        PeerConnectionFactory.Options options = new PeerConnectionFactory.Options();\n        DefaultVideoEncoderFactory defaultVideoEncoderFactory =\n                new DefaultVideoEncoderFactory(eglBaseContext, true, true);\n        DefaultVideoDecoderFactory defaultVideoDecoderFactory =\n                new DefaultVideoDecoderFactory(eglBaseContext);\n        peerConnectionFactory = PeerConnectionFactory.builder()\n                .setOptions(options)\n                .setVideoEncoderFactory(defaultVideoEncoderFactory)\n                .setVideoDecoderFactory(defaultVideoDecoderFactory)\n                .createPeerConnectionFactory();\n\n        SurfaceTextureHelper surfaceTextureHelper = SurfaceTextureHelper.create(\"CaptureThread\", eglBaseContext);\n        // create VideoCapturer\n        VideoCapturer videoCapturer = createCameraCapturer(true);\n        VideoSource videoSource = peerConnectionFactory.createVideoSource(videoCapturer.isScreencast());\n        videoCapturer.initialize(surfaceTextureHelper, getApplicationContext(), videoSource.getCapturerObserver());\n        videoCapturer.startCapture(480, 640, 30);\n\n        localView = findViewById(R.id.localView);\n        localView.setMirror(true);\n        localView.init(eglBaseContext, null);\n\n        // create VideoTrack\n        VideoTrack videoTrack = peerConnectionFactory.createVideoTrack(\"100\", videoSource);\n//        // display in localView\n        videoTrack.addSink(localView);\n\n\n        remoteView = findViewById(R.id.remoteView);\n        remoteView.setMirror(false);\n        remoteView.init(eglBaseContext, null);\n\n\n\n        mediaStream = peerConnectionFactory.createLocalMediaStream(\"mediaStream\");\n        mediaStream.addTrack(videoTrack);\n\n        SignalingClient.get().setCallback(this);\n        call();\n    }\n\n\n    private void call() {\n        List<PeerConnection.IceServer> iceServers = new ArrayList<>();\n        iceServers.add(PeerConnection.IceServer.builder(\"stun:stun.l.google.com:19302\").createIceServer());\n        peerConnection = peerConnectionFactory.createPeerConnection(iceServers, new PeerConnectionAdapter(\"localconnection\") {\n            @Override\n            public void onIceCandidate(IceCandidate iceCandidate) {\n                super.onIceCandidate(iceCandidate);\n                SignalingClient.get().sendIceCandidate(iceCandidate);\n            }\n\n            @Override\n            public void onAddStream(MediaStream mediaStream) {\n                super.onAddStream(mediaStream);\n                VideoTrack remoteVideoTrack = mediaStream.videoTracks.get(0);\n                runOnUiThread(() -> {\n                    remoteVideoTrack.addSink(remoteView);\n                });\n            }\n        });\n\n        peerConnection.addStream(mediaStream);\n    }\n\n    private VideoCapturer createCameraCapturer(boolean isFront) {\n        Camera1Enumerator enumerator = new Camera1Enumerator(false);\n        final String[] deviceNames = enumerator.getDeviceNames();\n\n        // First, try to find front facing camera\n        for (String deviceName : deviceNames) {\n            if (isFront ? enumerator.isFrontFacing(deviceName) : enumerator.isBackFacing(deviceName)) {\n                VideoCapturer videoCapturer = enumerator.createCapturer(deviceName, null);\n\n                if (videoCapturer != null) {\n                    return videoCapturer;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    @Override\n    public void onCreateRoom() {\n\n    }\n\n    @Override\n    public void onPeerJoined() {\n\n    }\n\n    @Override\n    public void onSelfJoined() {\n        peerConnection.createOffer(new SdpAdapter(\"local offer sdp\") {\n            @Override\n            public void onCreateSuccess(SessionDescription sessionDescription) {\n                super.onCreateSuccess(sessionDescription);\n                peerConnection.setLocalDescription(new SdpAdapter(\"local set local\"), sessionDescription);\n                SignalingClient.get().sendSessionDescription(sessionDescription);\n            }\n        }, new MediaConstraints());\n    }\n\n    @Override\n    public void onPeerLeave(String msg) {\n\n    }\n\n    @Override\n    public void onOfferReceived(JSONObject data) {\n        runOnUiThread(() -> {\n            peerConnection.setRemoteDescription(new SdpAdapter(\"localSetRemote\"),\n                    new SessionDescription(SessionDescription.Type.OFFER, data.optString(\"sdp\")));\n            peerConnection.createAnswer(new SdpAdapter(\"localAnswerSdp\") {\n                @Override\n                public void onCreateSuccess(SessionDescription sdp) {\n                    super.onCreateSuccess(sdp);\n                    peerConnection.setLocalDescription(new SdpAdapter(\"localSetLocal\"), sdp);\n                    SignalingClient.get().sendSessionDescription(sdp);\n                }\n            }, new MediaConstraints());\n\n        });\n    }\n\n    @Override\n    public void onAnswerReceived(JSONObject data) {\n        peerConnection.setRemoteDescription(new SdpAdapter(\"localSetRemote\"),\n                new SessionDescription(SessionDescription.Type.ANSWER, data.optString(\"sdp\")));\n    }\n\n    @Override\n    public void onIceCandidateReceived(JSONObject data) {\n        peerConnection.addIceCandidate(new IceCandidate(\n                data.optString(\"id\"),\n                data.optInt(\"label\"),\n                data.optString(\"candidate\")\n        ));\n    }\n}\n```\n\nSTUN/TURN\u670d\u52a1\u5668\n--------------------------\nSTUN\u670d\u52a1\u5668\u7528\u4e8e\u5bfb\u627e\u5ba2\u6237\u7aef\u7684\u516c\u7f51IP, \u8ba9\u4e24\u4e2a\u670d\u52a1\u7aef\u901a\u8fc7\u516c\u7f51IP\u76f4\u63a5\u53d1\u9001\u97f3\u89c6\u9891\u6570\u636e, \u8fd9\u4e9b\u6570\u636e\u4e0d\u7ecf\u8fc7STUN\u670d\u52a1\u5668. \u56e0\u6b64STUN\u670d\u52a1\u5668\u7684\u6570\u636e\u6d41\u91cf\u5f88\u5c0f, \u514d\u8d39\u7684\u670d\u52a1\u5668\u5f88\u591a. \u4e0d\u4fdd\u8bc1\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u80fd\u5efa\u7acbWebRTC\u8fde\u63a5.\n\n![STUN.png](https://rome753.github.io/cdn/1896166-c30ba9a7ec1572e6.png)\n\nTURN\u670d\u52a1\u5668\u7528\u4e8e\u76f4\u63a5\u8f6c\u53d1\u97f3\u89c6\u9891\u6570\u636e, \u5f53\u5ba2\u6237\u7aef\u7f51\u7edc\u60c5\u51b5\u7279\u6b8a, \u65e0\u6cd5\u76f8\u4e92\u53d1\u9001\u6570\u636e\u65f6. \u7ecf\u8fc7\u5b83\u7684\u6570\u636e\u91cf\u5f88\u5927, \u57fa\u672c\u6ca1\u6709\u514d\u8d39\u7684. \u53ea\u8981\u5ba2\u6237\u7aef\u80fd\u8bbf\u95ee\u5230TURN\u670d\u52a1\u5668\u5c31\u80fd\u5efa\u7acbWebRTC\u8fde\u63a5.\n![TURN.png](https://rome753.github.io/cdn/1896166-a1750514c260ac30.png)\n\n\u5176\u5b9eSTUN\u4e0eTURN\u7684\u533a\u522b\u5c31\u5728\u4e8e **R-Relay-\u8f6c\u53d1**, \u9700\u8981\u8f6c\u53d1\u97f3\u89c6\u9891\u6570\u636e\u7684\u5c31\u662fTURN\u670d\u52a1\u5668. \u5173\u4e8e\u5b83\u4eec[\u8fd9\u7bc7\u6587\u7ae0](https://www.cnblogs.com/mlgjb/p/8243690.html)\u6709\u8be6\u7ec6\u7684\u4ecb\u7ecd. \n\n> \u8fd9\u91cc\u4f7f\u7528\u7684\u662fGoogle\u7684\u514d\u8d39STUN\u670d\u52a1\u5668: stun:stun.l.google.com:19302, \u521b\u5efaPeerConnection\u65f6\u4f20\u5165\u5c31\u53ef\u4ee5, \u4e0d\u9700\u8981\u989d\u5916\u7684\u914d\u7f6e. \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5df1\u642d\u5efa.\n\n\u901a\u8bdd\n------\n\u5728\u7535\u8111\u4e0a\u542f\u52a8Node.js\u670d\u52a1\u5668, \u628aSignalingClient.java\u4e2d\u7684socket\u5730\u5740\u6539\u6210\u4f60\u7535\u8111\u7684\u5185\u7f51\u5730\u5740. \u5728\u4e24\u4e2a\u5b89\u5353\u624b\u673a\u4e0a\u5b89\u88c5\u5ba2\u6237\u7aef, \u786e\u4fdd\u624b\u673a\u548c\u7535\u8111\u5728\u540c\u4e00\u4e2aWiFi\u7f51\u7edc\u4e0b, \u5148\u540e\u542f\u52a8\u5ba2\u6237\u7aef.\n \u4e0d\u51fa\u610f\u5916\u7684\u8bdd\u5728\u670d\u52a1\u7aef\u63a7\u5236\u53f0\u80fd\u770b\u5230\u5ba2\u6237\u7aef\u8fdb\u5165\u623f\u95f4\u548c\u53d1\u9001\u4fe1\u4ee4\u7684\u65e5\u5fd7, \u968f\u540e\u4e24\u4e2a\u624b\u673a\u4e0a\u80fd\u770b\u5230\u5bf9\u65b9\u7684\u753b\u9762.\n\n[\u672c\u9879\u76eeGitHub\u5730\u5740/step3signaling](https://github.com/rome753/webrtc-android-tutorial)\n[\u672c\u9879\u76eeGitHub\u5730\u5740/step3web](https://github.com/rome753/webrtc-android-tutorial)\n\n[\u4e0b\u4e00\u7bc7: Android WebRTC\u5b8c\u6574\u5165\u95e8\u6559\u7a0b04: \u591a\u4eba\u89c6\u9891](https://www.jianshu.com/p/8c10146afd6c)\n", "mt_excerpt": "", "title": "Android-WebRTC\u5b8c\u6574\u5165\u95e8\u6559\u7a0b03--\u4fe1\u4ee4", "dateCreated": "20220718T17:57:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491455.html", "permalink": "https://www.cnblogs.com/rome753/p/16491455.html", "postid": 16491455, "description": "[\u4e0a\u4e00\u7bc7: Android WebRTC\u5b8c\u6574\u5165\u95e8\u6559\u7a0b01: \u4f7f\u7528\u76f8\u673a](https://www.jianshu.com/p/eb5fd116e6c8)\n\n\u5728\u4e0a\u4e00\u7bc7\u4e2d\u5b8c\u6210\u4e86WebRTC\u6700\u57fa\u672c\u7684\u4f7f\u7528--\u76f8\u673a\u7684\u4f7f\u7528. \u8fd9\u4e00\u7bc7\u5c06\u4ecb\u7ecdWebRTC\u4e2d\u6700\u6838\u5fc3\u7684\u6982\u5ff5PeerConnection\u200a, \u7ed9\u540c\u4e00\u624b\u673a\u4e2d\u7684\u524d\u540e\u6444\u50cf\u5934\u5efa\u7acb\u865a\u62df\u7684\u8fde\u63a5, \u76f8\u4e92\u4f20\u8f93\u753b\u9762.\n\nPeerConnection\u200a\n---------------------\nPeerConnection\u4e5f\u5c31\u662fPeer-to-Peer connection(P2P), \u5c31\u662f\u4e24\u4e2a\"\u4eba\"\u7684\u8fde\u63a5. \u53cc\u65b9\u5206\u522b\u521b\u5efaPeerConnection\u5bf9\u8c61, \u7136\u540e\u5411\u5bf9\u65b9\u53d1\u9001\u81ea\u5df1\u7684\u7f51\u7edc\u72b6\u51b5ICE\u548c\u591a\u5a92\u4f53\u7f16\u7801\u683c\u5f0fSDP(\u56e0\u4e3a\u8fd9\u65f6\u5019\u8fde\u63a5\u8fd8\u6ca1\u5efa\u7acb, \u6240\u4ee5\u53d1\u9001\u5185\u5bb9\u662f\u901a\u8fc7\u670d\u52a1\u5668\u5b8c\u6210\u7684). \u5f53\u53cc\u65b9\u7f51\u7edc\u548c\u7f16\u7801\u683c\u5f0f\u534f\u5546\u597d\u540e, \u8fde\u63a5\u5c31\u5efa\u7acb\u597d\u4e86, \u8fd9\u65f6\u4ecePeerConnection\u4e2d\u80fd\u83b7\u53d6\u5230\u5bf9\u65b9\u7684MediaStream\u6570\u636e\u6d41, \u4e5f\u5c31\u80fd\u64ad\u653e\u5bf9\u65b9\u7684\u97f3\u89c6\u9891\u4e86. \n\nICE\n-----\nInteractive Connectivity Establishment,  \u4ea4\u4e92\u5f0f\u8fde\u63a5\u5efa\u7acb. \u5176\u5b9e\u662f\u4e00\u4e2a\u6574\u5408STUN\u548cTURN\u7684\u6846\u67b6, \u7ed9\u5b83\u63d0\u4f9bSTUN\u548cTURN\u670d\u52a1\u5668\u5730\u5740, \u5b83\u4f1a\u81ea\u52a8\u9009\u62e9\u4f18\u5148\u7ea7\u9ad8\u7684\u8fdb\u884cNAT\u7a7f\u900f.\n\nSDP\n------\nSession Description Protocol: \u4f1a\u8bdd\u63cf\u8ff0\u534f\u8bae. \u53d1\u9001\u65b9\u7684\u53ebOffer, \u63a5\u53d7\u65b9\u7684\u53ebAnswer, \u9664\u4e86\u540d\u5b57\u5916\u6ca1\u6709\u533a\u522b. \u5c31\u662f\u4e00\u4e9b\u6587\u672c\u63cf\u8ff0\u672c\u5730\u7684\u97f3\u89c6\u9891\u7f16\u7801\u548c\u7f51\u7edc\u5730\u5740\u7b49. \n\n\u4e3b\u8981\u6d41\u7a0b\n------------\nA(local)\u548cB(remote)\u4ee3\u8868\u4e24\u4e2a\u4eba, \u521d\u59cb\u5316PeerConnectionFactory\u5e76\u5206\u522b\u521b\u5efaPeerConnection\u200a, \u5e76\u5411PeerConnection\u200a\u6dfb\u52a0\u672c\u5730\u5a92\u4f53\u6d41. \n\n1. A\u521b\u5efaOffer\n2. A\u4fdd\u5b58Offer(set local description)\n3. A\u53d1\u9001Offer\u7ed9B\n4. B\u4fdd\u5b58Offer(set remote description)\n5. B\u521b\u5efaAnswer\n6. B\u4fdd\u5b58Answer(set local description)\n7. B\u53d1\u9001Answer\u7ed9A\n8. A\u4fdd\u5b58Answer(set remote description)\n9. A\u53d1\u9001Ice Candidates\u7ed9B\n10. B\u53d1\u9001Ice Candidates\u7ed9A\n11. A,B\u6536\u5230\u5bf9\u65b9\u7684\u5a92\u4f53\u6d41\u5e76\u64ad\u653e\n![\u5efa\u7acbPeerConnection.jpeg](https://rome753.github.io/cdn/1896166-ba2b87245bdd8b9f.jpg)\n\u5982\u4e0a\u56fe\u6240\u793a, \u603b\u517111\u6b65, \u867d\u7136\u6b65\u9aa4\u4e0d\u5c11, \u4f46\u5176\u5b9e\u5e76\u4e0d\u590d\u6742, \u53cc\u65b9\u57fa\u672c\u662f\u5bf9\u79f0\u7684. \u4e3b\u8981\u4ee3\u7801\u5982\u4e0b.\n\n\u51c6\u5907\u6b65\u9aa4\n------------\n\u4e3b\u8981\u662f\u521d\u59cb\u5316PeerConnectionFactory\u548c\u4f7f\u7528\u76f8\u673a, \u5728\u4e0a\u4e00\u7bc7\u5df2\u4ecb\u7ecd\u8fc7.\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    PeerConnectionFactory peerConnectionFactory;\n    PeerConnection peerConnectionLocal;\n    PeerConnection peerConnectionRemote;\n    SurfaceViewRenderer localView;\n    SurfaceViewRenderer remoteView;\n    MediaStream mediaStreamLocal;\n    MediaStream mediaStreamRemote;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        EglBase.Context eglBaseContext = EglBase.create().getEglBaseContext();\n\n        // create PeerConnectionFactory\n        PeerConnectionFactory.initialize(PeerConnectionFactory.InitializationOptions\n                .builder(this)\n                .createInitializationOptions());\n        PeerConnectionFactory.Options options = new PeerConnectionFactory.Options();\n        DefaultVideoEncoderFactory defaultVideoEncoderFactory =\n                new DefaultVideoEncoderFactory(eglBaseContext, true, true);\n        DefaultVideoDecoderFactory defaultVideoDecoderFactory =\n                new DefaultVideoDecoderFactory(eglBaseContext);\n        peerConnectionFactory = PeerConnectionFactory.builder()\n                .setOptions(options)\n                .setVideoEncoderFactory(defaultVideoEncoderFactory)\n                .setVideoDecoderFactory(defaultVideoDecoderFactory)\n                .createPeerConnectionFactory();\n\n        SurfaceTextureHelper surfaceTextureHelper = SurfaceTextureHelper.create(\"CaptureThread\", eglBaseContext);\n        // create VideoCapturer\n        VideoCapturer videoCapturer = createCameraCapturer(true);\n        VideoSource videoSource = peerConnectionFactory.createVideoSource(videoCapturer.isScreencast());\n        videoCapturer.initialize(surfaceTextureHelper, getApplicationContext(), videoSource.getCapturerObserver());\n        videoCapturer.startCapture(480, 640, 30);\n\n        localView = findViewById(R.id.localView);\n        localView.setMirror(true);\n        localView.init(eglBaseContext, null);\n\n        // create VideoTrack\n        VideoTrack videoTrack = peerConnectionFactory.createVideoTrack(\"100\", videoSource);\n//        // display in localView\n//        videoTrack.addSink(localView);\n\n\n\n\n        SurfaceTextureHelper remoteSurfaceTextureHelper = SurfaceTextureHelper.create(\"RemoteCaptureThread\", eglBaseContext);\n        // create VideoCapturer\n        VideoCapturer remoteVideoCapturer = createCameraCapturer(false);\n        VideoSource remoteVideoSource = peerConnectionFactory.createVideoSource(remoteVideoCapturer.isScreencast());\n        remoteVideoCapturer.initialize(remoteSurfaceTextureHelper, getApplicationContext(), remoteVideoSource.getCapturerObserver());\n        remoteVideoCapturer.startCapture(480, 640, 30);\n\n        remoteView = findViewById(R.id.remoteView);\n        remoteView.setMirror(false);\n        remoteView.init(eglBaseContext, null);\n\n        // create VideoTrack\n        VideoTrack remoteVideoTrack = peerConnectionFactory.createVideoTrack(\"102\", remoteVideoSource);\n//        // display in remoteView\n//        remoteVideoTrack.addSink(remoteView);\n\n\n\n        mediaStreamLocal = peerConnectionFactory.createLocalMediaStream(\"mediaStreamLocal\");\n        mediaStreamLocal.addTrack(videoTrack);\n\n        mediaStreamRemote = peerConnectionFactory.createLocalMediaStream(\"mediaStreamRemote\");\n        mediaStreamRemote.addTrack(remoteVideoTrack);\n\n        call(mediaStreamLocal, mediaStreamRemote);\n    }\n}\n```\n\n\u4f7f\u7528\u76f8\u673a\n------------\n\u5bf9createCameraCapturer()\u65b9\u6cd5\u7565\u4f5c\u4fee\u6539, \u4f20\u5165boolean\u53c2\u6570\u5c31\u80fd\u5206\u522b\u83b7\u53d6\u524d\u540e\u6444\u50cf\u5934.\n```java\n private VideoCapturer createCameraCapturer(boolean isFront) {\n        Camera1Enumerator enumerator = new Camera1Enumerator(false);\n        final String[] deviceNames = enumerator.getDeviceNames();\n\n        // First, try to find front facing camera\n        for (String deviceName : deviceNames) {\n            if (isFront ? enumerator.isFrontFacing(deviceName) : enumerator.isBackFacing(deviceName)) {\n                VideoCapturer videoCapturer = enumerator.createCapturer(deviceName, null);\n\n                if (videoCapturer != null) {\n                    return videoCapturer;\n                }\n            }\n        }\n\n        return null;\n    }\n```\n\n\u62e8\u6253\n------\n\u5efa\u7acb\u8fde\u63a5\u7684\u4e24\u4eba\u80af\u5b9a\u6709\u4e00\u4e2a\u662f\u62e8\u6253\u65b9, \u53e6\u4e00\u4e2a\u662f\u63a5\u53d7\u65b9. \u62e8\u6253\u65b9\u521b\u5efaOffer\u53d1\u7ed9\u63a5\u53d7\u65b9, \u63a5\u6536\u65b9\u6536\u5230\u540e\u56de\u590dAnswer.\n```java\n    private void call(MediaStream localMediaStream, MediaStream remoteMediaStream) {\n        List<PeerConnection.IceServer> iceServers = new ArrayList<>();\n        peerConnectionLocal = peerConnectionFactory.createPeerConnection(iceServers, new PeerConnectionAdapter(\"localconnection\") {\n            @Override\n            public void onIceCandidate(IceCandidate iceCandidate) {\n                super.onIceCandidate(iceCandidate);\n                peerConnectionRemote.addIceCandidate(iceCandidate);\n            }\n\n            @Override\n            public void onAddStream(MediaStream mediaStream) {\n                super.onAddStream(mediaStream);\n                VideoTrack remoteVideoTrack = mediaStream.videoTracks.get(0);\n                runOnUiThread(() -> {\n                    remoteVideoTrack.addSink(localView);\n                });\n            }\n        });\n\n        peerConnectionRemote = peerConnectionFactory.createPeerConnection(iceServers, new PeerConnectionAdapter(\"remoteconnection\") {\n            @Override\n            public void onIceCandidate(IceCandidate iceCandidate) {\n                super.onIceCandidate(iceCandidate);\n                peerConnectionLocal.addIceCandidate(iceCandidate);\n            }\n\n            @Override\n            public void onAddStream(MediaStream mediaStream) {\n                super.onAddStream(mediaStream);\n                VideoTrack localVideoTrack = mediaStream.videoTracks.get(0);\n                runOnUiThread(() -> {\n                    localVideoTrack.addSink(remoteView);\n                });\n            }\n        });\n\n        peerConnectionLocal.addStream(localMediaStream);\n        peerConnectionLocal.createOffer(new SdpAdapter(\"local offer sdp\") {\n            @Override\n            public void onCreateSuccess(SessionDescription sessionDescription) {\n                super.onCreateSuccess(sessionDescription);\n                // todo crashed here\n                peerConnectionLocal.setLocalDescription(new SdpAdapter(\"local set local\"), sessionDescription);\n                peerConnectionRemote.addStream(remoteMediaStream);\n                peerConnectionRemote.setRemoteDescription(new SdpAdapter(\"remote set remote\"), sessionDescription);\n                peerConnectionRemote.createAnswer(new SdpAdapter(\"remote answer sdp\") {\n                    @Override\n                    public void onCreateSuccess(SessionDescription sdp) {\n                        super.onCreateSuccess(sdp);\n                        peerConnectionRemote.setLocalDescription(new SdpAdapter(\"remote set local\"), sdp);\n                        peerConnectionLocal.setRemoteDescription(new SdpAdapter(\"local set remote\"), sdp);\n                    }\n                }, new MediaConstraints());\n            }\n        }, new MediaConstraints());\n    }\n}\n\n```\n> \u6ce8\u610f: \u867d\u7136\u8fd9\u91cc\u6ca1\u6709\u771f\u6b63\u4f7f\u7528\u5230\u7f51\u7edc, \u4f46\u662f\u8981\u6dfb\u52a0\u7f51\u7edc\u6743\u9650\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n\n\u7f51\u4e0a\u5927\u90e8\u5206\u672c\u5730\u56de\u73af(Loopback)\u7684Demo\u90fd\u53ea\u7528\u5230\u4e00\u4e2a\u6444\u50cf\u5934, \u8fd9\u91cc\u4f7f\u7528\u5230\u540c\u4e00\u4e2a\u624b\u673a\u7684\u524d\u540e\u6444\u50cf\u5934, \u628a\u5b83\u4eec\u5f53\u505a\u4e24\u4e2a\u5ba2\u6237\u7aef, \u5efa\u7acb\u6a21\u62df\u8fde\u63a5, \u53d1\u9001\u5a92\u4f53\u6570\u636e. \u8fd9\u8ddf\u5b9e\u9645WebRTC\u5de5\u4f5c\u6d41\u7a0b\u975e\u5e38\u63a5\u8fd1\u4e86, \u53ea\u6709\u4e00\u70b9\u5dee\u522b--\u8fd9\u91cc\u7684\u6570\u636e\u4f20\u8f93\u662f\u5185\u5b58\u5171\u4eab, \u800c\u5b9e\u9645\u662f\u901a\u8fc7\u7f51\u7edc\u53d1\u9001.\n\n\u9644\u5f55\n------\n[\u672c\u9879\u76eeGitHub\u5730\u5740/step2loopback](https://github.com/rome753/webrtc-android-tutorial)\n\n[\u4e0b\u4e00\u7bc7: Android WebRTC\u5b8c\u6574\u5165\u95e8\u6559\u7a0b03: \u4fe1\u4ee4](https://www.jianshu.com/p/505bb98aaea7)\n", "mt_excerpt": "", "title": "Android-WebRTC\u5b8c\u6574\u5165\u95e8\u6559\u7a0b02--\u672c\u5730\u56de\u73af", "dateCreated": "20220718T17:56:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491436.html", "permalink": "https://www.cnblogs.com/rome753/p/16491436.html", "postid": 16491436, "description": "Android\u5f55\u5236\u89c6\u9891\u6709\u591a\u79cd\u65b9\u6cd5\uff1a`MediaRecorder, MediaProjection, MediaMuxer, OpenGL`\u7b49\uff0c\u6bcf\u79cd\u65b9\u6cd5\u90fd\u6709\u5176\u5e94\u7528\u573a\u666f\u3002\n\n\u8fd9\u91cc\u4ecb\u7ecd\u7684\u662f\u7528`MediaCodec + MediaMuxer`\u5f55\u5236\u89c6\u9891\uff0c\u8fd9\u79cd\u65b9\u5f0f\u662f\u5c06\u97f3\u9891\u6d41\u548c\u89c6\u9891\u6d41\u7528`MediaCodec`\u7f16\u7801\uff0c\u7136\u540e\u7528`MediaMuxer`\u6df7\u6d41\u5408\u6210mp4\u89c6\u9891\uff0c \u8fd9\u79cd\u65b9\u5f0f\u7684\u901a\u7528\u6027\u8f83\u597d\uff0c\u5b83\u4e0d\u5173\u5fc3\u6570\u636e\u6765\u6e90\uff0c\u53ea\u8981\u80fd\u83b7\u5f97\u97f3\u89c6\u9891\u6d41\u6570\u636e\uff0c\u5c31\u80fd\u5f55\u5236\u3002\n\n\u97f3\u89c6\u9891\u5f00\u53d1\u81ea\u6709\u5b8c\u6574\u4f53\u7cfb\uff0c\u5176\u4e2d\u7684\u77e5\u8bc6\u70b9\u548c\u6ce8\u610f\u70b9\uff08\u5751\uff09\u4e5f\u5f88\u591a\u3002\u7f51\u4e0a\u7684\u6587\u7ae0\u548c\u5f00\u6e90\u9879\u76ee\u867d\u4e0d\u5c11\uff0c\u6709\u4e9b\u70b9\u5374\u9c9c\u6709\u63d0\u53ca\u3002\u8fd9\u91cc\u5c06\u6211\u5f00\u53d1\u4e2d\u9047\u5230\u7684\u95ee\u9898\u548c\u4e00\u4e9b\u5c0f\u7ed3\u8bb0\u5f55\u4e0b\u6765\uff0c\u5982\u6709\u9519\u8bef\uff0c\u8fd8\u8bf7\u6307\u6559\u3002\n\n## 1. \u6570\u636e\u6e90\n\u89c6\u9891\u6765\u6e90\u9009\u62e9Camera2\uff0c\u7ed9Camera2\u6dfb\u52a0ImageReader\uff0c\u5c31\u80fd\u83b7\u5f97\u5b9e\u65f6\u7684\u56fe\u50cf\u6570\u636e\u3002\u5177\u4f53\u64cd\u4f5c\u53ef\u4ee5\u770b[\u8fd9\u7bc7\u6587\u7ae0](https://www.jianshu.com/p/da10007797b1)\u3002\n> \u7ed9ImageReader\u8bbe\u7f6e\u7684\u8f93\u51fa\u683c\u5f0f\u662f`ImageFormat.YUV_420_888`\uff0c\u8fd9\u79cd\u683c\u5f0f\u662f\u5b98\u65b9\u5efa\u8bae\u901a\u7528\u6027\u6700\u597d\u7684\uff0c\u4f46\u662f\u5b83\u53ea\u80fd\u4fdd\u8bc1\u8f93\u51fa\u662fYUV420\u683c\u5f0f\uff0c\u800cYUV420\u5206\u5f88\u591a\u79cd\uff0c\u5177\u4f53\u683c\u5f0f\u4e0d\u540c\u8bbe\u5907\u662f\u4e0d\u540c\u7684\uff0c\u53ef\u80fd\u662fYUV420P\uff0c\u4e5f\u53ef\u80fd\u662fYUV420SP\uff0c\u540e\u9762\u7f16\u7801\u8fd8\u8981\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u4eceImageReader\u4e2d\u83b7\u53d6byte[]\u6570\u636e\u65b9\u6cd5\u5982\u4e0b\n```java\n    /**\n     * \u4eceImageReader\u4e2d\u83b7\u53d6byte[]\u6570\u636e\n     */\n    public static byte[] getBytesFromImageReader(ImageReader imageReader) {\n        try (Image image = imageReader.acquireNextImage()) {\n            final Image.Plane[] planes = image.getPlanes();\n            ByteBuffer b0 = planes[0].getBuffer();\n            ByteBuffer b1 = planes[1].getBuffer();\n            ByteBuffer b2 = planes[2].getBuffer();\n            int y = b0.remaining(), u = y >> 2, v = u;\n            byte[] bytes = new byte[y + u + v];\n            if(b1.remaining() > u) { // y420sp\n                b0.get(bytes, 0, b0.remaining());\n                b1.get(bytes, y, b1.remaining()); // uv\n            } else { // y420p\n                b0.get(bytes, 0, b0.remaining());\n                b1.get(bytes, y, b1.remaining()); // u\n                b2.get(bytes, y + u, b2.remaining()); // v\n            }\n            return bytes;\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n```\n> \u4eceImageReader\u4e2d\u53d6\u5f97Image\uff0cYUV\u6570\u636e\u5c31\u5728Image\u7684Plane[]\u4e2d\uff0cPlane\u4e5f\u5c31\u662f\u5e73\u9762\u67093\u4e2a\u3002Plane[0]\u662fY\u5e73\u9762\uff0c\u6570\u636e\u91cf\u7b49\u4e8e\u56fe\u50cf\u7684\u50cf\u7d20\u4e2a\u6570\uff0c\u7528plane.getBuffer().remaining()\u65b9\u6cd5\u83b7\u5f97\u3002\nYUV420P\u683c\u5f0f\u4e0bPlane[1]\u662fU\u5e73\u9762\uff0c\u6570\u636e\u91cf\u662fY/4\uff0cPlane[2]\u662fV\u5e73\u9762\uff0c\u6570\u636e\u91cf\u4e5f\u662fY/4\u3002\nYUV420SP\u683c\u5f0f\u4e0bPlane[1]\u548cPlane[2]\u90fd\u662fUV\u5e73\u9762\uff0c\u5b83\u4eec\u6570\u636e\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u662f\u4f4d\u7f6e\u9519\u5f00\u4e86\u4e00\u4f4d\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u7528Plane[1]\u4e2d\u7684\u6570\u636e\u5373\u53ef\uff0cPlane[1]\u7684\u6570\u636e\u91cf**\u53ef\u80fd\u662fY/2\uff0c\u4e5f\u53ef\u80fd\u662fY/2 - 1**\uff0c\u867d\u7136\u5dee\u90a3\u4e00\u4f4d\u6570\u636e\u5728\u663e\u793a\u4e0a\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u4f1a\u5bfc\u81f4\u521b\u5efa\u7684\u6570\u7ec4\u5927\u5c0f\u4e0d\u5bf9\u3002\n\n\u97f3\u9891\u6765\u6e90\u9009\u62e9AudioRecord\uff0c\u914d\u7f6e\u53c2\u6570\uff0c\u542f\u52a8\uff0c\u7136\u540e\u4ece\u5355\u72ec\u7ebf\u7a0b\u4e2d\u7528AudioRecord.read()\u65b9\u6cd5\u4e0d\u65ad\u5730\u5faa\u73af\u8bfb\u53d6\u6570\u636e\u3002\n\n## 2. \u7f16\u7801\u683c\u5f0f\n\u89c6\u9891\u7f16\u7801\u7528MediaCodec\uff0c\u6839\u636e`MIME_TYPE = \"video/avc\"`\u9009\u62e9\u8bbe\u5907\u652f\u6301\u7684\u7f16\u7801\u5668\u548ccolorFormat\n```java\n    private MediaCodecInfo selectSupportCodec(String mimeType) {\n        int numCodecs = MediaCodecList.getCodecCount();\n        for (int i = 0; i < numCodecs; i++) {\n            MediaCodecInfo codecInfo = MediaCodecList.getCodecInfoAt(i);\n            if (!codecInfo.isEncoder()) {\n                continue;\n            }\n            String[] types = codecInfo.getSupportedTypes();\n            for (int j = 0; j < types.length; j++) {\n                if (types[j].equalsIgnoreCase(mimeType)) {\n                    return codecInfo;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * \u6839\u636emime\u7c7b\u578b\u5339\u914d\u7f16\u7801\u5668\u652f\u6301\u7684\u989c\u8272\u683c\u5f0f\n     */\n    private int selectSupportColorFormat(MediaCodecInfo mCodecInfo, String mimeType) {\n        MediaCodecInfo.CodecCapabilities capabilities = mCodecInfo.getCapabilitiesForType(mimeType);\n        HashSet<Integer> colorFormats = new HashSet<>();\n        for(int i : capabilities.colorFormats) colorFormats.add(i);\n        if(colorFormats.contains(MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420SemiPlanar)) return MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420SemiPlanar;\n        if(colorFormats.contains(MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420Planar)) return MediaCodecInfo.CodecCapabilities.COLOR_FormatYUV420Planar;\n        return 0;\n    }\n```\n> colorFormat\u989c\u8272\u683c\u5f0f\u5f88\u91cd\u8981\uff0c\u5b83\u4ee3\u8868\u4e86\u7f16\u7801\u5668\u63a5\u53d7\u7684\u56fe\u50cf\u683c\u5f0f\u3002\u8f93\u5165\u5176\u4ed6\u683c\u5f0f\u7684\u56fe\u50cf\uff0c\u4f1a\u5bfc\u81f4\u7f16\u7801\u5931\u8d25\u6216\u8005\u89c6\u9891\u7684\u56fe\u50cf\u989c\u8272\u9519\u4e71\u3002\n\u76ee\u524d\u6765\u8bf4\uff1a\u5927\u90e8\u5206\u624b\u673a\u90fd\u652f\u6301COLOR_FormatYUV420SemiPlanar\u683c\u5f0f\uff08\u5b9e\u6d4b\u662fNV12\uff09\uff0c\u56e0\u6b64\u9996\u9009\u8fd9\u4e2a\u683c\u5f0f\uff1b\u5c11\u6570\u624b\u673a\uff08\u5982\u7ea2\u7c73Note4\uff0c\u9b45\u65cfMX5\uff09\u4e0d\u652f\u6301COLOR_FormatYUV420SemiPlanar\uff0c\u800c\u652f\u6301COLOR_FormatYUV420Planar\u683c\u5f0f\uff08\u5b9e\u6d4b\u662fI420\uff09\uff1b\u8fd9\u4e24\u79cd\u683c\u5f0f\u57fa\u672c\u80fd\u8986\u76d6\u6240\u6709\u7684\u8bbe\u5907\u4e86\u3002\n\n> \u524d\u9762\u8bf4\u8fc7Camera2\u8bbe\u7f6e`ImageFormat.YUV_420_888`\u540e\u8f93\u51fa\u7684\u56fe\u50cf\u683c\u5f0f\u662fYUV420P\u6216YUV420SP\uff0c\u5b9e\u6d4b\u683c\u5f0f\u662fI420\u548cNV12\uff0c\u5b83\u4eec\u8ddf\u89c6\u9891\u7f16\u7801\u5668\u7684\u652f\u6301\u7684\u683c\u5f0f\u543b\u5408\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d0\u4f9b\u7ed9\u89c6\u9891\u7f16\u7801\u5668\uff0c\u5f53\u7136\u4e00\u822c\u8fd8\u9700\u8981\u65cb\u8f6c\u3002\u5982\u679c\u4f60\u7684\u56fe\u50cf\u4e0d\u662f\u4eceCamera2\u83b7\u53d6\u7684\uff0c\u6216\u8005\u662f\u5176\u4ed6\u683c\u5f0f\uff0c\u5c31\u8981\u5c06\u56fe\u50cf\u8f6c\u6362\u6210\u7f16\u7801\u5668\u652f\u6301\u7684\u683c\u5f0f\u3002\n\uff08\u6839\u636e\u6211\u7684\u6d4b\u8bd5\uff0c\u5982\u679c\u624b\u673a\u652f\u6301COLOR_FormatYUV420SemiPlanar\u7f16\u7801\u683c\u5f0f\uff0c\u90a3\u4e48\u5b83\u7684Camera2\u76f8\u673a\u8f93\u51fa\u7684\u5c31\u662fNV12\u683c\u5f0f\uff1b\u5982\u679c\u624b\u673a\u53ea\u652f\u6301COLOR_FormatYUV420Planar\u7f16\u7801\u683c\u5f0f\uff0c\u90a3\u4e48\u5b83\u7684Camera2\u76f8\u673a\u8f93\u51fa\u7684\u5c31\u662fI420\u683c\u5f0f\u3002\u56e0\u6b64\u6211\u731c\u6d4bCamera2\u8f93\u51fa\u7528\u7684\u5c31\u662f\u76f8\u540c\u7684\u786c\u4ef6\u89c6\u9891\u7f16\u7801\u5668\u3002\uff09\n\n\u97f3\u9891\u7f16\u7801\u4e5f\u7528MediaCodec\uff0c\u6839\u636e`MIME_TYPE = \"audio/mp4a-latm\"`\u9009\u62e9\u7f16\u7801\u5668\u5373\u53ef\uff0c\u57fa\u672c\u6ca1\u6709\u8bbe\u5907\u5dee\u5f02\u95ee\u9898\u3002\n\n## 3. \u5408\u6210\u89c6\u9891\n\u4e3b\u8981\u6b65\u9aa4\n1. \u7528MediaCodec\u5206\u522b\u5f00\u59cb\u7f16\u7801\u56fe\u50cf\u548c\u58f0\u97f3\n2. \u5c06\u7f16\u7801\u65f6\u83b7\u5f97\u7684\u56fe\u50cf\u548c\u58f0\u97f3\u7684MediaFormat\u6dfb\u52a0\u5230MediaMuxer\n3. \u542f\u52a8MediaMuxer\u5c06\u7f16\u7801\u540e\u7684\u56fe\u50cf\u548c\u58f0\u97f3\u5408\u6210mp4\n\n#### 3.1 \u7f16\u7801\n\u7f16\u7801\u5668\u8f93\u5165byte[]\u539f\u59cb\u6570\u636e\uff0c\u7f16\u7801\u540e\u8f93\u51faByteBuffer\u6570\u636e\u3002\n\u7f16\u7801\u6bd4\u8f83\u8017\u65f6\uff0c\u9700\u8981\u5de5\u4f5c\u5728\u5355\u72ec\u7684\u7ebf\u7a0b\u4e2d\u3002\n\u7f16\u7801\u7684\u8f93\u5165\u548c\u8f93\u51fa\u662f\u5f02\u6b65\u7684\uff0c\u4e5f\u5c31\u662f\u8f93\u5165\u6570\u636e\uff0c\u7136\u540e\u7528\u5faa\u73af\u4e0d\u505c\u83b7\u53d6\u8f93\u51fa\u3002\n\u7f16\u7801\u4e00\u6bb5\u65f6\u95f4\u540e\u624d\u80fd\u83b7\u53d6\u5230MediaCodec.INFO_OUTPUT_FORMAT_CHANGED\u4fe1\u606f\uff0c\u8fd9\u4ee3\u8868\u8f93\u51fa\u683c\u5f0f\u786e\u5b9a\u4e86\uff0c\u4e5f\u5c31\u80fd\u5411MediaMuxer\u6dfb\u52a0\u8f68\u9053\u4e86\u3002\n\n\u89c6\u9891\u7f16\u7801\u5668\u8f93\u5165\u548c\u8f93\u51fa\u5982\u4e0b\n```java\n    // \u89c6\u9891\u7f16\u7801\u5668\u8f93\u5165\n    private void feedMediaCodecData(byte[] data, long timeStamp) {\n        int inputBufferIndex = mVideoEncodec.dequeueInputBuffer(TIMES_OUT);\n        if (inputBufferIndex >= 0) {\n            ByteBuffer inputBuffer = mVideoEncodec.getInputBuffer(inputBufferIndex);\n            if (inputBuffer != null) {\n                inputBuffer.clear();\n                inputBuffer.put(data);\n            }\n            Log.e(\"chao\", \"video set pts.......\" + (timeStamp) / 1000 / 1000);\n            mVideoEncodec.queueInputBuffer(inputBufferIndex, 0, data.length, System.nanoTime() / 1000\n                    , MediaCodec.BUFFER_FLAG_KEY_FRAME);\n        }\n    }\n\n    // \u89c6\u9891\u7f16\u7801\u5668\u8f93\u51fa\n                MediaCodec.BufferInfo mBufferInfo = new MediaCodec.BufferInfo();\n                int outputBufferIndex;\n                do {\n                    outputBufferIndex = mVideoEncodec.dequeueOutputBuffer(mBufferInfo, TIMES_OUT);\n                    if (outputBufferIndex == MediaCodec.INFO_TRY_AGAIN_LATER) {\n//                        Log.i(TAG, \"INFO_TRY_AGAIN_LATER\");\n                    } else if (outputBufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n                        synchronized (H264EncodeConsumer.this) {\n                            newFormat = mVideoEncodec.getOutputFormat();\n                            if (mMuxerRef != null) {\n                                MediaMuxerUtil muxer = mMuxerRef.get();\n                                if (muxer != null) {\n                                    muxer.addTrack(newFormat, true);\n                                }\n                            }\n                        }\n\n                        Log.i(TAG, \"\u7f16\u7801\u5668\u8f93\u51fa\u7f13\u5b58\u533a\u683c\u5f0f\u6539\u53d8\uff0c\u6dfb\u52a0\u89c6\u9891\u8f68\u9053\u5230\u6df7\u5408\u5668\");\n                    } else {\n                        ByteBuffer outputBuffer = mVideoEncodec.getOutputBuffer(outputBufferIndex);\n                        int type = outputBuffer.get(4) & 0x1F;\n\n                        Log.d(TAG, \"------\u8fd8\u6709\u6570\u636e---->\" + type);\n                        if (type == 7 || type == 8) {\n\n                            Log.e(TAG, \"------PPS\u3001SPS\u5e27(\u975e\u56fe\u50cf\u6570\u636e)\uff0c\u5ffd\u7565-------\");\n                            mBufferInfo.size = 0;\n                        } else if (type == 5) {\n                            if (mMuxerRef != null) {\n                                MediaMuxerUtil muxer = mMuxerRef.get();\n                                if (muxer != null) {\n                                    Log.i(TAG, \"------\u7f16\u7801\u6df7\u5408  \u89c6\u9891\u5173\u952e\u5e27\u6570\u636e-----\" + mBufferInfo.presentationTimeUs / 1000);\n                                    muxer.pumpStream(outputBuffer, mBufferInfo, true);\n                                }\n                                isAddKeyFrame = true;\n                            }\n                        } else {\n                            if (isAddKeyFrame) {\n                                if (isAddKeyFrame && mMuxerRef != null) {\n                                    MediaMuxerUtil muxer = mMuxerRef.get();\n                                    if (muxer != null) {\n                                        Log.i(TAG, \"------\u7f16\u7801\u6df7\u5408  \u89c6\u9891\u666e\u901a\u5e27\u6570\u636e-----\" + mBufferInfo.presentationTimeUs / 1000);\n                                        muxer.pumpStream(outputBuffer, mBufferInfo, true);\n                                    }\n                                }\n                            }\n                        }\n                        mVideoEncodec.releaseOutputBuffer(outputBufferIndex, false);\n                    }\n                } while (outputBufferIndex >= 0);\n```\n\n\u97f3\u9891\u7f16\u7801\u5668\u5de5\u4f5c\u662f\u7c7b\u4f3c\u7684\uff0c\u7531\u4e8e\u6211\u7528\u7684AudioRecord\u83b7\u53d6\u58f0\u97f3\u6570\u636e\uff0c\u7f16\u7801\u65f6\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\n> AudioRecord\u83b7\u53d6\u97f3\u9891\u6570\u636e\u662f\u7528\u6b7b\u5faa\u73af\u4e0d\u65ad\u83b7\u53d6\u7684\uff0c\u8fd9\u6837\u83b7\u53d6\u58f0\u97f3\u7684\u901f\u5ea6\u592a\u5feb\uff0c\u7f16\u7801\u53c8\u662f\u8017\u65f6\u7684\uff0c\u5c31\u4f1a\u9020\u6210\u7f16\u7801\u901f\u5ea6\u8d76\u4e0d\u4e0a\u58f0\u97f3\u83b7\u53d6\u901f\u5ea6\uff0c\u4e5f\u5c31\u662f\u751f\u4ea7\u901f\u5ea6\u8fdc\u5927\u4e8e\u6d88\u8d39\u901f\u5ea6\uff0c\u5bfc\u81f4\u5927\u90e8\u5206\u6570\u636e\u90fd\u5904\u7406\u4e0d\u5b8c\uff0c\u89c6\u9891\u4e2d\u58f0\u97f3\u51fa\u95ee\u9898\u3002\n\u97f3\u9891\u7f16\u7801\u5668\u80fd\u8bbe\u7f6eMediaFormat.KEY_MAX_INPUT_SIZE\uff0c\u4e5f\u5c31\u662f\u8f93\u5165\u6570\u636e\u5305\u7684\u5927\u5c0f\u3002\u6211\u91c7\u53d6\u7684\u65b9\u6cd5\u662f\u7ed9\u5b83\u8bbe\u7f6e\u4e00\u4e2a\u8f83\u5927\u7684\u503c\uff0c\u83b7\u53d6\u5230\u58f0\u97f3\u6570\u636e\u540e\u5148\u7f13\u5b58\u8d77\u6765\uff0c\u62fc\u63a5\u6210\u8f83\u5927\u7684\u6570\u636e\u5305\u540e\u518d\u63d0\u4f9b\u7ed9\u7f16\u7801\u5668\uff0c\u8fd9\u6837\u5c31\u80fd\u5904\u7406\u8fc7\u6765\u4e86\u3002\n\n#### 3.2 \u5408\u6210\n\u89c6\u9891\u5408\u6210\u4f7f\u7528MediaMuxer\u5408\u6210\u5668\uff0c\u7528addTrack()\u65b9\u6cd5\u6dfb\u52a0\u89c6\u9891\u8f68\u9053\u548c\u58f0\u97f3\u8f68\u9053\u540e\u624d\u80fd\u542f\u52a8\uff0c\u542f\u52a8\u540e\u7528writeSampleData()\u65b9\u6cd5\u8f93\u5165\u6570\u636e\u540e\uff0c\u76f4\u63a5\u8f93\u51fa\u5230\u6307\u5b9a\u7684mp4\u6587\u4ef6\u4e2d\u3002\n\n#### \u5b8c\u6574\u4ee3\u7801\n[https://github.com/rome753/android-encode-mp4](https://github.com/rome753/android-encode-mp4)\n", "mt_excerpt": "", "title": "Android\u97f3\u89c6\u9891\u7f16\u7801\u5f55\u5236mp4", "dateCreated": "20220718T17:54:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491432.html", "permalink": "https://www.cnblogs.com/rome753/p/16491432.html", "postid": 16491432, "description": "[\u4e0a\u4e00\u7bc7: Android WebRTC\u5b8c\u6574\u5165\u95e8\u6559\u7a0b03: \u4fe1\u4ee4](https://www.jianshu.com/p/505bb98aaea7)\n\n\u591a\u4eba\u89c6\u9891\u6709\u4e09\u79cd\u7406\u8bba\u65b9\u6848, \u5982\u4e0b\u56fe\u6240\u793a, \u4ece\u5de6\u5230\u53f3\u5206\u522b\u662fMesh,SFU,MCU.\n![multi-peers.png](https://rome753.github.io/cdn/1896166-073c3b7a231b876c.png)\n\n**Mesh** \u7f51\u683c, \u6bcf\u4e2a\u4eba\u90fd\u8ddf\u5176\u4ed6\u4eba\u5355\u72ec\u5efa\u7acb\u8fde\u63a5. 4\u4e2a\u4eba\u7684\u60c5\u51b5\u4e0b, \u6bcf\u4e2a\u4eba\u5efa\u7acb3\u4e2a\u8fde\u63a5, \u4e5f\u5c31\u662f3\u4e2a\u4e0a\u4f20\u6d41\u548c3\u4e2a\u4e0b\u8f7d\u6d41. \u6b64\u65b9\u6848\u5bf9\u5ba2\u6237\u7aef\u7f51\u7edc\u548c\u8ba1\u7b97\u80fd\u529b\u8981\u6c42\u6700\u9ad8, \u5bf9\u670d\u52a1\u7aef\u6ca1\u6709\u7279\u522b\u8981\u6c42.\n\n**SFU**(Selective Forwarding Unit) \u53ef\u9009\u62e9\u8f6c\u53d1\u5355\u5143, \u6709\u4e00\u4e2a\u4e2d\u5fc3\u5355\u5143, \u8d1f\u8d23\u8f6c\u53d1\u6d41. \u6bcf\u4e2a\u4eba\u53ea\u8ddf\u4e2d\u5fc3\u5355\u5143\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5, \u4e0a\u4f20\u81ea\u5df1\u7684\u6d41, \u5e76\u4e0b\u8f7d\u522b\u4eba\u7684\u6d41. 4\u4e2a\u4eba\u7684\u60c5\u51b5\u4e0b, \u6bcf\u4e2a\u4eba\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5, \u5305\u62ec1\u4e2a\u4e0a\u4f20\u6d41\u548c3\u4e2a\u4e0b\u8f7d\u6d41. \u6b64\u65b9\u6848\u5bf9\u5ba2\u6237\u7aef\u8981\u6c42\u8f83\u9ad8, \u5bf9\u670d\u52a1\u7aef\u8981\u6c42\u8f83\u9ad8.\n\n**MCU**(Multipoint Control Unit) \u591a\u7aef\u63a7\u5236\u5355\u5143, \u6709\u4e00\u4e2a\u4e2d\u5fc3\u5355\u5143, \u8d1f\u8d23\u6df7\u6d41\u5904\u7406\u548c\u8f6c\u53d1\u6d41. \u6bcf\u4e2a\u4eba\u53ea\u8ddf\u4e2d\u5fc3\u5355\u5143\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5, \u4e0a\u4f20\u81ea\u5df1\u7684\u6d41, \u5e76\u4e0b\u8f7d\u6df7\u6d41. 4\u4e2a\u4eba\u7684\u60c5\u51b5\u4e0b, \u6bcf\u4e2a\u4eba\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5, \u5305\u62ec1\u4e2a\u4e0a\u4f20\u6d41\u548c1\u4e2a\u4e0b\u8f7d\u6d41. \u6b64\u65b9\u6848\u5bf9\u5ba2\u6237\u7aef\u6ca1\u6709\u7279\u522b\u8981\u6c42, \u5bf9\u670d\u52a1\u7aef\u8981\u6c42\u6700\u9ad8.\n\nMesh\u5b9e\u73b0\n-------------\n\u5148\u4ece\u7406\u8bba\u4e0a\u5206\u6790\u4e00\u4e0b, \u5ba2\u6237\u7aefA\u4e0eB\u4e4b\u95f4\u5efa\u7acb\u8fde\u63a5\u5b8c\u5168\u662f\u901a\u8fc7PeerConnection\u5bf9\u8c61, \u90a3\u4e48\u53ea\u8981\u5ba2\u6237\u7aefA\u6709\u591a\u4e2aPeerConnection\u5bf9\u8c61, \u5b83\u5c31\u53ef\u4ee5\u540c\u65f6\u8ddfB,C,D...\u8fde\u63a5.\n\n\u867d\u7136PeerConnection\u6709\u591a\u4e2a, \u4f46\u662f\u5ba2\u6237\u7aefA\u8ddf\u4fe1\u4ee4\u670d\u52a1\u5668\u4ecd\u7136\u662f\u4e00\u4e2asocket\u8fde\u63a5, \u8fd9\u6837A\u5411\u670d\u52a1\u5668\u53d1\u9001\u4fe1\u4ee4\u65f6\u5c31\u8981\u6307\u5b9a\u53d1\u9001\u7ed9\u8c01, \u6536\u5230\u4fe1\u4ee4\u65f6\u8981\u5224\u65ad\u6765\u81ea\u8c01, \u670d\u52a1\u7aef\u6536\u5230\u4fe1\u4ee4\u65f6\u8981\u5224\u65ad\u53d1\u7ed9\u8c01. \u8fd9\u5c31\u9700\u8981\u5728\u6240\u6709\u4fe1\u4ee4\u4e2d\u6dfb\u52a0\u4e24\u4e2a\u5b57\u6bb5 **from** \u548c **to**, \u4ee3\u8868\u4fe1\u4ee4\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9. \u6bcf\u4e2asocket\u8fde\u63a5\u90fd\u6709\u552f\u4e00socketId, \u53ef\u4ee5\u7528socketId\u6765\u6807\u8bc6\u4e00\u4e2a\u5ba2\u6237\u7aef. \u6bcf\u4e2a\u5ba2\u6237\u7aef\u7528\u4e00\u4e2aHashMap<String, PeerConnection>(key\u662fsocketId)\u6765\u4fdd\u5b58\u81ea\u5df1\u7684\u8fde\u63a5.\n\n\u62e8\u53f7\u65b9\u6848: \u5ba2\u6237\u7aefA\u52a0\u5165\u623f\u95f4, \u5982\u679c\u623f\u95f4\u5185\u8fd8\u6709\u5176\u4ed6\u5ba2\u6237\u7aefB\u548cC. \u670d\u52a1\u7aef\u5411B\u548cC\u53d1\u9001A\u7684socketId, B\u548cC\u6536\u5230\u540e\u5404\u81ea\u7ed9A\u53d1\u9001Offer\u5efa\u7acb\u8fde\u63a5, A\u5206\u522b\u56de\u590dAnswer\u88ab\u52a8\u5efa\u7acb\u591a\u4e2a\u8fde\u63a5. \u8fd9\u6837\u4fdd\u8bc1\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684\u903b\u8f91\u662f\u4e00\u6837\u7684, **\u5982\u679c\u5b83\u65b0\u52a0\u5165\u623f\u95f4, \u90a3\u4e48\u53ea\u9700\u8981\u7b49\u5f85\u5176\u4ed6\u4eba\u7684Offer; \u5982\u679c\u5b83\u5df2\u5728\u623f\u95f4\u4e2d, \u90a3\u4e48\u7b49\u5f85\u522b\u4eba\u52a0\u5165\u65f6\u5411\u522b\u4eba\u53d1\u9001Offer**.\n\n\u4fe1\u4ee4\u670d\u52a1\u7aef\n--------------\n\u5728\u4e0a\u4e00\u7bc7\u57fa\u7840\u4e0a\u505a\u5982\u4e0b\u4fee\u6539,\n1. \u8f6c\u53d1message\u65f6\u6839\u636e\u5176\u4e2d\u7684**to**, \u6765\u9009\u62e9\u53d1\u9001\u76ee\u6807\n2. \u67d0\u4eba\u52a0\u5165\u623f\u95f4\u65f6, \u5411\u5176\u4ed6\u4eba\u53d1\u9001\u6b64\u4eba\u7684socketId\n3. \u53bb\u6389\u623f\u95f4\u5185\u6700\u591a\u4e24\u4e2a\u4eba\u7684\u9650\u5236\n\n```java\n  socket.on('message', function(message) {\n    // for a real app, would be room-only (not broadcast)\n    // socket.broadcast.emit('message', message);\n\n    var to = message['to'];\n    log('from:' + socket.id + \" to:\" + to, message);\n    io.sockets.sockets[to].emit('message', message);\n  });\n\n  socket.on('create or join', function(room) {\n    log('Received request to create or join room ' + room);\n\n    var clientsInRoom = io.sockets.adapter.rooms[room];\n    var numClients = clientsInRoom ? Object.keys(clientsInRoom.sockets).length : 0;\n    log('Room ' + room + ' now has ' + numClients + ' client(s)');\n\n    if (numClients === 0) {\n      socket.join(room);\n      log('Client ID ' + socket.id + ' created room ' + room);\n      socket.emit('created', room, socket.id);\n\n    } else {\n      log('Client ID ' + socket.id + ' joined room ' + room);\n      io.sockets.in(room).emit('join', room, socket.id);\n      socket.join(room);\n      socket.emit('joined', room, socket.id);\n      io.sockets.in(room).emit('ready');\n    }\n  });\n```\n\nMainActivity.java\n\u5728\u4e0a\u4e00\u7bc7\u7684\u57fa\u7840\u4e0a, \u6dfb\u52a0`HashMap<String, PeerConnection> peerConnectionMap`(key\u662fsocketId)\u7ba1\u7406\u6240\u6709\u7684PeerConnection\u8fde\u63a5, \u6536\u5230\u4fe1\u4ee4\u65f6\u5224\u65ad\u6765\u6e90\u7684socketId, \u53d1\u9001\u65f6\u52a0\u4e0a\u81ea\u5df1\u548c\u5bf9\u65b9\u7684socketId.\n```java\npublic class MainActivity extends AppCompatActivity implements SignalingClient.Callback {\n\n    EglBase.Context eglBaseContext;\n    PeerConnectionFactory peerConnectionFactory;\n    SurfaceViewRenderer localView;\n    MediaStream mediaStream;\n    List<PeerConnection.IceServer> iceServers;\n\n    HashMap<String, PeerConnection> peerConnectionMap;\n    SurfaceViewRenderer[] remoteViews;\n    int remoteViewsIndex = 0;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        peerConnectionMap = new HashMap<>();\n        iceServers = new ArrayList<>();\n        iceServers.add(PeerConnection.IceServer.builder(\"stun:stun.l.google.com:19302\").createIceServer());\n\n        eglBaseContext = EglBase.create().getEglBaseContext();\n\n        // create PeerConnectionFactory\n        PeerConnectionFactory.initialize(PeerConnectionFactory.InitializationOptions\n                .builder(this)\n                .createInitializationOptions());\n        PeerConnectionFactory.Options options = new PeerConnectionFactory.Options();\n        DefaultVideoEncoderFactory defaultVideoEncoderFactory =\n                new DefaultVideoEncoderFactory(eglBaseContext, true, true);\n        DefaultVideoDecoderFactory defaultVideoDecoderFactory =\n                new DefaultVideoDecoderFactory(eglBaseContext);\n        peerConnectionFactory = PeerConnectionFactory.builder()\n                .setOptions(options)\n                .setVideoEncoderFactory(defaultVideoEncoderFactory)\n                .setVideoDecoderFactory(defaultVideoDecoderFactory)\n                .createPeerConnectionFactory();\n\n        SurfaceTextureHelper surfaceTextureHelper = SurfaceTextureHelper.create(\"CaptureThread\", eglBaseContext);\n        // create VideoCapturer\n        VideoCapturer videoCapturer = createCameraCapturer(true);\n        VideoSource videoSource = peerConnectionFactory.createVideoSource(videoCapturer.isScreencast());\n        videoCapturer.initialize(surfaceTextureHelper, getApplicationContext(), videoSource.getCapturerObserver());\n        videoCapturer.startCapture(480, 640, 30);\n\n        localView = findViewById(R.id.localView);\n        localView.setMirror(true);\n        localView.init(eglBaseContext, null);\n\n        // create VideoTrack\n        VideoTrack videoTrack = peerConnectionFactory.createVideoTrack(\"100\", videoSource);\n//        // display in localView\n        videoTrack.addSink(localView);\n\n\n\n        remoteViews = new SurfaceViewRenderer[]{\n                findViewById(R.id.remoteView),\n                findViewById(R.id.remoteView2),\n                findViewById(R.id.remoteView3),\n        };\n        for(SurfaceViewRenderer remoteView : remoteViews) {\n            remoteView.setMirror(false);\n            remoteView.init(eglBaseContext, null);\n        }\n\n\n        mediaStream = peerConnectionFactory.createLocalMediaStream(\"mediaStream\");\n        mediaStream.addTrack(videoTrack);\n\n        SignalingClient.get().init(this);\n    }\n\n\n    private synchronized PeerConnection getOrCreatePeerConnection(String socketId) {\n        PeerConnection peerConnection = peerConnectionMap.get(socketId);\n        if(peerConnection != null) {\n            return peerConnection;\n        }\n        peerConnection = peerConnectionFactory.createPeerConnection(iceServers, new PeerConnectionAdapter(\"PC:\" + socketId) {\n            @Override\n            public void onIceCandidate(IceCandidate iceCandidate) {\n                super.onIceCandidate(iceCandidate);\n                SignalingClient.get().sendIceCandidate(iceCandidate, socketId);\n            }\n\n            @Override\n            public void onAddStream(MediaStream mediaStream) {\n                super.onAddStream(mediaStream);\n                VideoTrack remoteVideoTrack = mediaStream.videoTracks.get(0);\n                runOnUiThread(() -> {\n                    remoteVideoTrack.addSink(remoteViews[remoteViewsIndex++]);\n                });\n            }\n        });\n        peerConnection.addStream(mediaStream);\n        peerConnectionMap.put(socketId, peerConnection);\n        return peerConnection;\n    }\n\n    @Override\n    public void onCreateRoom() {\n\n    }\n\n    @Override\n    public void onPeerJoined(String socketId) {\n        PeerConnection peerConnection = getOrCreatePeerConnection(socketId);\n        peerConnection.createOffer(new SdpAdapter(\"createOfferSdp:\" + socketId) {\n            @Override\n            public void onCreateSuccess(SessionDescription sessionDescription) {\n                super.onCreateSuccess(sessionDescription);\n                peerConnection.setLocalDescription(new SdpAdapter(\"setLocalSdp:\" + socketId), sessionDescription);\n                SignalingClient.get().sendSessionDescription(sessionDescription, socketId);\n            }\n        }, new MediaConstraints());\n    }\n\n    @Override\n    public void onSelfJoined() {\n\n    }\n\n    @Override\n    public void onPeerLeave(String msg) {\n\n    }\n\n    @Override\n    public void onOfferReceived(JSONObject data) {\n        runOnUiThread(() -> {\n            final String socketId = data.optString(\"from\");\n            PeerConnection peerConnection = getOrCreatePeerConnection(socketId);\n            peerConnection.setRemoteDescription(new SdpAdapter(\"setRemoteSdp:\" + socketId),\n                    new SessionDescription(SessionDescription.Type.OFFER, data.optString(\"sdp\")));\n            peerConnection.createAnswer(new SdpAdapter(\"localAnswerSdp\") {\n                @Override\n                public void onCreateSuccess(SessionDescription sdp) {\n                    super.onCreateSuccess(sdp);\n                    peerConnectionMap.get(socketId).setLocalDescription(new SdpAdapter(\"setLocalSdp:\" + socketId), sdp);\n                    SignalingClient.get().sendSessionDescription(sdp, socketId);\n                }\n            }, new MediaConstraints());\n\n        });\n    }\n\n    @Override\n    public void onAnswerReceived(JSONObject data) {\n        String socketId = data.optString(\"from\");\n        PeerConnection peerConnection = getOrCreatePeerConnection(socketId);\n        peerConnection.setRemoteDescription(new SdpAdapter(\"setRemoteSdp:\" + socketId),\n                new SessionDescription(SessionDescription.Type.ANSWER, data.optString(\"sdp\")));\n    }\n\n    @Override\n    public void onIceCandidateReceived(JSONObject data) {\n        String socketId = data.optString(\"from\");\n        PeerConnection peerConnection = getOrCreatePeerConnection(socketId);\n        peerConnection.addIceCandidate(new IceCandidate(\n                data.optString(\"id\"),\n                data.optInt(\"label\"),\n                data.optString(\"candidate\")\n        ));\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        SignalingClient.get().destroy();\n    }\n\n    private VideoCapturer createCameraCapturer(boolean isFront) {\n        Camera1Enumerator enumerator = new Camera1Enumerator(false);\n        final String[] deviceNames = enumerator.getDeviceNames();\n\n        // First, try to find front facing camera\n        for (String deviceName : deviceNames) {\n            if (isFront ? enumerator.isFrontFacing(deviceName) : enumerator.isBackFacing(deviceName)) {\n                VideoCapturer videoCapturer = enumerator.createCapturer(deviceName, null);\n\n                if (videoCapturer != null) {\n                    return videoCapturer;\n                }\n            }\n        }\n\n        return null;\n    }\n}\n```\n\n\u591a\u4eba\u89c6\u9891\n------------\n\u542f\u52a8node.js\u670d\u52a1\u5668, \u5728\u591a\u4e2a\u5b89\u5353\u624b\u673a\u4e0a\u5b89\u88c5\u5ba2\u6237\u7aef, \u5148\u540e\u542f\u52a8, \u968f\u540e\u5c31\u80fd\u5728\u4e00\u4e2a\u5ba2\u6237\u7aef\u4e0a\u770b\u5230\u5176\u4ed6\u6240\u6709\u4eba\u7684\u753b\u9762. (\u8fd9\u91cc\u5e03\u5c40\u6587\u4ef6\u53ea\u653e\u4e864\u4e2aSurfaceViewRenderer, \u56e0\u6b64\u652f\u63012,3,4\u4e2a\u624b\u673a\u540c\u65f6\u8fde\u63a5).\n\n![\u8fde\u63a54\u4e2a\u624b\u673a](https://rome753.github.io/cdn/1896166-852dd34dd76842cb.png)\n\n\n[\u672c\u9879\u76eeGitHub\u5730\u5740/step4multipeers](https://github.com/rome753/webrtc-android-tutorial)\n[\u672c\u9879\u76eeGitHub\u5730\u5740/step4web](https://github.com/rome753/webrtc-android-tutorial)\n", "mt_excerpt": "", "title": "Android-WebRTC\u5b8c\u6574\u5165\u95e8\u6559\u7a0b04--\u591a\u4eba\u89c6\u9891", "dateCreated": "20220718T17:53:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491434.html", "permalink": "https://www.cnblogs.com/rome753/p/16491434.html", "postid": 16491434, "description": "\u8bcd\u4e91(WordCloud)\u662f\u5206\u6790\u6570\u636e\u65f6\u4e00\u9879\u6709\u8da3\u7684\u5c55\u793a\u65b9\u5f0f, \u5b83\u5c06\u6570\u636e\u4e2d\u7684\u5173\u952e\u8bcd\u6309\u6743\u91cd\u8bbe\u7f6e\u4e0d\u540c\u7684\u5927\u5c0f, \u653e\u7f6e\u6210\u4e00\u5b9a\u7684\u5f62\u72b6(\u6bd4\u5982\u5706\u5f62). \u5b83\u5305\u62ec\u5173\u952e\u8bcd\u7684\u7edf\u8ba1\u63d0\u53d6\u548c\u653e\u7f6e, \u8fd9\u91cc\u5728\u5b89\u5353\u7aef\u5b9e\u73b0\u4e00\u4e2a\u653e\u7f6e\u8bcd\u4e91\u7684View.\n\nGoogle\u4e00\u4e0b`word cloud algorithm`\u8bcd\u4e91\u7b97\u6cd5, \u8fd9\u91cc\u6709\u4ecb\u7ecd\nhttps://stackoverflow.com/questions/342687/algorithm-to-implement-a-word-cloud-like-wordle\n\u4e3b\u8981\u601d\u60f3\u662f:\n1. \u5148\u653e\u6743\u91cd\u5927\u7684\u8bcd\n2. \u653e\u597d\u540e\u5c31\u4e0d\u52a8\n3. \u653e\u7f6e\u65f6\u5982\u679c\u8ddf\u5df2\u653e\u597d\u7684\u8bcd\u91cd\u53e0\u4e86, \u5c31\u6309\u7167\u87ba\u65cb\u7ebf\u5411\u5916\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n\n\u7b80\u5355\u5b9e\u73b0\n------------\n\u4f7f\u7528\u81ea\u5b9a\u4e49ViewGroup\u5b9e\u73b0, \u6bcf\u4e2a\u5173\u952e\u8bcd\u7528\u4e00\u4e2aTextView\u8868\u793a, \u653e\u7f6e\u5230ViewGroup\u4e2d, \u8fd9\u6837\u7684\u597d\u5904\u662f\u65b9\u4fbf\u5904\u7406\u5355\u4e2a\u8bcd\u7684\u6837\u5f0f\u548c\u4e8b\u4ef6. \u4e3b\u8981\u5c31\u662f\u91cd\u5199`onLayout()`\u65b9\u6cd5\n```java\n@Override\n    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n        int n = getChildCount();\n        for(int i = 0; i < n; i++) {\n            View v = getChildAt(i);\n            if(placed.contains(v)) {\n                continue;\n            }\n            int w = v.getMeasuredWidth();\n            int h = v.getMeasuredHeight();\n\n            int pivotX = getWidth() / 3 + random.nextInt(getWidth() / 3);\n            int pivotY = getHeight() / 3 + random.nextInt(getHeight() / 3);\n\n            List<Point> spiral = generateSpiral();\n            for(Point p : spiral) {\n                pivotX += p.x;\n                pivotY += p.y;\n\n                Log.d(\"chao\", \"place \" + pivotX + \",\" + pivotY);\n                Rect r1 = getVisualRect(pivotX, pivotY, w, h, v.getRotation());\n                boolean isOverlap = false;\n                for(View pv : placed) {\n                    Rect r2 = getVisualRect(pv);\n                    if(isOverlap(r1, r2)) {\n                        isOverlap = true;\n                        break;\n                    }\n                }\n                if(isOverlap) {\n\n                } else {\n                    Log.d(\"chao\", \"placed\");\n                    Rect r = getRect(pivotX, pivotY, w, h);\n                    v.layout(r.left, r.top, r.right, r.bottom);\n                    break;\n                }\n            }\n            placed.add(v);\n        }\n    }\n```\n\n\u4e3a\u4e86\u540c\u65f6\u6709\u6c34\u5e73\u6446\u653e\u548c\u5782\u76f4\u6446\u653e, \u6dfb\u52a0TextView\u65f6\u968f\u673a\u7ed990\u5ea6\u6216270\u5ea6\u7684\u65cb\u8f6c. \u6ce8\u610f\u867d\u7136TextView\u65cb\u8f6c\u4e86, \u4f46\u662f**\u5b83\u7684\u4f4d\u7f6e\u5c5e\u6027\u8fd8\u662f\u65cb\u8f6c\u524d\u7684**, \u56e0\u6b64\u5728\u68c0\u6d4b\u91cd\u53e0\u524d\u8981\u8f6c\u6362\u6210\u65cb\u8f6c\u540e\u7684.\n```java\n    float[] rotates = {\n            0f,90f,270f\n    };\n\n    public void addTextView(String word, int weight) {\n        TextView tv = new TextView(getContext());\n        tv.setText(word);\n        tv.setTextSize(weight);\n        tv.setRotation(rotates[random.nextInt(rotates.length)]);\n        tv.setOnClickListener(this);\n        addView(tv, params);\n    }\n```\n\n\n\u68c0\u6d4b\u4e24\u4e2a\u77e9\u5f62\u662f\u5426\u91cd\u53e0\u7684\u7b97\u6cd5\n```java\n    public static boolean isOverlap(Rect r1, Rect r2) {\n        return r1.right >= r2.left && r2.right >= r1.left\n                && r1.bottom >= r2.top && r2.bottom >= r1.top;\n    }\n```\n\n![Screenshot_20190215-174230.png](https://rome753.github.io/cdn/1896166-fce894462347a429.png)\n\n\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86, \u770b\u4e00\u4e0b\u6548\u679c\u4e0d\u662f\u5f88\u597d, \u8fd9\u662f\u56e0\u4e3a\u7528\u7684\u662f\"\u76f4\u89d2\u87ba\u65cb\u7ebf\u7b97\u6cd5\", \u5373\u6309\u7167\u5de6\u4e0a\u53f3\u4e0b\u7684\u987a\u5e8f\u79fb\u52a8\u5750\u6807, \u8ddd\u79bb\u9010\u6e10\u589e\u5927. \u8981\u5b9e\u73b0\u653e\u7f6e\u6210\u5706\u5f62\u7684\u6548\u679c, \u9700\u8981\u52a0\u5165\u771f\u6b63\u7684\u87ba\u65cb\u7ebf\u7b97\u6cd5.\n\n\u4e00\u822c\u6570\u5b66\u4e2d\u6ca1\u8bb2\u8fc7\u87ba\u65cb\u7ebf, \u7f51\u4e0a\u627e\u4e00\u4e0b, \u5199\u4e00\u4e2a\u751f\u6210\u87ba\u65cb\u7ebf\u70b9\u7684\u7b97\u6cd5, \u7528\u81ea\u5b9a\u4e49View\u9a8c\u8bc1\n```java\npublic class SpiralView extends View {\n\n    Paint paint;\n    List<Point> points;\n\n    public SpiralView(Context context) {\n        this(context, null);\n    }\n\n    public SpiralView(Context context, @Nullable AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public SpiralView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        paint = new Paint();\n        paint.setColor(Color.RED);\n        paint.setStyle(Paint.Style.FILL);\n\n        points = generateSpiral();\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        int cx = getWidth() / 2;\n        int cy = getHeight() / 2;\n        for(Point p : points) {\n            canvas.drawCircle(cx + p.x, cy + p.y, 5, paint);\n        }\n    }\n\n    private List<Point> generateSpiral() {\n        List<Point> res = new ArrayList<>();\n        int A = 10;\n        int w = 1;\n        double sita = Math.PI;\n        for(double t = 0; t < 10 * Math.PI; t+=0.1) {\n            int x = Double.valueOf(A * Math.cos(w * t + sita)).intValue();\n            int y = Double.valueOf(A * Math.sin(w * t + sita)).intValue();\n            A += 1;\n            res.add(new Point(x, y));\n            Log.e(\"chao\", x + \", \" + y);\n        }\n        return res;\n    }\n}\n```\n\u5728\u628a\u8fd9\u4e2a\u7b97\u6cd5\u52a0\u5165\u5230`onLayout()`\u65b9\u6cd5\u4e2d\u5c31\u5927\u529f\u544a\u6210\u4e86\n```java\n@Override\n    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n        int n = getChildCount();\n        for(int i = 0; i < n; i++) {\n            View v = getChildAt(i);\n            if(placed.contains(v)) {\n                continue;\n            }\n            int w = v.getMeasuredWidth();\n            int h = v.getMeasuredHeight();\n\n            int pivotX = getWidth() / 3 + random.nextInt(getWidth() / 3);\n            int pivotY = getHeight() / 3 + random.nextInt(getHeight() / 3);\n\n            List<Point> spiral = generateSpiral();\n            for(Point p : spiral) {\n                pivotX += p.x;\n                pivotY += p.y;\n\n                Log.d(\"chao\", \"place \" + pivotX + \",\" + pivotY);\n                Rect r1 = getVisualRect(pivotX, pivotY, w, h, v.getRotation());\n                boolean isOverlap = false;\n                for(View pv : placed) {\n                    Rect r2 = getVisualRect(pv);\n                    if(isOverlap(r1, r2)) {\n                        isOverlap = true;\n                        break;\n                    }\n                }\n                if(isOverlap) {\n\n                } else {\n                    Log.d(\"chao\", \"placed\");\n                    Rect r = getRect(pivotX, pivotY, w, h);\n                    v.layout(r.left, r.top, r.right, r.bottom);\n                    break;\n                }\n            }\n            placed.add(v);\n        }\n    }\n```\n![Screenshot_20190218-104341.png](https://rome753.github.io/cdn/1896166-561089be4d90dade.png)\n\nGithub\u5730\u5740\n---------------\nhttps://github.com/rome753/WordCloudView\n", "mt_excerpt": "", "title": "Android\u8bcd\u4e91\u653e\u7f6e\u7b97\u6cd5", "dateCreated": "20220718T17:53:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491423.html", "permalink": "https://www.cnblogs.com/rome753/p/16491423.html", "postid": 16491423, "description": "\u6700\u8fd1\u4e0b\u4e86\u4e00\u6b3e\u5c0f\u4f17APP\uff0c\u529f\u80fd\u5b9e\u7528\uff0c\u754c\u9762\u7b80\u6d01\uff0c\u7136\u800c\u7528\u4e86\u51e0\u5206\u949f\u9875\u9762\u4e0b\u65b9\u7adf\u7136\u5f39\u51fa\u4e86\u5c0f\u7a97\u53e3\u5e7f\u544a\uff01\u5e76\u4e14\u6bcf\u5206\u949f\u81ea\u52a8\u66f4\u65b0\uff01\uff01\u8017\u7535\u3001\u8017\u6d41\u91cf\u3001\u5360\u5c4f\u5e55\u7a7a\u95f4\u3001\u95ea\u70c1\u5438\u5f15\u773c\u7403\u3001\u4e0d\u5c0f\u5fc3\u8fd8\u4f1a\u8bef\u89e6\uff0c\u8fd9\u79cd\u5e7f\u544a\u65b9\u5f0f\u662f\u672c\u5f3a\u8feb\u75c7\u60a3\u8005\u65e0\u6cd5\u5bb9\u5fcd\u7684\uff0c\u76f8\u4fe1\u5927\u90e8\u5206\u4eba\u4e5f\u4f1a\u53cd\u611f\uff0c\u56e0\u6b64\u5e38\u7528\u7684\u90a3\u4e9bAPP\u4e2d\u4e5f\u51e0\u4e4e\u6ca1\u6709\u770b\u5230\u8fc7\u3002\u4ece\u5b66\u4e60\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u672c\u4eba\u5c1d\u8bd5\u5bf9\u8fd9\u6b3e\u5e94\u7528\u8fdb\u884c\u7834\u89e3\uff0c\u201c\u5c4f\u853d\u201d\u5176\u4e2d\u7684\u5e7f\u544a\u529f\u80fd\u3002\n\n## 1. \u89e3\u538b ##\n\n\u4e0b\u8f7dapk\u6587\u4ef6\uff0c\u4fee\u6539\u540e\u7f00\u540d\u4e3a.zip\uff0c\u89e3\u538b\u5230\u6587\u4ef6\u5939\u4e2d\n\n![apk\u89e3\u538b\u6587\u4ef6\u5939.png](http://upload-images.jianshu.io/upload_images/1896166-7a225bccfa1e6d74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\u5176\u4e2d\uff1a\n* *assets\u6587\u4ef6\u5939* -- \u653e\u539f\u751f\u8d44\u6e90\u6587\u4ef6\n* *lib\u6587\u4ef6\u5939* -- \u653e\u5f15\u7528\u5e93\u6587\u4ef6\n* *META-INF\u6587\u4ef6\u5939* -- \u653e\u6e05\u5355\u6587\u4ef6\n* *res\u6587\u4ef6\u5939* -- \u653e\u8d44\u6e90\u6587\u4ef6\n* *AndroidManifest.xml* -- \u5b89\u5353\u6e05\u5355\n* *resources.arsc* -- \u4e3b\u8d44\u6e90\u6587\u4ef6\n\n\u4ee5\u4e0a\u8fd9\u4e9b\u4e3b\u8981\u8ddf\u8d44\u6e90\u6709\u5173\uff0c\u5982\u679c\u9700\u8981\u63d0\u53d6\u4e00\u4e9b\u56fe\u7247\u6216\u58f0\u97f3\u8d44\u6e90\u53ef\u4ee5\u76f4\u63a5\u5728\u6587\u4ef6\u5939\u4e2d\u627e\uff0c\u5269\u4e0b\u7684**classes.dex**\u6587\u4ef6\u5c31\u6bd4\u8f83\u91cd\u8981\u4e86\uff0c\u5b83\u662f\u5b89\u5353\u4e2dclasses\u7c7b\u7684\u6253\u5305\u683c\u5f0f\uff0c\u4ee3\u7801\u90fd\u5728\u8fd9\u91cc\u9762\u3002\n\n## 2.\u67e5\u770bjar ##\n\u67e5\u770b\u4ee3\u7801\u9700\u8981\u5c06dex\u6587\u4ef6\u8f6c\u6362\u4e3ajar\u6587\u4ef6\uff0c\u8fd9\u91cc\u63a8\u8350\u4e00\u6b3e\u8f6f\u4ef6\u201c\u5b89\u5353\u9006\u5411\u52a9\u624b\u201d\n![\u5b89\u5353\u9006\u5411\u52a9\u624b.png](http://upload-images.jianshu.io/upload_images/1896166-d6bca54b6a5c552d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\u91cc\u9762\u96c6\u6210\u4e86apktool\u3001autosign\u3001dex2jar\u3001jd-gui\u7b49\u5e38\u7528\u5de5\u5177\uff0c\u5341\u5206\u65b9\u4fbf\u3002\n\u8fd9\u91cc\u9009\u62e9\u5176\u4e2d\u7684**dex2jar**\u529f\u80fd\uff0c\u6e90\u6587\u4ef6\u6d4f\u89c8\u9009\u4e2d\u89e3\u538b\u51fa\u6765\u7684**classes.dex**\u6587\u4ef6\uff0c\u70b9\u51fb**\u64cd\u4f5c**\u6309\u94ae\uff0c\u5373\u53ef\u81ea\u52a8\u751f\u6210**classes_dex2jar.jar**\u6587\u4ef6\u3002\n\u518d\u9009**jd\u6253\u5f00jar**\u529f\u80fd\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528jd-gui\u67e5\u770bjar\u6587\u4ef6\u4e86\u3002\n\n![jd-gui\u67e5\u770b\u4ee3\u7801.png](http://upload-images.jianshu.io/upload_images/1896166-ecd4da8b542ae20e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\njd-gui\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5927\u90e8\u5206\u4ee3\u7801\u7ecf\u8fc7\u4e86\u6df7\u6dc6\uff0c\u800c\u4e14\u7ecf\u8fc7\u7f16\u8bd1\u5668\u4f18\u5316\u540e\u7684\u4ee3\u7801\u8ddf\u6e90\u7801\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u4e0d\u8fc7\u903b\u8f91\u8fd8\u662f\u4e00\u6837\u7684\uff0c\u8ba4\u771f\u770b\u8fd8\u662f\u80fd\u5927\u81f4\u770b\u61c2\u3002\n## 3.\u5bfb\u627e\u5e7f\u544a\u9875\u9762\u548c\u4ee3\u7801 ##\n\u8981\u627e\u5230\u5e7f\u544a\u9875\u9762\u7684Activity\uff0c\u5c06\u624b\u673a\u8fde\u63a5\u7535\u8111\uff0c\u5728Android Studio\u6216Eclipse\u7684logcat\u4e2d\u4f1a\u8f93\u51fa\u65e5\u5fd7\uff0c\u5728\u65e5\u5fd7\u641c\u7d22\u680f\u8f93\u5165\u201cActivityManager\u201d\uff0c\u8fd9\u6837\u542f\u52a8\u5e7f\u544a\u9875\u9762\u65f6\uff0clog\u4e2d\u5c31\u80fd\u770b\u5230Acitivty\u7684\u5168\u540d\uff0c\u7136\u540e\u5728jd-gui\u4e2d\u627e\u5230\u8fd9\u4e2aActivity\u3002\n\n![\u65e0\u6807\u9898.png](http://upload-images.jianshu.io/upload_images/1896166-19ce9c65fec89289.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\u5206\u6790\u4ee3\u7801\uff1a\n\u5e7f\u544a\u4e3b\u8981\u4f7f\u7528\u4e86adStream\u548cadwo\u8fd9\u4e24\u4e2aview\uff0c\u5b83\u4eec\u5206\u522b\u5728adInit_av() \u548c adInit_aw()\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e2d\u521d\u59cb\u5316\u548c\u6dfb\u52a0\u5230\u9875\u9762\u3002\u5982\u679c\u4fee\u6539\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u4e0d\u8ba9\u5b83\u4eec\u521d\u59cb\u5316\u548c\u6dfb\u52a0\uff0c\u90a3\u4e48\u5c31\u8fbe\u5230\u76ee\u7684\u4e86\uff0c\u540c\u65f6\u5176\u4ed6\u7528\u5230\u8fd9\u4e24\u4e2aview\u7684\u5730\u65b9\u8981\u8fdb\u884c\u5224\u65ad\uff0c\u9632\u6b62\u5f15\u8d77\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5e78\u8fd0\u7684\u662f\u539f\u4ee3\u7801\u4e2d\u5df2\u7ecf\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u7a7a\u5224\u65ad\u3002\n\n## 3.\u89e3\u5305\u4fee\u6539smali\u6c47\u7f16\u4ee3\u7801 ##\n\u627e\u5230\u5e7f\u544a\u9875\u9762\u548c\u65b9\u6cd5\u540e\u9700\u8981\u4fee\u6539\uff0c\u76f4\u63a5\u6539jar\u6587\u4ef6\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u9700\u8981\u5bf9\u539fapk\u6587\u4ef6\u8fdb\u884c\u89e3\u5305\uff0c\u89e3\u5305\u540e\u751f\u6210\u7684smali\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u7528\u6587\u672c\u7f16\u8f91\u5668\u4fee\u6539\u3002\u89e3\u5305\u4f7f\u7528apktool\uff0c\u5c06apk\u6587\u4ef6\uff08\u5982\u679c\u521a\u624d\u6539\u6210\u4e86**.zip**\uff0c\u5c31\u6539\u56de**.apk**)\u590d\u5236\u5230apktool\u6587\u4ef6\u5939\u4e0b\uff0c\u8f93\u5165\u547d\u4ee4(xx.apk\u6362\u6210\u5b9e\u9645\u540d\u5b57\uff09\uff1a\n\n```\napktool d xx.apk\n```\n\n![apktool\u89e3\u5305.png](http://upload-images.jianshu.io/upload_images/1896166-ab9ec696f1ae650f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> *\u6ce8\u610f\uff1aapktool\u5de5\u5177\u7248\u672c\u592a\u8001\u53ef\u80fd\u4f1a\u89e3\u5305\u5931\u8d25\uff0c\u8fd9\u65f6\u9700\u8981\u4e0b\u8f7d\u4e00\u4e2a\u8f83\u65b0\u7248\u672c\u7684*\n\n\u5f88\u5feb\u5728\u76f8\u540c\u6587\u4ef6\u5939\u4e0b\u5c31\u80fd\u770b\u5230\u89e3\u5305\u540e\u7684\u6587\u4ef6\u5939\uff0c\u4e0eapk\u540c\u540d\n\n![\u89e3\u5305.png](http://upload-images.jianshu.io/upload_images/1896166-0a2058c5409a6d58.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\u8fdb\u5165\u89e3\u5305\u751f\u6210\u7684\u76ee\u5f55\u4e2d\uff0c\u770b\u5230\u6587\u4ef6\u5939\u57fa\u672c\u4e0e\u76f4\u63a5\u89e3\u538b\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u751f\u6210\u4e86smali\u6587\u4ef6\u5939\uff0c\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801\u90fd\u5728\u91cc\u9762\uff0c\u76ee\u5f55\u7ed3\u6784\u8ddf\u5305\u540d\u76f8\u540c\n\n![\u89e3\u5305\u540e\u76ee\u5f55.png](http://upload-images.jianshu.io/upload_images/1896166-12f16d99796376ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\u5f88\u5bb9\u6613\u627e\u5230\u9700\u8981\u4fee\u6539\u7684\u9875\u9762\u4ee3\u7801**XXXActivity.smali**\uff0c\u7528\u6587\u672c\u7f16\u8f91\u5668\u53ef\u4ee5\u76f4\u63a5\u6253\u5f00\u4fee\u6539\u3002\n\n![smali\u4ee3\u7801.png](http://upload-images.jianshu.io/upload_images/1896166-d097b3d30455e310.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\u641c\u7d22\u9700\u8981\u4fee\u6539\u7684\u65b9\u6cd5**adInit_av()**\uff0c\u5982\u4e0b\u662f\u65b9\u6cd5\u7684\u5b9a\u4e49\uff1a\n```\n.method private adInit_av()V\n    .locals 2\n    .prologue\n    ...\n    return-void\n.end method\n```\n\u4e2d\u95f4\u7701\u7565\u53f7\u90e8\u5206\u662f\u65b9\u6cd5\u7684\u4e3b\u4f53\uff0c\u6839\u636e\u4e0a\u9762\u5bf9\u4ee3\u7801\u7684\u5206\u6790\uff0c\u5220\u9664\u65b9\u6cd5\u4e3b\u4f53\u5c31\u53ef\u4ee5\u3002\u7136\u540e\u627e\u5230\u53e6\u5916\u4e00\u4e2a\u65b9\u6cd5**adInit_aw()**\uff0c\u540c\u6837\u5220\u9664\u65b9\u6cd5\u4e3b\u4f53\uff0c\u4fdd\u5b58\u6587\u4ef6\u3002\n\n## 4.\u91cd\u65b0\u6253\u5305\u7b7e\u540d ##\n\u4fee\u6539\u597d\u4e4b\u540e\u4f7f\u7528apktool\u91cd\u65b0\u6253\u5305\u3002\n\u8f93\u5165\u547d\u4ee4\uff08**-o**\u4ee3\u8868\u8f93\u51fa\u6587\u4ef6\u540d\uff09\uff1a\n```\napktool b xx -o xx_new.apk\n```\n![\u91cd\u65b0\u6253\u5305.png](http://upload-images.jianshu.io/upload_images/1896166-22aac4a094a30fa0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\u5f88\u5feb\u91cd\u65b0\u751f\u6210apk\u6587\u4ef6\uff0c\u4e0d\u8fc7\u8fd9\u4e2aapk\u6587\u4ef6\u4e0d\u80fd\u76f4\u63a5\u5b89\u88c5\u7684\uff0c\u56e0\u4e3a\u6ca1\u6709\u7b7e\u540d\u3002\u4f7f\u7528**\u5b89\u5353\u9006\u5411\u52a9\u624b**\u8fdb\u884c\u7b7e\u540d\u3002\n\n![\u91cd\u65b0\u7b7e\u540d.png](http://upload-images.jianshu.io/upload_images/1896166-b42b179b75997f68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\u56e0\u4e3a\u4f7f\u7528\u7684\u662f\u975e\u5b98\u65b9\u7b7e\u540d\uff0c\u4e0e\u5b98\u65b9\u7684APP\u662f\u4e0d\u517c\u5bb9\u7684\uff0c\u5b89\u88c5\u524d\u5148\u9700\u8981\u5378\u8f7d\u5b98\u65b9\u7684\uff0c\u5b89\u88c5\u540e\u4e5f\u662f\u4e0d\u80fd\u6b63\u5e38\u5347\u7ea7\u7684\u3002\n\u8fd0\u884c\u4e00\u4e0b\uff0c\u4e00\u5207\u6b63\u5e38\uff0c\u5e7f\u544a\u6ca1\u6709\u4e86\uff0c\u4e16\u754c\u6e05\u9759\u4e86~~~\n\n## 5.\u603b\u7ed3 ##\n* \u73b0\u5728\u6709\u7684apk\u4f7f\u7528\u4e86\u8f83\u597d\u7684\u52a0\u5bc6\u673a\u5236\uff0c\u53ef\u80fd\u89e3\u538b\u540e**classes.dex**\u4ee3\u7801\u6587\u4ef6\u88ab\u5c01\u88c5\u8fdb.so\u6587\u4ef6\u4e2d\uff0c\u9700\u8981\u53e6\u884c\u7834\u89e3\uff0c\u96be\u5ea6\u4f1a\u6bd4\u8f83\u5927\uff0c\u8fd9\u91cc\u4e0d\u4f5c\u8ba8\u8bba\uff1b\n* \u636e\u8bf4jar\u6587\u4ef6\u91cc\u7684class\u6587\u4ef6\u4e5f\u80fd\u4f7f\u7528\u5de5\u5177\u4fee\u6539\uff0c\u4fee\u6539\u540e\u91cd\u65b0\u6253\u5305\u6210jar\uff0c\u8fd9\u6837\u53ef\u80fd\u4e0d\u7528\u91cd\u65b0\u7b7e\u540d\u3002\u672c\u4eba\u6ca1\u6709\u8bd5\u8fc7\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u5c1d\u8bd5\u770b\u770b\u662f\u5426\u6709\u6548\uff1b\n* smali\u662fDalvik\u865a\u62df\u673a\u6307\u4ee4\u8bed\u8a00\uff0c\u8bed\u6cd5\u8ddfJava\u4e0d\u540c\u3002\u5728\u77ed\u65f6\u95f4\u4e0d\u719f\u6089\u7684\u60c5\u51b5\u4e0b\uff0c\u4fee\u6539\u5e38\u91cf\u3001\u5220\u9664\u65b9\u6cd5\u5185\u5bb9\u7b49\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u64cd\u4f5c\u3002\u5982\u679c\u9700\u8981\u5176\u4ed6\u64cd\u4f5c\uff0c\u6bd4\u5982\u6dfb\u52a0\u7c7b\u3001\u4fee\u6539\u8bed\u53e5\u7b49\uff0c\u53ef\u4ee5\u81ea\u5df1\u5efa\u7acb\u4e00\u4e2a\u5b89\u5353\u5de5\u7a0b\uff0c\u5c06\u76f8\u540c\u903b\u8f91\u7684Java\u8bed\u53e5\u5199\u8fdb\u53bb\uff0c\u751f\u6210apk\u89e3\u5305\u67e5\u770b\u751f\u6210\u7684smali\u8bed\u53e5\uff0c\u518d\u53c2\u7167\u8fd9\u4e9b\u751f\u6210\u8bed\u53e5\u4fee\u6539\uff1b\n* \u7834\u89e3\u6210\u529f\u4e3b\u8981\u56e0\u4e3a\u8fd9\u4e2a\u5e94\u7528\u529f\u80fd\u8f83\u7b80\u5355\uff0c\u903b\u8f91\u6bd4\u8f83\u6e05\u6670\uff0c\u6ca1\u8fdb\u884c\u5f7b\u5e95\u7684\u6df7\u6dc6\uff0c\u7834\u89e3\u5176\u4ed6\u5e94\u7528\u53ef\u80fd\u96be\u5ea6\u5b8c\u5168\u4e0d\u540c\u3002\n\n**\u91cd\u7533\uff1a\u672c\u4eba\u51fa\u4e8e\u5b66\u4e60\u7684\u76ee\u7684\u5bf9\u8fd9\u6b3e\u5e26\u5c0f\u7a97\u53e3\u5e7f\u544aAPP\u8fdb\u884c\u4e86\u7834\u89e3\u53bb\u5e7f\u544a\uff0cAPP\u5f00\u53d1\u4e0d\u6613\uff0c\u5927\u5bb6\u4e0d\u8981\u8fdb\u884c\u6076\u610f\u7834\u89e3\u3002\u6b64\u5916\uff0c\u672c\u4eba\u6280\u672f\u6c34\u5e73\u6709\u9650\uff0c\u5e0c\u671b\u629b\u7816\u5f15\u7389\uff0c\u6587\u4e2d\u6709\u8bef\u5904\u8fd8\u671b\u4e0d\u541d\u8d50\u6559\u3002**\n", "mt_excerpt": "", "title": "Android-APP\u7834\u89e3\u53bb\u5e7f\u544a\u5b8c\u6574\u6559\u7a0b", "dateCreated": "20220718T17:52:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491421.html", "permalink": "https://www.cnblogs.com/rome753/p/16491421.html", "postid": 16491421, "description": "\u4ee5\u524d\u5b66\u4e60\u8fc7\u5206\u5f62\u51e0\u4f55\uff0c\u5f88\u6709\u610f\u601d\uff0c\u7531\u7b80\u5355\u7684\u6570\u5b66\u516c\u5f0f\u8fed\u4ee3\u8ba1\u7b97\u5f97\u5230\u7684\u5206\u5f62\u56fe\u5f62\uff0c\u653e\u5927\u540e\u4e0d\u4f1a\u4e22\u5931\u7ec6\u8282\u3002\u5178\u578b\u7684\u5982Mandelbrot\u56fe\u5f62\uff1a\n\n![Mandelbrot.png](http://upload-images.jianshu.io/upload_images/1896166-7497782c662d4a5e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\u8ba1\u7b97\u65b9\u5f0f\u4e5f\u4e0d\u590d\u6742\uff0c\u7531f(z) = z^2 + c,\u8fed\u4ee3\u8ba1\u7b97 z1=f(z0), z2=f(z1), z3=f(z2)...\u5176\u4e2dz, c\u90fd\u662f\u590d\u6570\uff0c\u53ef\u4ee5\u8868\u793a\u4e3a\u590d\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u800c\u6bcf\u4e2a\u70b9\u7684\u8ba1\u7b97\u6b21\u6570\u53ef\u4ee5\u6620\u5c04\u4e3a\u4e00\u4e2a\u989c\u8272\u503c\uff08\u5c31\u50cf\u4e0d\u540c\u6e29\u5ea6\u6620\u5c04\u4e3a\u70ed\u6210\u50cf\uff09\uff0c\u628a\u8fd9\u4e9b\u4e0d\u540c\u5750\u6807\u3001\u4e0d\u540c\u989c\u8272\u7684\u70b9\u7ec4\u5408\u8d77\u6765\uff0c\u5c31\u662f\u4e00\u5f20\u5206\u5f62\u56fe\u5f62\u4e86\u3002\u5206\u5f62\u56fe\u5f62\u7684\u8be6\u7ec6\u4ecb\u7ecd\u53ef\u4ee5\u770b[Matrix67\u7f51\u7ad9](http://www.matrix67.com/blog/archives/292)\u3002\n\n\u90a3\u4e48\uff0cAndroid\u4e0b\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\n\n\u5df2\u77e5\u4f7f\u7528```Bitmap.setPixel(int x, int y, int color)```\u65b9\u6cd5\u53ef\u4ee5\u5c06\u8ba1\u7b97\u7ed3\u679c\u4fdd\u5b58\u5230Bitmap\u4e2d\uff0c\u6709\u591a\u79cd\u65b9\u6cd5\u5c55\u793a\uff1a\n- \u4e00\u6b21\u8ba1\u7b97\u51fa\u6574\u4e2a\u56fe\u5f62\u7684Bitmap\uff0c\u663e\u793a\u5230ImageView\u4e0a\uff1a\n\u8ba1\u7b97\u65f6\u95f4\u53ef\u80fd\u8f83\u957f\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u770b\u4e0d\u5230\u4efb\u4f55\u753b\u9762\n- \u4f7f\u7528SurfaceView\uff0c\u5229\u7528\u53ef\u4ee5\u52a8\u6001\u5237\u65b0\u7684\u7279\u70b9\uff0c\u5f00\u542f\u591a\u4e2a\u7ebf\u7a0b\u5404\u8ba1\u7b97\u56fe\u7247\u7684\u4e00\u90e8\u5206\uff0c\u67d0\u4e2a\u7ebf\u7a0b\u8ba1\u7b97\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u5237\u65b0\u5230Surface\u4e0a\uff0c\u76f4\u5230\u6240\u6709\u7ebf\u7a0b\u7ed3\u675f\n- \u4f7f\u7528TextureView\uff0c\u539f\u7406\u8ddfSurfaceView\u76f8\u540c\u3002\u5728Android4.0\u4e4b\u540e\u4f7f\u7528\uff0c\u652f\u6301\u786c\u4ef6\u52a0\u901f\uff0c\u5e76\u4e14TextureView\u53ef\u4ee5\u653e\u5927\uff0c\u7f29\u5c0f\uff0c\u5e73\u79fb\u7b49\uff08\u8fd9\u4e9b\u64cd\u4f5c\u5728SurfaceView\u4e0a\u65e0\u6548\uff09\n\nSurfaceView\u6548\u679c\u56fe\u5982\u4e0b\uff1a\n![rects.gif](http://upload-images.jianshu.io/upload_images/1896166-13139f80cdf7162e.gif?imageMogr2/auto-orient/strip)\n\n### SurfaceView\u7684\u57fa\u672c\u4f7f\u7528\n```java\n    //\u521b\u5efaSurfaceView\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u653e\u5230layout\u5e03\u5c40\u4e2d\n    SurfaceView surface = new SurfaceView(this);\n    //\u83b7\u53d6SurfaceHolder\n    SurfaceHolder holder = surface.getHolder();\n    //\u6dfb\u52a0Callback\n    holder.addCallback(mCallback);\n\n    //\u521b\u5efaCallback\n    SurfaceHolder.Callback mCallback = new SurfaceHolder.Callback() {\n        @Override\n        public void surfaceCreated(SurfaceHolder holder) {\n        //\u8868\u793aSurface\u51c6\u5907\u597d\uff0c\u53ef\u4ee5\u7ed8\u5236\u4e86\n            \n            //\u7ed8\u5236\u5728\u6574\u4e2aSurface\u4e0a\n            Canvas canvas = holder.lockCanvas();\n            canvas.drawColor(Color.BLACK);\n            holder.unlockCanvasAndPost(canvas);\n\n            //\u7ed8\u5236\u5728Surface\u4e2d\u7684\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u5185\n            canvas = holder.lockCanvas(new Rect(0,0,100,100));\n            canvas.drawColor(Color.RED);\n            holder.unlockCanvasAndPost(canvas);\n        }\n\n        @Override\n        public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) {\n        }\n\n        @Override\n        public void surfaceDestroyed(SurfaceHolder holder) {\n        //\u8868\u793aSurface\u9500\u6bc1\uff0c\u4e0d\u80fd\u7ed8\u5236\n        }\n    };\n```\n\n\u51e0\u4e2a\u6ce8\u610f\u70b9\uff1a\n> * Surface\u7684\u53ef\u7ed8\u5236\u72b6\u6001\u662f\u5728SurfaceHolder.Callback\u7684```surfaceCreated(SurfaceHolder holder)```\u65b9\u6cd5\u56de\u8c03\u540e\uff0c```surfaceDestroyed(SurfaceHolder holder)```\u65b9\u6cd5\u56de\u8c03\u524d\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2aboolean\u53d8\u91cf\u6807\u8bb0\u53ef\u7ed8\u5236\u72b6\u6001\uff0c\u5728\u6bcf\u6b21\u7ed8\u5236\u524d\u5148\u5224\u65ad\u8fd9\u4e2a\u53d8\u91cf\u3002\u5982\u679c\u5728Surface\u521b\u5efa\u524d\uff0c\u6216\u8005Surface\u9500\u6bc1\u540e\u8fdb\u884c\u7ed8\u5236\uff0c\u4e5f\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\n* ```holder.unlockCanvasAndPost(Canvas c)```\uff0c\u4ece\u65b9\u6cd5\u540d\u4e2d\u7684post\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u662f\u7acb\u5373\u6267\u884c\u7684\uff0c\u8fde\u7eed\u591a\u6b21\u8c03\u7528\u4f1a\u4e00\u6b21\u663e\u793a\u6700\u7ec8\u7684\u7ed3\u679c\u3002\u6bd4\u5982\uff0c\u753b\u4e00\u4e2a\u77e9\u5f62\uff0c\u8c03\u7528unlockCanvasAndPost\uff0c\u63a5\u7740\u753b\u53e6\u4e00\u4e2a\u77e9\u5f62\uff0c\u8c03\u7528unlockCanvasAndPost\uff0cSurface\u4e0a\u4f1a\u76f4\u63a5\u663e\u793a\u4e24\u4e2a\u77e9\u5f62\n* ```holder.lockCanvas(Rect r)```\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u4eceSurface\u4e2d\u53d6\u51fa\u4e00\u5757\u77e9\u5f62\u533a\u57df\u8fdb\u884c\u5237\u65b0\uff0cSurface\u4e2d\u7684\u5176\u4ed6\u90e8\u5206\u4fdd\u6301\u539f\u6837\uff0c\u4e5f\u5c31\u662f\u52a8\u6001\u5c40\u90e8\u5237\u65b0\u3002\u8fd9\u4e2a\u65b9\u6cd5\u8c03\u7528\u540e\u4f1a\u4fee\u6539\u4f20\u5165\u7684\u53c2\u6570 Rect r\uff01\uff01\uff01\u5982\u679c\u540e\u9762\u8fd8\u8981\u7528 r\uff0c\u5c31\u4e0d\u80fd\u6307\u671b r \u4e2d\u8fd8\u662f\u539f\u6765\u7684\u6570\u636e\uff0c\u5efa\u8bae\u4f20\u5165\u53c2\u6570\u65f6\u6784\u9020\u4e00\u4e2a\u65b0\u7684Rect\u5bf9\u8c61--```lockCanvas(new Rect(r))```\n* \u4ecelockCavas()\u5230unlockCanvasAndPost()\u7684\u8fc7\u7a0b\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u64cd\u4f5c(\u4e0d\u9700\u8981\u662f\u4e3b\u7ebf\u7a0b)\u3002\u4e5f\u5c31\u662f\u4e0d\u80fd\u7ebf\u7a0bA\u8c03\u7528\u4e86lockCavas()\uff0c\u8fd8\u6ca1\u6709unlock\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0bB\u5c31\u8dd1\u6765lock\uff0c\u8fd9\u65f6\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\u3002\u8981\u4f7f\u7528\u591a\u7ebf\u7a0b\u64cd\u4f5cSurfaceView\u7684\u8bdd\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5c01\u88c5\u5728\u4e00\u4e2a\u540c\u6b65\u65b9\u6cd5\u91cc\uff0c\u6216\u8005\u4f7f\u7528\u5176\u4ed6\u65b9\u5f0f\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u4fee\u6539Surface\n\n---\n\uff08\u4e0b\u9762\u662f\u5177\u4f53\u7684\u65b9\u6cd5\uff09\n#### \u8ba1\u7b97\u4e00\u5757\u77e9\u5f62\u533a\u57df\u7684\u5206\u5f62\u56fe\u5f62\uff0c\u5e76\u4fdd\u5b58\u5230Bitmap\u4e2d\n\u8c03\u6574\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u5f97\u5230\u4e0d\u540c\u7684\u56fe\u5f62\n```java\npublic Bitmap calculateBitmap(Rect r, float re, float im) {\n        Complex z = new Complex(0f,0f);\n        Complex c = new Complex(re, im);\n        Bitmap bitmap = Bitmap.createBitmap(r.width(), r.height(), Bitmap.Config.RGB_565);\n        for (int i = r.left - width / 2; i < r.right - width / 2; i++) {\n            for (int j = r.top - height / 2; j < r.bottom - height / 2; j++) {\n                z.re = i * 2f / width;\n                z.im = j * 3f / height;\n\n                int k = 0;\n                for (; k < ITERATE_TIMES; k++) {\n                    if (z.abs() > 2) break;\n                    z.mul(z);\n                    z.add(c);\n                }\n\n                int color = generateColor(k);\n\n                bitmap.setPixel((i + width / 2) % r.width(), (j + height / 2) % r.height(), color);\n            }\n        }\n        return bitmap;\n    }\n```\n\n#### \u628a\u8fed\u4ee3\u6b21\u6570\u6620\u5c04\u4e3a\u989c\u8272\u503c\n\u4fee\u6539\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\u4e0d\u540c\u7684\u989c\u8272\u6548\u679c\n```java\n    protected int generateColor(int k) {\n        int r, g, b;\n\n        if (k < 16) {\n            g = 0;\n            b = 16 * k - 1;\n            r = b;\n        } else if (k < 32) {\n            g = 16 * (k - 16);\n            b = 16 * (32 - k) - 1;\n            r = g;\n        } else if (k < 64) {\n            g = 8 * (64 - k) - 1;\n            r = g;\n            b = 0;\n        } else { // range is 64 - 127\n            r = 0;\n            g = 0;\n            b = 0;\n        }\n        return Color.argb(255, r, g, b);\n    }\n```\n\n#### \u540c\u6b65\u7ed8\u56fe\n```java\n    synchronized void drawBitmap(SurfaceHolder holder, Rect r, Bitmap bitmap) {\n        if (isAvailable.get()) {\n            Canvas canvas = holder.lockCanvas(new Rect(r));\n            canvas.drawBitmap(bitmap, r.left, r.top, null);\n            holder.unlockCanvasAndPost(canvas);\n        }\n    }\n```\n\n#### \u591a\u7ebf\u7a0b\u8ba1\u7b97\n1. \u5148\u5c06\u5c4f\u5e55\u5207\u5206\u6210\u591a\u4e2a\u77e9\u5f62\u65b9\u5757\uff0c\u4fbf\u4e8e\u5f00\u542f\u591a\u7ebf\u7a0b\u8ba1\u7b97\uff0c\u5c06\u5f97\u5230\u7684\u6240\u6709Rect\u4fdd\u5b58\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528```Collections.shuffle()```\u65b9\u6cd5\u6253\u4e71\u6392\u5e8f\uff0c\u83b7\u5f97\u4e0d\u540c\u7684\u89c6\u89c9\u6548\u679c\uff1b\n2. \u7136\u540e\u4f7f\u7528```Executors.newFixedThreadPool(5)```\u65b9\u6cd5\u5efa\u7acb\u4e00\u4e2a\u6700\u59275\u4e2a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\uff08\u8fd9\u4e2a\u6570\u5b57\u8ddf\u8bbe\u5907CPU\u6838\u6570\u6709\u5173\uff0c\u4e00\u822c\u75282*\u6838\u6570+1\u3002\u7ebf\u7a0b\u6570\u592a\u5c11\u4e0d\u80fd\u5145\u5206\u53d1\u6325CPU\u7684\u6027\u80fd\uff1b\u7ebf\u7a0b\u6570\u592a\u591a\u4e86\u6ca1\u6709\u610f\u4e49\uff0c\u5b9e\u9645\u5f00\u4e0d\u4e86\u90a3\u4e48\u591a\u7ebf\u7a0b\uff0c\u4f46\u6ca1\u6709\u53d1\u73b0\u8d1f\u9762\u4f5c\u7528\uff09\uff1b\n3. \u904d\u5386Rect\u96c6\u5408\uff0c\u6bcf\u53d6\u51fa\u4e00\u4e2aRect\u5c31\u4e22\u5230\u7ebf\u7a0b\u6c60\u4e2d\u53bb\u8ba1\u7b97\uff0c\u8ba1\u7b97\u5b8c\u8c03\u7528\u540c\u6b65\u7ed8\u56fe\u65b9\u6cd5\u5237\u65b0SurfaceView\u3002\n```java\n  ExecutorService executorService = Executors.newFixedThreadPool(5);\n\n        ArrayList<Rect> list = new ArrayList<>(xCount * yCount);\n\n        for (int i = 0; i < xCount; i++) {\n            for (int j = 0; j < yCount; j++) {\n                Rect r = new Rect(i * xSize, j * ySize, (i + 1) * xSize, (j + 1) * ySize);\n                list.add(r);\n\n            }\n        }\n\n        //\u6253\u4e71\u6392\u5e8f\n        Collections.shuffle(list);\n\n        for (final Rect r : list) {\n            executorService.execute(new Runnable() {\n                @Override\n                public void run() {\n                    Bitmap bitmap = calculateBitmap(r);\n                    syncDraw(r, bitmap);\n                }\n            });\n        }\n```\n\n> \u5c06Surface\u5207\u5206\u4e3a\u6761\u72b6\u7684\u6548\u679c\u5982\u4e0b\n\n![bars.gif](http://upload-images.jianshu.io/upload_images/1896166-4cc6e4f7ba55b2e9.gif?imageMogr2/auto-orient/strip)\n\n---\n\u4e0a\u9762\u662f\u7ed8\u5236\u4e00\u5f20\u56fe\u5f62\u7684\u65b9\u6cd5\uff0c\u6539\u53d8```calculateBitmap(Rect r, float re, float im)```\u65b9\u6cd5\u7684\u53c2\u6570\u53ef\u4ee5\u5f97\u5230\u5b8c\u5168\u4e0d\u540c\u7684\u56fe\u5f62\u3002\u5982\u679c\u6bcf\u4e2a\u7ebf\u7a0b\u8ba1\u7b97\u4e00\u4e2a\u53c2\u6570\u4e0b\u7684\u6574\u4e2a\u56fe\u5f62\uff0c\u8ba1\u7b97\u5b8c\u5237\u65b0\u6574\u4e2aSurface\uff0c\u5c31\u80fd\u770b\u5230\u53c2\u6570\u53d8\u5316\u7684\u52a8\u6001\u6548\u679c\uff08\u5373\u5e27\u52a8\u753b\uff0c\u7531\u4e8e\u8ba1\u7b97\u901f\u5ea6\u7684\u9650\u5236\uff0c\u5bfc\u81f4\u5e27\u6570\u5f88\u4f4e-_-!!\uff09\uff1a\n\n![(0.285,0.01).gif](http://upload-images.jianshu.io/upload_images/1896166-cc32feb6a15cf556.gif?imageMogr2/auto-orient/strip)\n\n\u8fd9\u91cc\u7528\u5230\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u578b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u751f\u4ea7\uff08\u8ba1\u7b97Bitmap\uff09\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u6d88\u8d39\uff08\u5c06Bitmap\u7ed8\u5236\u5230SurfaceView\u4e0a\uff09\u3002Java\u4e2d\u4e00\u822c\u800c\u8a00\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\u4e00\u662f\u5229\u7528wait/notify(notifyAll)\u673a\u5236\uff1b\u4e8c\u662f\u4f7f\u7528java.util.concurrent\u5305\u4e2d\u7684\u5bf9\u8c61\uff0c\u5982BlockingQueue\u3001ConcurrentMap\u7b49\u3002\u540e\u8005\u80fd\u81ea\u52a8\u5904\u7406\u5e76\u53d1\u95ee\u9898\uff0c\u4f7f\u7528\u8d77\u6765\u6bd4\u8f83\u65b9\u4fbf\uff0c\u65b0\u4ee3\u7801\u4e2d\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u524d\u8005\u3002\u5f53\u7136\u540e\u8005\u4e5f\u662f\u5bf9\u524d\u8005\u7684\u5c01\u88c5\uff0c\u6700\u597d\u80fd\u4e86\u89e3\u524d\u8005\u7684\u539f\u7406\u3002\n\n1. \u6784\u9020\u4e00\u4e2a```ConcurrentHashMap<Integer, Bitmap>```\u7528\u4e8e\u4fdd\u5b58\u5e8f\u53f7\u548c\u5bf9\u5e94\u7684Bitmap\u56fe\u5f62\n2. \u6784\u9020\u4e00\u4e2a\u7ebf\u7a0b\u6c60\uff0c\u5728\u4e00\u4e2a\u56fa\u5b9a\u6b21\u6570\uff08\u5982500\uff09\u7684\u5faa\u73af\u5185\uff0c\u6dfb\u52a0\u7ebf\u7a0b\u4efb\u52a1\uff08\u751f\u4ea7\u8005\u7ebf\u7a0b\uff09\uff1a\u6839\u636e\u5faa\u73af\u53d8\u91cf\u751f\u6210\u6e10\u53d8\u7684\u53c2\u6570\uff0c\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684Bitmap\u56fe\u5f62\uff0c\u7136\u540e\u5c06\u5faa\u73af\u7684\u6b21\u6570\u548cBitmap\u56fe\u5f62\u6dfb\u52a0\u5230ConcurrentHashMap\u4e2d\uff08\u5982\u679c\u76f4\u63a5\u7ed8\u56fe\uff0c\u5c31\u4e0d\u80fd\u4fdd\u8bc1\u56fe\u5f62\u53d8\u5316\u8ddf\u968f\u53c2\u6570\u53d8\u5316\u7684\u987a\u5e8f\uff09\n3. \u6dfb\u52a0\u6d88\u8d39\u8005\u7ebf\u7a0b\u4efb\u52a1\uff1a\u6bcf\u4e2a\u4e00\u6bb5\u65f6\u95f4\u4eceConcurrentHashMap\u4e2d\u53d6\u51fa\u5faa\u73af\u53d8\u91cf\u5bf9\u5e94\u7684Bitmap\uff0c\u8981\u7528```remove()```\u800c\u4e0d\u662f```get()```\uff0c\u5426\u5219map\u7684\u5927\u5c0f\u4f1a\u4e0d\u65ad\u589e\u5927\u3002\u5982\u679c\u53d6\u51fa\u7684Bitmap\u4e0d\u4e3a\u7a7a\uff0c\u5c31\u7ed8\u5236\u5230SurfaceView\u4e0a\uff08\u56e0\u4e3a\u662f\u5355\u7ebf\u7a0b\u64cd\u4f5c\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u7528\u540c\u6b65\u65b9\u6cd5\uff09\uff0c\u5426\u5219\u7ee7\u7eed\u7b49\u5f85\u548c\u53d6\u51fa\u3002\n> \u6ce8\u610f\u8981\u5148\u6dfb\u52a0\u6d88\u8d39\u8005\u7ebf\u7a0b\uff0c\u518d\u6dfb\u52a0\u751f\u4ea7\u8005\u7ebf\u7a0b\uff08\u6211\u7684\u53d9\u8ff0\u662f\u53cd\u7684\uff09\uff0c\u5426\u5219\u6d88\u8d39\u8005\u7ebf\u7a0b\u53ef\u80fd\u6324\u4e0d\u8fdb\u53bb\uff01\n\n```java\n final ConcurrentHashMap<Integer, Bitmap> map = new ConcurrentHashMap<>(10);\n\n        service = Executors.newFixedThreadPool(6);\n\n        service.execute(new Runnable() {\n            @Override\n            public void run() {\n                int i = 0;\n                paint = new Paint();\n                paint.setColor(Color.RED);\n                while (isAvailable.get()) {\n                    int waitTime = map.size() == 0 ? 1000 : 1000 / map.size();\n                    SystemClock.sleep(waitTime);\n\n                    Bitmap bitmap = map.remove(i);\n                    if (bitmap != null) {\n                        String text = \"(\" + String.format(\"%.5f\", C.re + FACTOR_RE * i)\n                                +\" , \" + String.format(\"%.5f\", C.im + FACTOR_IM * i)\n                                + \") buffered: \" + map.size();\n\n                        drawBitmapAndText(bitmap, text);\n                        i++;\n                    }\n\n                }\n            }\n        });\n\n        for (int i = 0; i < 500; i++) {\n            final int I = i;\n            service.execute(new Runnable() {\n                @Override\n                public void run() {\n                    float re = C.re + FACTOR_RE * I;\n                    float im = C.im + FACTOR_IM * I;\n                    Bitmap bitmap = calculateBitmap(new Rect(0, 0, width, height), re, im);\n                    map.put(I, bitmap);\n                }\n            });\n        }\n```\n> \u8c03\u6574\u53c2\u6570\u7684\u53d8\u5316\u8303\u56f4\u540e\u7684\u52a8\u753b\u5982\u4e0b\n\n![(-0.75,0).gif](http://upload-images.jianshu.io/upload_images/1896166-1339cb88e453d7e4.gif?imageMogr2/auto-orient/strip)\n\n---\n\u601d\u8def\u548c\u4e3b\u8981\u4ee3\u7801\u4e0a\u9762\u90fd\u8bb2\u4e86\uff0c\u5b8c\u6574\u7684\u9879\u76ee\u4ee3\u7801\u653e\u5230\u4e86Github\u4e0a\uff1a\n* [rome753/SurfacePaint](https://github.com/rome753/SurfacePaint)\uff0c\u6b22\u8fcestar\u548cfork\n\n\u611f\u8c22 http://www.matrix67.com \u7f51\u7ad9\u548c\u5206\u5f62\u7ed8\u56fe\u7684\u5f00\u6e90\u9879\u76ee https://github.com/redknotmiaoyuqiao/Fractal\n", "mt_excerpt": "", "title": "Android-SurfaceView-\u591a\u7ebf\u7a0b\u7ed8\u56fe", "dateCreated": "20220718T17:51:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491422.html", "permalink": "https://www.cnblogs.com/rome753/p/16491422.html", "postid": 16491422, "description": "\u9ad8\u65af\u6a21\u7cca\u662f\u7528\u5f97\u6700\u5e7f\u6cdb\u7684\u56fe\u50cf\u6a21\u7cca\u7b97\u6cd5\uff0c\u5b83\u7684\u539f\u7406\u5f88\u7b80\u5355\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u8ba1\u7b97\u5b83\u5468\u56f4\u5176\u4ed6\u70b9\u7684\u5e73\u5747\u8272\u503c\uff0c\u8bbe\u7f6e\u5230\u8be5\u70b9\u4e0a\uff0c\u5c31\u662f\u6a21\u7cca\u540e\u7684\u56fe\u3002\u53d6\u5468\u56f4\u5176\u4ed6\u70b9\u7684\u8303\u56f4\u79f0\u4e3a\u6a21\u7cca\u534a\u5f84\uff0c\u6a21\u7cca\u534a\u5f84\u8d8a\u5927\u4e5f\u5c31\u8d8a\u6a21\u7cca\u3002\u9ad8\u65af\u6a21\u7cca\u7b97\u6cd5\u7f51\u4e0a\u5f88\u591a\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a\uff1a\nhttp://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html\n\n\u7136\u800c\u6700\u8fd1\u9879\u76ee\u9700\u8981\u56fe\u7247\u5728\u7ad6\u76f4\u65b9\u5411\u4e0a\u6a21\u7cca\uff0c\u7f51\u4e0a\u627e\u4e86\u4e00\u4e0b\u6ca1\u6709\u53d1\u73b0\u76f8\u5e94\u7b97\u6cd5\uff0c\u4e8e\u662f\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a\u3002\u539f\u7406\u8ddf\u9ad8\u65af\u6a21\u7cca\u76f8\u4f3c\uff0c\u7531\u4e8e\u53ea\u6709\u4e00\u4e2a\u65b9\u5411\uff0c\u6bd4\u9ad8\u65af\u6a21\u7cca\u5c11\u4e86\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u56e0\u6b64\u7b80\u5355\u5f88\u591a\uff1a\n1. \u628a\u56fe\u50cfBitmap\u6bcf\u4e00\u5217\u7684\u50cf\u7d20\u7684ARGB\uff08\u900f\u660e\u5ea6\u548c\u7ea2\u7eff\u84dd\uff09\u503c\u53d6\u51fa\u6765\n2. \u900f\u660e\u5ea6\u4e0d\u53d8\uff0c\u7ea2\u7eff\u84dd\u503c\u5206\u522b\u6839\u636e\u6a21\u7cca\u534a\u5f84\uff0c\u8ddf\u7ad6\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u70b9\u7b97\u5e73\u5747\u503c\n3. \u5c06\u8ba1\u7b97\u540e\u7684ARGB\u503c\u5408\u6210\u65b0\u7684\u50cf\u7d20\uff0c\u521b\u5efa\u65b0\u7684Bitmap\n\n\n```java\npublic static Bitmap verticalBlur(Bitmap sentBitmap, int radius, boolean canReuseInBitmap) {\n        Bitmap bitmap;\n        if (canReuseInBitmap) {\n            bitmap = sentBitmap;\n        } else {\n            bitmap = sentBitmap.copy(sentBitmap.getConfig(), true);\n        }\n\n        int w = bitmap.getWidth();\n        int h = bitmap.getHeight();\n        int hm = h - 1;\n        if (radius < 1) return bitmap;\n        if(radius > hm / 2) radius = hm / 2;\n\n        int[] pix = new int[w * h];\n        bitmap.getPixels(pix, 0, w, 0, 0, w, h);\n\n\n        int[] a = new int[h];\n        int[] r = new int[h];\n        int[] g = new int[h];\n        int[] b = new int[h];\n\n        for(int i = 0; i < w; i++) {\n            a[0] = pix[i] & 0xff000000;\n            r[0] = pix[i] >> 16 & 0x000000ff;\n            g[0] = pix[i] >> 8 & 0x000000ff;\n            b[0] = pix[i] & 0x000000ff;\n            for(int j = 1; j < h; j++) {\n                int p = pix[i + j * w];\n                a[j] = (p & 0xff000000);\n                r[j] = (p >> 16 & 0x000000ff) + r[j - 1];\n                g[j] = (p >> 8 & 0x000000ff) + g[j - 1];\n                b[j] = (p & 0x000000ff) + b[j - 1];\n            }\n\n            for(int j = 0; j < h; j++) {\n                int low = j - radius, high = j + radius;\n                if(low < 0) low = 0;\n                if(high > hm) high = hm;\n                int len = high - low;\n                int rj = ((r[high] - r[low]) / len) << 16;\n                int gj = ((g[high] - g[low]) / len) << 8;\n                int bj = (b[high] - b[low]) / len;\n                pix[i + j * w] = a[j] | rj | gj | bj;\n            }\n        }\n\n        bitmap.setPixels(pix, 0, w, 0, 0, w, h);\n        return bitmap;\n    }\n```\n\n\u7531\u4e8e\u662f\u5728Java\u5c42\u8ba1\u7b97\u7684\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u6709\u4e00\u4e9b\u6280\u5de7\uff1a\n> \u7528`bitmap.getPixels()`\u65b9\u6cd5\u5c06bitmap\u8f6c\u6362\u6210\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4`int[]`, \u76f4\u63a5\u64cd\u4f5c\u6570\u7ec4\u662f\u8ba1\u7b97\u6548\u7387\u6700\u9ad8\u7684\n\n> \u5c3d\u91cf\u4f7f\u7528\u4f4d\u8fd0\u7b97, \u50cf\u7d20\u7684ARGB\u503c\u6070\u597d\u5360\u4e00\u4e2aint\u7684\u56db\u4e2a\u516b\u4f4d, \u53d6\u51fa\u548c\u5408\u6210\u5b83\u4eec\u7528 `&` \u548c `|` \u5c31\u884c\n\n> \u91cd\u590d\u8ba1\u7b97\u4e00\u4e2a\u6570\u7ec4\u4e2d\u76f8\u90bb\u51e0\u9879\u7684\u548c\u53ea\u9700\u8981\u7d2f\u52a0\u4e00\u6b21. \u6bd4\u5982\u6709\u6570\u7ec4A, \u8981\u8ba1\u7b97\u4eceA[i]\u5230A[j]\u7684\u548c, \u5148\u521b\u5efa\u6570\u7ec4B, B[0] = A[0], B[1] = B[0] + A[1], B[i] = B[i - 1] + A[i]..., \u8fd9\u6837\u7d2f\u52a0\u4e00\u6b21\u540e\uff0c\u4eceA[i]\u5230A[j]\u7684\u548c\u5c31\u7b49\u4e8eB[j] - B[i - 1].\n\n\u8fd9\u6837\u6a21\u7cca\u4e00\u5f20500*500\u7684\u56fe\u7247\u5927\u6982\u9700\u8981\u5341\u51e0ms. \u6548\u679c\u5982\u4e0b:\n![\u6a21\u7cca\u534a\u5f84\u5c0f](https://rome753.github.io/cdn/1896166-f9a78fb7fa0f4016.png)\n\n![\u6a21\u7cca\u534a\u5f84\u5927](https://rome753.github.io/cdn/1896166-6315955dd30d069f.png)\n", "mt_excerpt": "", "title": "Android\u56fe\u7247\u7eb5\u5411\uff08\u7ad6\u76f4\uff09\u6a21\u7cca\u7b97\u6cd5", "dateCreated": "20220718T17:51:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]Android", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491414.html", "permalink": "https://www.cnblogs.com/rome753/p/16491414.html", "postid": 16491414, "description": "UIViewController \u7684\u751f\u547d\u5468\u671f\u6709\u4e2a\u5947\u602a\u7684\u5730\u65b9\uff0c\u5c31\u662f\u6709\u9875\u9762\u52a0\u8f7d\u7684\u65b9\u6cd5 `viewDidLoad()`\uff0c\u5374\u6ca1\u6709\u9875\u9762\u9500\u6bc1\u7684\u65b9\u6cd5\u3002\u53ea\u6709\u4e00\u4e2a `deinit{}`\uff0c\u5b83\u4ee3\u8868\u7684\u662f\u5bf9\u8c61\u7684\u9500\u6bc1\u3002\u7136\u800c\u5173\u95ed\u9875\u9762\u65f6\uff0c\u5bf9\u8c61\u4e0d\u4e00\u5b9a\u4f1a\u9500\u6bc1\u3002\n\n\u5982\u679c\u5728`deinit{}`\u91cc\u9762\u53bb\u91ca\u653e\u8d44\u6e90\uff0c\u8d44\u6e90\u6ca1\u91ca\u653e\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\uff0c\u90a3\u4e48`deinit{}`\u4e0d\u4f1a\u88ab\u8c03\u7528\uff1b`deinit{}`\u4e0d\u88ab\u8c03\u7528\u5c31\u91ca\u653e\u4e0d\u4e86\u8d44\u6e90\u3002\u8fd9\u5c31\u9020\u6210\u4e86\u6b7b\u5faa\u73af\u3002\n\n\u89e3\u51b3\u65b9\u5f0f\u662f\u91cd\u65b0\u627e\u4e00\u4e2a\u9875\u9762\u9500\u6bc1\u7684\u65b9\u6cd5\uff1a`viewDidDisappear(_ animated: Bool)`\uff0c\u5f53\u7136\u8fd9\u4e2a\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\u9875\u9762\u4e0d\u4e00\u5b9a\u88ab\u9500\u6bc1\u4e86\uff0c\u4e5f\u53ef\u80fd\u662f\u5728\u5f53\u524d\u9875\u9762\u4e0a\u9762\u542f\u52a8\u4e86\u65b0\u9875\u9762\u3002\u533a\u5206\u8fd9\u4e24\u79cd\u60c5\u51b5\u7684\u65b9\u6cd5\u662f\u5224\u65ad\u5f53\u524d\u9875\u9762\u7684 `navigationController == nil`\uff0c\u662f `nil` \u4ee3\u8868\u5f53\u524d\u9875\u9762\u771f\u6b63\u9500\u6bc1\u3002\n\n```swift\n    override func viewDidDisappear(_ animated: Bool) {\n        if self.navigationController == nil {\n            viewDidClose()\n        }\n    }\n    \n    // \u9875\u9762\u771f\u6b63\u9500\u6bc1\n    open func viewDidClose() {\n        // no op\n    }\n```\n\n> Android\u91cc\u4e5f\u6709\u76f8\u4f3c\u7684\u95ee\u9898\uff0c\u867d\u7136Activity\u6709onDestroy\u56de\u8c03\u65b9\u6cd5\uff0c\u4f46\u662f\u5b83\u5728\u9875\u9762\u9500\u6bc1\u65f6\u4e0d\u4e00\u5b9a\u80fd\u88ab\u53ca\u65f6\u8c03\u7528\uff0c\u5982\u679c\u6709\u4e00\u4e9b\u8d44\u6e90\u91ca\u653e\u6bd4\u8f83\u8017\u65f6\uff0conDestroy\u53ef\u80fd\u4f1a\u5ef6\u8fdf\u5f88\u591a\u79d2\u3002\u89e3\u51b3\u65b9\u5f0f\u4e5f\u76f8\u4f3c\uff1a\u5728onPause\u56de\u8c03\u91cc\u5224\u65adisFinishing()\uff0ctrue\u4ee3\u8868\u9875\u9762\u5c06\u8981\u9500\u6bc1\u3002\n", "mt_excerpt": "", "title": "iOS-Swift-UIViewController\u9875\u9762\u9500\u6bc1\u548c\u91ca\u653e\u8d44\u6e90", "dateCreated": "20220718T17:50:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491407.html", "permalink": "https://www.cnblogs.com/rome753/p/16491407.html", "postid": 16491407, "description": "\u503c\u7c7b\u578b\u5728\u4f20\u9012\u548c\u8d4b\u503c\u65f6\u5c06\u8fdb\u884c\u590d\u5236\uff0c\u800c\u5f15\u7528\u7c7b\u578b\u53ea\u4f1a\u4f7f\u7528\u5f15\u7528\u5bf9\u8c61\u3002\nSwift\u4e2d\u5b9a\u4e49\u7684\u5f88\u591a\u7c7b\u578b\u90fd\u662f\u503c\u7c7b\u578b\uff0c\u5982struct\u3001enum\u4ee5\u53ca\u6240\u6709\u7684\u5185\u5efa\u7c7b\u578b(Int\u3001Bool\u3001String\u3001Array\u3001Dictionary)\u90fd\u662f\u503c\u7c7b\u578b\u3002class\u4e3a\u5f15\u7528\u7c7b\u578b\u3002\n\n\u4ee5\u6700\u5e38\u7528\u7684\u6570\u7ec4\u4e3a\u4f8b\n\n## \u503c\u4f20\u9012\n\nA,B\u4e24\u4e2a\u7c7b\u5404\u6709\u4e00\u4e2aArray\uff0c\u628aB\u7684arr\u8d4b\u503c\u4e3aA\u7684arr\uff0c\u7136\u540e\u7ed9B\u7684arr\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u3002\n\n> \u8fd0\u884c\u770b\u5230A\u7684arr\u6ca1\u6709\u6539\u53d8\uff0c\u4e24\u4e2aarr\u7684hashValue\u4e0d\u540c\uff0c\u662f\u4e24\u4e2a\u5bf9\u8c61\u3002\u8d4b\u503c\u65f6\u662f\u503c\u4f20\u9012\u3002\n\n![\u622a\u5c4f2022-05-31 15.30.13.png](https://rome753.github.io/cdn/1896166-df247bf6dde021ac.png)\n\n## \u5f15\u7528\u4f20\u9012\n\n\u5728\u4e0a\u9762\u57fa\u7840\u4e0a\uff0c\u5c06arr\u7684\u7c7b\u578b\u6539\u6210NSMutableArray\uff0c\u6dfb\u52a0\u65b9\u6cd5\u6539\u6210add\uff0c\u5176\u4ed6\u7684\u4e0d\u53d8\u3002\n\n> \u8fd0\u884c\u770b\u5230A\u7684arr\u4e5f\u6539\u53d8\u4e86\uff0c\u4e24\u4e2aarr\u7684hashValue\u76f8\u540c\uff0c\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u8d4b\u503c\u65f6\u662f\u5f15\u7528\u4f20\u9012\u3002\n\n![\u622a\u5c4f2022-05-31 15.32.03.png](https://rome753.github.io/cdn/1896166-fd57cd8a294c2135.png)\n", "mt_excerpt": "", "title": "iOS-Swift-\u503c\u7c7b\u578b\u4e0e\u5f15\u7528\u7c7b\u578b\u4f7f\u7528\u533a\u522b", "dateCreated": "20220718T17:49:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491410.html", "permalink": "https://www.cnblogs.com/rome753/p/16491410.html", "postid": 16491410, "description": "\u65b0\u5efa\u4e00\u4e2aiOS\u5de5\u7a0b\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u521b\u5efaViewController\uff0c\u5e76\u5728Main.storyboard\u4e2d\u5f15\u7528\u5b83\u4f5c\u4e3a\u4e3b\u9875\u9762\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u7684ViewController\uff0c\u5982\u679c\u8981\u6539\u6210\u5e26\u5bfc\u822a\u680f\u7684UINavigationController\u6216\u8005\u5176\u4ed6\u7684\uff0c\u5c31\u5f97\u66f4\u6362\u3002\u7f51\u4e0a\u641c\u4e86\u4e00\u4e0b\uff0c\u8d44\u6599\u5f88\u4e71\uff0c\u6539\u7684\u5730\u65b9\u5f88\u591a\uff0c\u800c\u4e14\u6709\u7684\u751f\u6548\uff0c\u6709\u7684\u4e0d\u751f\u6548\u3002\n\n\u603b\u7ed3\u6574\u7406\u4e86\u4e00\u4e0b\u6709\u56db\u79cd\u65b9\u6cd5\u3002\n\n## \u65b9\u6cd5\u4e00\uff1a\u4fee\u6539Main.Storyboard\n\n\u5982\u56fe\uff0c\u9009\u4e2dMain.Storyboard - My View Controller\uff0c\u9009\u62e9\u53f3\u8fb9\u7684\u84dd\u8272\u6807\u7b7e\uff0c\u628aClass\u7c7b\u540d\u6539\u6210\u4f60\u7684\u7c7b\u5373\u53ef\uff0c\u5f53\u7136\u8fd9\u4e2a\u7c7b\u53ea\u80fd\u662fViewController\u7c7b\u578b\u7684\u3002\n\n![\u622a\u5c4f2021-12-08 \u4e0b\u53485.27.54.png](https://rome753.github.io/cdn/1896166-dc4ea347635e8560.png)\n\n## \u65b9\u6cd5\u4e8c\uff1a\u4fee\u6539Main.Storyboard\uff0c\u66f4\u6362\u5176\u4ed6\u7c7b\u578b\u7684Controller\n\u4ee5UINavigationController\u4e3a\u4f8b\uff0c\u9009\u4e2dMain.Storyboard\uff0c\u70b9\u53f3\u4e0a\u89d2\u52a0\u53f7\uff0c\u5728\u5982\u4e0b\u5f39\u7a97\u4e2d\u8f93\u5165UINavigationController\uff0c\u9009\u62e9\u5b83\u6dfb\u52a0\u5230Storyboard\u4e2d\u3002\n![\u622a\u5c4f2021-12-08 \u4e0b\u53485.40.26.png](https://rome753.github.io/cdn/1896166-3e0fca9b19bd6a70.png)\n\n\u8fd9\u65f6\u4f1a\u51fa\u73b0\u4e09\u4e2aController\uff0c\u4e00\u4e2a\u7cfb\u7edf\u521b\u5efa\u7684ViewController\uff0c\u8fd8\u6709\u5c31\u662f\u521a\u6dfb\u52a0\u7684UINavigationController\u548c\u5b83\u7684rootViewController\u3002\u628aViewController\u6700\u5de6\u8fb9\u7684\u7bad\u5934\u4e5f\u5c31\u662fEntry Point\u62d6\u52a8\u5230UINavigationController\u5de6\u8fb9\uff0c\u518d\u70b9\u51fbViewController\u6309\u5220\u9664\u952e\u5220\u9664\u3002\u6700\u540e\u8ddf\u65b9\u6cd5\u4e00\u4e00\u6837\uff0c\u70b9\u51fbrootViewController\uff0c\u628aClass\u7c7b\u540d\u6539\u6210\u4f60\u7684\u7c7b\u3002\n\n![\u622a\u5c4f2021-12-08 \u4e0b\u53485.42.10.png](https://rome753.github.io/cdn/1896166-2197854765805534.png)\n\n\n\n## \u65b9\u6cd5\u4e09\uff1a\u4fee\u6539SceneDelegate\n\u5927\u90e8\u5206\u7f51\u4e0a\u6559\u7a0b\u90fd\u662f\u4fee\u6539AppDelegate\uff0c\u4f46\u662fXcode11\u4ee5\u540e\u4f1a\u81ea\u52a8\u521b\u5efaSceneDelegate\u6587\u4ef6\uff0c\u8fd9\u65f6\u4fee\u6539AppDelegate\u662f\u65e0\u6548\u7684\u3002\u9700\u8981\u4fee\u6539SceneDelegate\uff0c\u5728SceneDelegate\u7684willConnectTo\u65b9\u6cd5\u4e2d\u8bbe\u7f6ewindow\u7684rootViewController\u3002\n\n```swift\nclass SceneDelegate: UIResponder, UIWindowSceneDelegate {\n\n    var window: UIWindow?\n\n    func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {\n        // Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.\n        // If using a storyboard, the `window` property will automatically be initialized and attached to the scene.\n        // This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).\n        guard let _ = (scene as? UIWindowScene) else { return }\n        \n        let vc = MyViewController()\n        let nc = UINavigationController(rootViewController: vc)\n        window?.rootViewController = nc\n    }\n\n```\n\n## \u65b9\u6cd5\u56db\uff1a\u4fee\u6539AppDelegate\uff0c\u5220\u9664SceneDelegate\n\u5148\u5220\u9664SceneDelegate\uff0c\u5168\u5c40\u641c\u7d22SceneDelegate\uff0c\u628aInfo\u6587\u4ef6\u4e2d\u7684Application Scene Manifest\u8282\u70b9\u5220\u6389\n![\u622a\u5c4f2021-12-08 \u4e0b\u53487.20.59.png](https://rome753.github.io/cdn/1896166-c07e6cee7da33264.png)\n\u5e76\u4e14\u628aAppDelegate\u4e2d\u548cScene\u76f8\u5173\u7684\u4e24\u4e2a\u65b9\u6cd5\uff1aconfigurationForConnecting\u548cdidDiscardSceneSessions\u5220\u6389\u3002\u8fd9\u6837SceneDelegate\u5c31\u4e0d\u8d77\u4f5c\u7528\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u3002\n```swift\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    // MARK: UISceneSession Lifecycle\n\n    func application(_ application: UIApplication, configurationForConnecting connectingSceneSession: UISceneSession, options: UIScene.ConnectionOptions) -> UISceneConfiguration {\n        // Called when a new scene session is being created.\n        // Use this method to select a configuration to create the new scene with.\n        return UISceneConfiguration(name: \"Default Configuration\", sessionRole: connectingSceneSession.role)\n    }\n\n    func application(_ application: UIApplication, didDiscardSceneSessions sceneSessions: Set<UISceneSession>) {\n        // Called when the user discards a scene session.\n        // If any sessions were discarded while the application was not running, this will be called shortly after application:didFinishLaunchingWithOptions.\n        // Use this method to release any resources that were specific to the discarded scenes, as they will not return.\n    }\n\n\n}\n\n```\n\n\u6700\u540e\u5728AppDelegate\u4e2d\u7684didFinishLaunchingWithOptions\u65b9\u6cd5\u4e2d\u8bbe\u7f6ewindow\u548crootViewController\u5c31\u53ef\u4ee5\u751f\u6548\u4e86\u3002\n\n```swift\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    var window: UIWindow?\n    \n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        // Override point for customization after application launch.\n        \n        let window = UIWindow(frame: UIScreen.main.bounds)\n        let vc = ViewController()\n        let nc = UINavigationController(rootViewController: vc)\n        window.rootViewController = nc\n        self.window = window\n        window.makeKeyAndVisible()\n        \n        return true\n    }\n\n}\n\n```\n", "mt_excerpt": "", "title": "iOS\u66f4\u6362\u9ed8\u8ba4\u7684\u542f\u52a8ViewController\u7684\u51e0\u79cd\u65b9\u6cd5\u603b\u7ed3", "dateCreated": "20220718T17:49:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491400.html", "permalink": "https://www.cnblogs.com/rome753/p/16491400.html", "postid": 16491400, "description": "offsetBy() \u662f\u79fb\u52a8\u77e9\u5f62\u4f4d\u7f6e\uff0c\u5927\u5c0f\u4e0d\u53d8\u3002dx \u548c dy \u8868\u793aorigin\u79fb\u52a8\u8ddd\u79bb\u3002\ninsetBy() \u662f\u7f29\u5c0f\u6216\u653e\u5927\u77e9\u5f62\uff0c\u4e2d\u5fc3\u70b9\u4e0d\u53d8\u3002dx \u548c dy \u8868\u793a\u77e9\u5f62\u56db\u8fb9\u540c\u65f6\u5411\u4e2d\u5fc3\u70b9\u79fb\u52a8\u7684\u8ddd\u79bb\u3002origin\u79fb\u52a8\u8ddd\u79bb\u4e5f\u662f dx \u548c dy\uff0c\u5bbd\u9ad8\u7684\u53d8\u5316\u662f -2dx \u548c -2dy\u3002\n\n```\n(lldb) po f\n\u25bf (100.0, 100.0, 100.0, 100.0)\n  \u25bf origin : (100.0, 100.0)\n    - x : 100.0\n    - y : 100.0\n  \u25bf size : (100.0, 100.0)\n    - width : 100.0\n    - height : 100.0\n\n(lldb) po f.offsetBy(dx: 10, dy: 10)\n\u25bf (110.0, 110.0, 100.0, 100.0)\n  \u25bf origin : (110.0, 110.0)\n    - x : 110.0\n    - y : 110.0\n  \u25bf size : (100.0, 100.0)\n    - width : 100.0\n    - height : 100.0\n\n(lldb) po f.insetBy(dx: 10, dy: 10)\n\u25bf (110.0, 110.0, 80.0, 80.0)\n  \u25bf origin : (110.0, 110.0)\n    - x : 110.0\n    - y : 110.0\n  \u25bf size : (80.0, 80.0)\n    - width : 80.0\n    - height : 80.0\n\n(lldb) po f.insetBy(dx: -10, dy: -10)\n\u25bf (90.0, 90.0, 120.0, 120.0)\n  \u25bf origin : (90.0, 90.0)\n    - x : 90.0\n    - y : 90.0\n  \u25bf size : (120.0, 120.0)\n    - width : 120.0\n    - height : 120.0\n```\n", "mt_excerpt": "", "title": "iOS-CGRect-offsetBy()-\u4e0e-insetBy()-\u65b9\u6cd5", "dateCreated": "20220718T17:48:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491405.html", "permalink": "https://www.cnblogs.com/rome753/p/16491405.html", "postid": 16491405, "description": "\u5217\u8868\u662f\u6700\u5e38\u7528\u7684UI\u7ec4\u4ef6\uff0ciOS\u4e2d\u5217\u8868\u5206\u4e3aUITableView\u548cUICollectionView\u3002UITableView\u662f\u666e\u901a\u7684\u7eb5\u5411\u6ed1\u52a8\u5217\u8868\uff0cUICollectionView\u76f8\u5f53\u4e8e\u524d\u8005\u7684\u5347\u7ea7\u7248\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6a2a\u5411\u6ed1\u52a8\u7b49\u590d\u6742\u7684\u5e03\u5c40\uff0c\u5b9a\u4e49\u5217\u8868item\u7684\u6837\u5f0f\u7b49\u3002\n\n\u5217\u8868\u7684\u4f7f\u7528\u76f8\u5bf9\u9ebb\u70e6\u4e00\u70b9\uff0c\u9664\u4e86\u8981\u64cd\u4f5c\u63a7\u4ef6\uff0c\u8fd8\u8981\u64cd\u4f5c\u6570\u636e\u6e90\uff0c\u5c24\u5176\u5f53\u5217\u8868\u9700\u8981\u5c55\u793a\u591a\u79cd\u7c7b\u578bitem\u65f6\uff0c\u9700\u8981\u5728\u5f88\u591a\u5730\u65b9\u5224\u65ad\u7c7b\u578b\uff0c\u52a0\u5f88\u591aif-else\u4ee3\u7801\u3002\u5927\u90e8\u5206\u7684\u7c7b\u578b\u5224\u65ad\u662f\u56fa\u5b9a\u4ee3\u7801\uff0c\u53ea\u6709\u7c7b\u578b\u662f\u53d8\u5316\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u60f3\u529e\u6cd5\u5229\u7528\u6cdb\u578b\u7b49\u7279\u6027\uff0c\u628a\u8fd9\u4e9b\u56fa\u5b9a\u4ee3\u7801\u5c01\u88c5\u8d77\u6765\uff0c\u65b9\u4fbf\u4f7f\u7528\u3002\n\n![image.png](https://rome753.github.io/cdn/1896166-11419cf979260a2a.png)\n\n# 1.UITableView\u5c01\u88c5\n\n\u9996\u5148\u5bf9UITableView\u5c01\u88c5\u4e00\u4e0b\uff0c\u4e3b\u8981\u4ee3\u7801\u5982\u4e0b\n\n```swift\n// \u83b7\u53d6\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u7528object_getClass\uff0c\u4e0d\u80fd\u7528type(of:)\uff0c\n// \u540e\u8005\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u5931\u6548 (release\u6a21\u5f0f\uff0c\u653e\u8fdb[AnyObject]\u6570\u7ec4\u4e2d\u7684\u53d8\u91cf\u4f1a\u88ab\u8bc6\u522b\u6210AnyObject\uff0c\u83b7\u53d6\u4e0d\u5230\u771f\u6b63\u7c7b\u578b)\nfunc className(_ any: Any?) -> String {\n    return \"\\(String(describing: object_getClass(any)))\"\n}\n\n// D:\u6570\u636e\u683c\u5f0f\nclass OneTableView<D: AnyObject> : UITableView, UITableViewDelegate, UITableViewDataSource {\n    \n    var list: [D] = []\n    \n    override init(frame: CGRect, style: Style) {\n        super.init(frame: frame, style: style)\n        registerCells()\n        self.separatorStyle = .none\n        self.backgroundColor = .clear\n        self.delegate = self\n        self.dataSource = self\n        if #available(iOS 15.0, *) {\n            self.sectionHeaderTopPadding = 0\n        }\n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n    // \u5b50\u7c7b\u590d\u5199\n    // \u5b9a\u4e49\u5217\u8868\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u548ccell\u7c7b\u578b\uff0c\u6570\u636e\u7c7b\u578b\u8981\u7528className()\u5305\u8d77\u6765\uff0c\u4ee5\u7528\u4f5cMap\u7684key\n    // \u6570\u636e\u7c7b\u578b\u4e0ecell\u7c7b\u578b\u4e00\u5bf9\u4e00\uff0c\u6216\u591a\u5bf9\u4e00\n    open var dataCellDict:[AnyHashable: UITableViewCell.Type] {\n        return [:]\n    }\n    \n    // 1.\u6ce8\u518c\u7c7b\u578b\n    // \u6839\u636edataCellDict\u81ea\u52a8\u6ce8\u518c\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u590d\u5199\u3002\u9664\u975e\u7279\u6b8a\u60c5\u51b5\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u5bf9\u5e94\u591a\u79cdCell\u7c7b\u578b\n    open func registerCells() {\n        for cellType in dataCellDict.values {\n            register(cellType, forCellReuseIdentifier: className(cellType))\n        }\n    }\n    \n    // 2.\u83b7\u53d6\u6570\u91cf\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return list.count\n    }\n    \n    // 3.\u83b7\u53d6\u9ad8\u5ea6\n    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {\n        let data = list[indexPath.row]\n        if let cellType = dataCellDict[className(data)] as? BaseOneTableViewCell.Type {\n            return cellType.cellHeight\n        } else {\n            print(\"heightForRowAt cellType = nil \\(data)\")\n        }\n        return 0\n    }\n    \n    // 4.\u83b7\u53d6cell\n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        let data = list[indexPath.row]\n        if let cellType = dataCellDict[className(data)] {\n            return dequeueReusableCell(withIdentifier: className(cellType), for: indexPath)\n        } else {\n            print(\"cellForRowAt cellType = nil \\(data)\")\n        }\n        return UITableViewCell()\n    }\n    \n    // 5.cell\u5373\u5c06\u5c55\u793a\uff0c\u5237\u65b0\u6570\u636e\n    func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {\n        cell.selectionStyle = .none\n        if let cell = cell as? BaseOneTableViewCell {\n            cell.setAnyObject(model: list[indexPath.row])\n        }\n    }\n    \n    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n        // no op\n    }\n\n}\n\n```\n\n**\u6570\u636e\u6e90**\n\u6570\u636e\u6e90\u7528\u4e00\u4e2a\u5217\u8868\u4fdd\u5b58`var list: [D] = []`\uff0c\u6570\u636e\u7c7b\u578b\u7684\u6cdb\u578b\u662fAnyObject\u7684\u5b50\u7c7b`D: AnyObject>`\u3002\u56e0\u4e3a\u8981\u652f\u6301\u591a\u79cd\u7c7b\u578b\u6570\u636e\uff0c\u6240\u4ee5\u7528AnyObject\uff1b\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u7528AnyObject\uff0c\u8fd8\u8981\u52a0\u6cdb\u578b\u5462\uff1f\u8fd9\u662f\u8003\u8651\u5230\u5927\u591a\u6570\u5217\u8868\u662f\u5355\u7c7b\u578b\u7684\uff0c\u4f7f\u7528\u6cdb\u578b\u53ef\u4ee5\u907f\u514d\u8ddfAnyObject\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\n\n**cell\u7c7b\u578b**\n\u9700\u8981\u6ce8\u518c\u7684cell\u7c7b\u578b\u4fdd\u5b58\u5728\u4e00\u4e2adict\u4e2d`dataCellDict:[AnyHashable: UITableViewCell.Type]`\uff0ckey\u662f\u6570\u636e\u7c7b\u578b\uff0cvalue\u662fcell\u7684\u7c7b\u578b\u3002\u56e0\u4e3aUI\u662f\u7531\u6570\u636e\u9a71\u52a8\u7684\uff0c\u5217\u8868\u4e2d\u5927\u90e8\u5206\u65b9\u6cd5\u63d0\u4f9bindexPath\u4f4d\u7f6e\u53c2\u6570\uff0c\u6839\u636e\u4f4d\u7f6e\u53ef\u4ee5\u83b7\u53d6\u5bf9\u5e94\u6570\u636e\u7c7b\u578b\uff0c\u6709\u4e86\u6570\u636e\u7c7b\u578b\u5c31\u53ef\u4ee5\u4ecedict\u4e2d\u67e5\u5230cell\u7684\u7c7b\u578b\u4e86\u3002\n\n**\u5355\u7c7b\u578b\u5217\u8868**\n\u5355\u7c7b\u578b\u5217\u8868\u5728OneTableView\u57fa\u7840\u4e0a\u7b80\u5355\u5c01\u88c5\u4e00\u4e0b\uff0c\u6570\u636e\u7c7b\u578b\u548ccell\u7c7b\u578b\u4f5c\u4e3a\u6cdb\u578b\u53c2\u6570\u76f4\u63a5\u5199\u5230\u7c7b\u7684\u5b9a\u4e49\u4e0a\uff0c\u91cd\u5199\u4e00\u4e0bdataCellDict\u3002\n```swift\n// \u53ea\u6709\u4e00\u79cdcell\u7684\u7b80\u5355\u5217\u8868 D:\u6570\u636e\u683c\u5f0f\uff0cC:Cell\u683c\u5f0f\nclass OneSimpleTableView<D: AnyObject, C: OneTableViewCell<D>>: OneTableView<D> {\n    \n    override var dataCellDict: [AnyHashable : UITableViewCell.Type] {\n        return [className(D.self): C.self]\n    }\n}\n```\n\n> \u6ce8\u610f\uff1a\u6570\u636e\u4e0d\u80fd\u76f4\u63a5\u4f5c\u4e3adict\u7684key\uff0c\u56e0\u4e3a\u4e0d\u662fAnyHashable\u7684\uff0c\u9700\u8981\u83b7\u53d6\u5b83\u7684\u7c7b\u578b\u3002\u4e00\u822c\u6765\u8bf4\u7528swift\u7684`type(of:)`\u65b9\u6cd5\uff0c\u4f46\u8fd9\u91cc\u6709\u4e00\u4e2a\u5de8\u5751\uff0c\u5728debug\u6a21\u5f0f\u4e0b\u5b83\u6ca1\u95ee\u9898\uff0c\u4f46\u662frelease\u6a21\u5f0f\u4e0b\u5f80[AnyObject]\u4e2d\u653e\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u6709\u4e00\u5b9a\u6982\u7387\u83b7\u53d6\u5230\u7684\u7c7b\u578b\u8fd8\u662fAnyObject\uff0c\u6362\u6210oc\u7684`object_getClass()`\u65b9\u6cd5\u5c31\u6ca1\u95ee\u9898\uff0c\u6240\u4ee5\u8fd9\u6709\u53ef\u80fd\u662fswift\u7684\u4e00\u4e2abug\u3002\n\n\u8fd9\u6837\u7528list\u548cdataCellDict\u5c01\u88c5\u540e\uff0cUITableView\u7684\u51e0\u4e2a\u6b65\u9aa4\uff1a1.\u6ce8\u518c\u7c7b\u578b 2.\u83b7\u53d6\u6570\u91cf 3.\u83b7\u53d6\u9ad8\u5ea6 4.\u83b7\u53d6cell \u90fd\u53ef\u4ee5\u5728\u57fa\u7c7b\u4e2d\u7edf\u4e00\u5b9e\u73b0\u4e86\uff0c\u8fd8\u5269\u4e0b\u7ed9cell\u586b\u5145\u6570\u636e\u3002\n\n# 2. UICollectionViewCell\u7684\u5c01\u88c5\n```swift\n\nclass BaseOneCollectionViewCell: UICollectionViewCell {\n    \n    class var cellHeight: CGFloat {\n        return 66\n    }\n    \n    func setAnyObject(model: AnyObject?) {\n        // no op\n    }\n    \n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        initView()\n    }\n    \n    required init?(coder aDecoder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n    open func initView() {\n        // no op\n    }\n}\n\nclass OneCollectionViewCell<D>: BaseOneCollectionViewCell {\n    \n    var model: D? {\n        didSet {\n            if let model = model {\n                didSetModel(model: model)\n            }\n        }\n    }\n    \n    override func setAnyObject(model: AnyObject?) {\n        self.model = model as? D\n    }\n    \n    open func didSetModel(model: D) {\n        // no op\n    }\n}\n\n```\n\n\u4e00\u822c\u6765\u8bf4\uff0ccell\u91cc\u9762\u4fdd\u5b58\u4e00\u4e2a\u6570\u636emodel\uff0c\u7c7b\u578b\u662f\u6cdb\u578b\u5c31\u53ef\u4ee5\u4e86\u3002\u7ed9cell\u586b\u5145\u6570\u636e\u65f6\uff0c\u9700\u8981\u5224\u65ad\u8fd9\u4e2acell\u662fOneCollectionViewCell<D>\u7c7b\u578b\u7684\uff0c\u4f46\u5b83\u7684\u5177\u4f53\u7c7b\u578b\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u7528is\u6216\u8005as\u64cd\u4f5c\u7b26\u5c31\u6ca1\u6cd5\u5224\u65ad\uff0c\u8fd9\u662f\u56e0\u4e3aswift\u4e0d\u652f\u6301\u6cdb\u578b\u7684\u4e0d\u786e\u5b9a\u7c7b\u578b\uff0c\u4e5f\u5c31\u662fJava\u91cc\u9762\u7684<?>\u3002\u53ea\u597d\u60f3\u4e86\u4e00\u4e2a\u6709\u70b9tricky\u7684\u65b9\u6cd5\uff0c\u62bd\u8c61\u4e00\u4e2a\u6ca1\u6709\u6cdb\u578b\u7684BaseOneCollectionViewCell\u57fa\u7c7b\u51fa\u6765\uff0c\u8c03\u7528\u5b83\u7684`setAnyObject()`\u65b9\u6cd5\u586b\u5145\u6570\u636e\uff0c\u7136\u540e\u5728\u5b50\u7c7bOneCollectionViewCell\u4e2d\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002\n\n# 3. \u57fa\u672c\u4f7f\u7528\n\n**\u7b80\u5355\u5217\u8868**\n\u7c7b\u578b\u5199\u5230\u7c7b\u5b9a\u4e49\u4e2d\uff0c\u81ea\u52a8\u6ce8\u518c\n```swift\nclass MyData {\n    var text: String?\n    init(_ text: String) {\n        self.text = text\n    }\n}\n\nclass MyCell: OneTableViewCell<MyData> {\n    \n    override func didSetModel(model: MyData) {\n        self.textLabel?.text = model.text\n    }\n}\n\n// MARK: \u53ea\u6709\u4e00\u79cd\u7c7b\u578b\u7684\u7b80\u5355\u5217\u8868\nclass MyTableView: OneSimpleTableView<MyData, MyCell> {\n    override init(frame: CGRect, style: Style) {\n        super.init(frame: frame, style: style)\n        \n        var res:[MyData] = []\n        for i in 0...10 {\n            let d = MyData(\"row \\(i)\")\n            res.append(d)\n        }\n        self.list = res\n        self.reloadData()\n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n}\n\n```\n**\u591a\u7c7b\u578b\u5217\u8868**\n\u590d\u5199dataCellDict\u6ce8\u518c\u591a\u79cd\u7c7b\u578b\n```swift// MARK: \u591a\u79cd\u7c7b\u578b\u7684\u5217\u8868\u5e26\u5237\u65b0\nclass MyMultiTableView: OneTableView<AnyObject> {\n    \n    override var dataCellDict: [AnyHashable : UITableViewCell.Type] {\n        return [\n            className(MyData.self): MyCell.self,\n            className(MyData1.self): MyCell1.self,\n        ]\n    }\n\n   override init(frame: CGRect, style: Style) {\n        super.init(frame: frame, style: style)\n        \n        var res:[MyData] = []\n            for i in 0...5 {\n                let d = MyData(\"type0 \\(i)\")\n                res.append(d)\n                \n                let d1 = MyData1(\"type1 \\(i)\")\n                res.append(d1)\n            }\n        self.list = res\n        self.reloadData()\n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n}\n```\n# 4. \u4e0b\u62c9\u5237\u65b0\u548c\u52a0\u8f7d\u66f4\u591a\n\u4f7f\u7528MJRefresh\u5e93\uff0c\u5728pod\u4e2d\u6dfb\u52a0  `pod 'MJRefresh'`\uff0c\u5c01\u88c5\u6210OneMJTableView\n```swift\n// \u5e26\u4e0b\u62c9\u5237\u65b0\u548c\u4e0a\u6ed1\u52a0\u8f7d\u66f4\u591a\u529f\u80fd\nclass OneMJTableView<D: AnyObject>: OneTableView<D> {\n    \n    var pageIndex = 0\n    \n    override init(frame: CGRect, style: Style) {\n        super.init(frame: frame, style: style)\n        if hasRefresh() {\n            self.mj_header = MJRefreshNormalHeader(refreshingTarget: self, refreshingAction: #selector(loadNewData))\n        }\n        if hasLoadMore() {\n            self.mj_footer = MJRefreshAutoStateFooter(refreshingTarget: self, refreshingAction: #selector(loadMoreData))\n            self.mj_footer?.isHidden = true\n        }\n        DispatchQueue.main.async {\n            if self.willRequestOnInit() {\n                self.mj_header?.beginRefreshing()\n                self.loadNewData()\n            }\n        }\n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n    @objc func loadNewData() {\n        pageIndex = 0\n        doRequest()\n    }\n    \n    @objc func loadMoreData() {\n        doRequest()\n    }\n    \n    open func hasRefresh() -> Bool {\n        return true\n    }\n    \n    open func hasLoadMore() -> Bool {\n        return true\n    }\n    \n    open func willRequestOnInit() -> Bool {\n        return true\n    }\n    \n    open func doRequest() {\n        // no op\n    }\n    \n    open func handleSuccess(list: [D]?, isNoMore: Bool) {\n        guard let list = list else {\n            handleFail()\n            return\n        }\n        if pageIndex == 0 {\n            self.list = list\n            self.reloadData()\n            pageIndex += 1\n        } else {\n            self.list.append(contentsOf: list)\n            self.reloadData()\n            pageIndex += 1\n        }\n        self.mj_header?.endRefreshing()\n        \n        self.mj_footer?.isHidden = self.list.isEmpty\n        if isNoMore {\n            self.mj_footer?.endRefreshingWithNoMoreData()\n        } else {\n            self.mj_footer?.endRefreshing()\n        }\n    }\n\n    open func handleFail() {\n        self.mj_header?.endRefreshing()\n        self.mj_footer?.endRefreshingWithNoMoreData()\n        self.mj_footer?.isHidden = self.list.isEmpty\n    }\n}\n```\n\u6a21\u62df\u8c03\u63a5\u53e3\u6570\u636e\uff0c\u4f7f\u7528\u5982\u4e0b\n```swift// MARK: \u591a\u79cd\u7c7b\u578b\u7684\u5217\u8868\u5e26\u5237\u65b0\nclass MyMultiTableView: OneMJTableView<AnyObject> {\n    \n    override var dataCellDict: [AnyHashable : UITableViewCell.Type] {\n        return [\n            className(MyData.self): MyCell.self,\n            className(MyData1.self): MyCell1.self,\n        ]\n    }\n    \n    override func doRequest() {\n        DispatchQueue.main.asyncAfter(deadline: .now() + 1) {\n            var res:[AnyObject] = []\n            for i in 0...5 {\n                let d = MyData(\"type0 \\(i)\")\n                res.append(d)\n                \n                let d1 = MyData1(\"type1 \\(i)\")\n                res.append(d1)\n            }\n            self.handleSuccess(list: res, isNoMore: self.pageIndex > 2)\n        }\n    }\n}\n\n```\n# 5. UICollectionView\nUICollectionView\u5c01\u88c5\u548c\u7528\u6cd5\u4e0eUITableView\u57fa\u672c\u76f8\u540c\uff0c\u4e0d\u518d\u8d58\u8ff0\uff0c\u6211\u90fd\u653e\u5230\u9879\u76ee\u91cc\u4e86\u3002\n![\u622a\u5c4f2021-12-10 \u4e0b\u53483.11.23.png](https://rome753.github.io/cdn/1896166-6f93ca94fa69cc87.png)\n\n# 6. Github\n[Github\u5730\u5740](https://github.com/rome753/OneTableView)\n\n> \u6ce8\u610f\uff1a\u5982\u679c\u5217\u8868\u8981\u6dfb\u52a0\u66f4\u591a\u65b9\u6cd5\uff0c\u5982\u70b9\u51fb\u4e8b\u4ef6`func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)`\u3001\u5de6\u6ed1\u5220\u9664\u7b49\uff0c\u9700\u8981\u5728\u57fa\u7c7bOneTableView\u4e2d\u6dfb\u52a0\u7a7a\u7684\u5b9e\u73b0\u624d\u884c\uff0c\u76f4\u63a5\u5728\u5b50\u7c7b\u4e2d\u5b9e\u73b0\u662f\u4e0d\u4f1a\u88ab\u7cfb\u7edf\u8c03\u7528\u7684\u3002\u8fd9\u5e94\u8be5\u662fswift\u534f\u8bae\u4e0e\u7ee7\u627f\u7684\u7279\u6027\u3002\n", "mt_excerpt": "", "title": "iOS-UITableView\u548cUICollectionView\u5b9e\u73b0\u591a\u7c7b\u578b\u53ef\u5237\u65b0\u5217\u8868", "dateCreated": "20220718T17:48:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491392.html", "permalink": "https://www.cnblogs.com/rome753/p/16491392.html", "postid": 16491392, "description": "```swift\n    // \u76f4\u63a5\u6dfb\u52a0\u5ef6\u65f6\u4efb\u52a1\n    DispatchQueue.main.asyncAfter(deadline: .now() + 0.3) {\n    }\n```\n\n```swift\n    // \u521d\u59cb\u5316\u5ef6\u65f6\u4efb\u52a1\n    var dispatchWorkItem = DispatchWorkItem {\n    }\n    // \u6dfb\u52a0\u5ef6\u65f6\u4efb\u52a1\n    DispatchQueue.main.asyncAfter(deadline: .now() + 0.2, execute: dispatchWorkItem)\n    // \u53d6\u6d88\u5ef6\u65f6\u4efb\u52a1\n    dispatchWorkItem.cancel()\n```\n", "mt_excerpt": "", "title": "iOS-Swift-\u5ef6\u65f6\u4efb\u52a1\u548c\u53d6\u6d88", "dateCreated": "20220718T17:47:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491397.html", "permalink": "https://www.cnblogs.com/rome753/p/16491397.html", "postid": 16491397, "description": "![image.png](https://rome753.github.io/cdn/1896166-caad6032e4d83764.png)\n\n\u5f53\u524dView\u91cc\u9762\u6709\u4e24\u4e2aView\uff0c\u7eff\u8272\u7684bigView\u548c\u7ea2\u8272\u7684smallView\uff0csmallView\u5728bigView\u91cc\u9762\u3002\u73b0\u5728\u8ba9bigView\u6267\u884c\u4e00\u6bb5\u79fb\u52a8\u52a8\u753b\uff0c\u7136\u540e\u7ed9bigView\u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6\uff0c\u53d1\u73b0\u70b9\u51fb\u4e8b\u4ef6\u65e0\u6548\u3002\n\n\u56e0\u4e3a**iOS\u52a8\u753b\u4e2d\u7684View\u70b9\u51fb\u4e8b\u4ef6\u65e0\u6548**\u3002\n\n\u539f\u56e0\u662fiOS\u91cc\u51e0\u4e4e\u6240\u6709\u7684View\u52a8\u753b\u662f\u90fd\u57fa\u4e8elayer\u5b9e\u73b0\u7684\uff0cframe\u5728\u52a8\u753b\u5f00\u59cb\u4f1a\u76f4\u63a5\u53d8\u6210\u7ec8\u70b9\u72b6\u6001\u3002\u52a8\u753b\u8fc7\u7a0b\u4e2dbigView\u7684frame\u4e0d\u4f1a\u53d8\u5316\uff0c\u4e5f\u4e0d\u80fd\u63a5\u6536\u70b9\u51fb\u4e8b\u4ef6\u3002\u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6\u53ef\u4ee5\u5728bigView\u7684\u7236view\u4e5f\u5c31\u662f\u5f53\u524dview\u4e2d\u91cd\u5199touchesBegan() \u65b9\u6cd5\uff0c\u5224\u65ad\u70b9\u51fb\u4f4d\u7f6e\u5728\u54ea\u4e2aview\u91cc\u9762\u3002\n\n\u6dfb\u52a0\u5b8ctouchesBegan()\uff0c\u4f1a\u53d1\u73b0\u70b9\u51fbbigView\u52a8\u753b\u8fd9\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u89e6\u53d1\uff0c\u539f\u56e0\u662f\u52a8\u753b\u4e2d\u7684layer\u4f1a\u5c4f\u853d\u89e6\u6478\u4e8b\u4ef6\u3002\u8fd9\u65f6\u6709\u4e24\u79cd\u65b9\u6cd5\uff08\u6548\u679c\u76f8\u540c\uff09\uff1a\n- \u7ed9UIView.animate() \u65b9\u6cd5\u6dfb\u52a0options: .allowUserInteraction\u53c2\u6570\n- \u8bbe\u7f6ebigView\u7684isUserInteractionEnabled = false\n\n\u8fd9\u6837\u70b9\u51fb\u4e8b\u4ef6\u5c31\u4f1a\u4f20\u9012\u7ed9\u5f53\u524dview\n\n```swift\nclass OurView: UIView {\n    \n    lazy var bigView = UIView(frame: CGRect(x: 100, y: 200, width: 200, height: 200))\n    \n    lazy var smallView = UIView(frame: CGRect(x: 100, y: 100, width: 100, height: 100))\n    \n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        backgroundColor = .white\n        \n        bigView.backgroundColor = .green\n        addSubview(bigView)\n        \n        smallView.backgroundColor = .red\n        bigView.addSubview(smallView)\n        \n        let tap = UITapGestureRecognizer(target: self, action: #selector(doClick))\n        bigView.isUserInteractionEnabled = true\n        bigView.addGestureRecognizer(tap)\n        \n        UIView.animate(withDuration: 100, delay: 0, options: .allowUserInteraction) {\n            self.bigView.transform = CGAffineTransform(translationX: 0, y: 300)\n        } completion: { _ in\n\n        }\n\n    }\n    \n    @objc func doClick() {\n        print(\"clicked\")\n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n}\n```\n\n\u63a5\u4e0b\u6765\u5224\u65ad\u70b9\u51fb\u4f4d\u7f6e\u5728\u54ea\u4e2aView\u91cc\u3002\n\u7528`touch.location(in: self)`\u83b7\u53d6\u89e6\u6478\u70b9\u5728\u5f53\u524dview\u4e2d\u7684\u4f4d\u7f6e\uff1b\u7528bigView.layer.presentation()?.frame\u53ef\u4ee5\u83b7\u53d6\u52a8\u753b\u4e2d\u7684layer\u7684frame\u3002\n\n- \u5982\u679c\u8981\u5224\u65ad\u662f\u5426\u70b9\u51fb\u4e86bigView\uff0c\u76f4\u63a5\u7528`movingFrame.contains(point)`\u5373\u53ef\u3002\n- \u5982\u679c\u8981\u5224\u65ad\u662f\u5426\u70b9\u51fb\u4e86smallView\uff0c\u4e5f\u5c31\u662f\u52a8\u753b\u4e2d\u7684view\u7684\u5b50view\uff0c\u90a3\u4e48\u9700\u8981\u8fdb\u884c\u5750\u6807\u8f6c\u6362\u624d\u80fd\u5f97\u5230smallView\u7684\u5b9e\u65f6frame\uff1a\u7528offsetBy\u65b9\u6cd5\u8f6c\u6362smallView.frame\uff0c\u6700\u540e\u7528`smallFrame.contains(point)`\u5224\u65ad\uff1a\n\n```swift\n    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {\n        for touch in touches {\n            var point = touch.location(in: self)\n            if let movingFrame = bigView.layer.presentation()?.frame {\n                let f = smallView.frame\n                var smallFrame = f.offsetBy(dx: movingFrame.minX, dy: movingFrame.minY)\n                let contains = smallFrame.contains(point)\n                print(\"smallView touches: \\(contains)\")\n            }\n            break;\n    }\n```\n", "mt_excerpt": "", "title": "iOS-Swift-\u7ed9\u52a8\u753b\u6dfb\u52a0\u70b9\u51fb\u4e8b\u4ef6", "dateCreated": "20220718T17:47:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491386.html", "permalink": "https://www.cnblogs.com/rome753/p/16491386.html", "postid": 16491386, "description": "\u4e24\u4e2aUILabel\u653e\u5728\u540c\u4e00\u884c\uff0c\u9700\u8981\u8bbe\u7f6e\u5b83\u4eec\u7684\u6297\u538b\u7f29\u548c\u6297\u62c9\u4f38\u5c5e\u6027\u3002\n\n```swift\nclass MyView: UIView {\n \n    lazy var leftLabel = UILabel()\n    lazy var rightLabel = UILabel()\n    \n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        \n        backgroundColor = .lightGray\n        \n        leftLabel.text = \"\u5de6\u8fb9\u7684\u6587\u6848\"\n        leftLabel.textColor = .red\n        leftLabel.backgroundColor = .red.withAlphaComponent(0.2)\n        rightLabel.text = \"\u53f3\u8fb9\u7684\u6587\u6848\"\n        rightLabel.textColor = .blue\n        rightLabel.backgroundColor = .blue.withAlphaComponent(0.2)\n        \n        leftLabel.addTo(self).snp.makeConstraints { make in\n            make.left.equalToSuperview()\n            make.centerY.equalToSuperview()\n        }\n        rightLabel.addTo(self).snp.makeConstraints { make in\n            make.left.equalTo(leftLabel.snp.right)\n            make.right.equalToSuperview()\n            make.centerY.equalToSuperview()\n        }\n        \n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n}\n```\n\n\u77ed\u6587\u5b57\u60c5\u51b5\uff1a\u9ed8\u8ba4\u62c9\u4f38\u5de6\u8fb9\n\n![\u622a\u5c4f2022-03-21 \u4e0b\u53483.00.23.png](https://rome753.github.io/cdn/1896166-6e2e6fd161c39696.png)\n\n\u77ed\u6587\u5b57\u3001\u5de6\u8fb9\u6297\u62c9\u4f38\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u9ad8\uff1a\u62c9\u4f38\u53f3\u8fb9\n\n```swift\n        leftLabel.setContentHuggingPriority(.defaultHigh, for: .horizontal)\n```\n![\u622a\u5c4f2022-03-21 \u4e0b\u53487.33.35.png](https://rome753.github.io/cdn/1896166-1b64a6dbfd2df438.png)\n\n\u6587\u5b57\u8d85\u957f\uff1a\u9ed8\u8ba4\u538b\u7f29\u53f3\u8fb9\n\n![\u622a\u5c4f2022-03-21 \u4e0b\u53487.29.07.png](https://rome753.github.io/cdn/1896166-87c7b24bec162337.png)\n\n\u6587\u5b57\u8d85\u957f\u3001\u5de6\u8fb9\u6297\u538b\u7f29\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u4f4e\uff1a\u538b\u7f29\u5de6\u8fb9\n\n```swift\n        leftLabel.setContentCompressionResistancePriority(.defaultLow, for: .horizontal)\n```\n![\u622a\u5c4f2022-03-21 \u4e0b\u53487.30.22.png](https://rome753.github.io/cdn/1896166-4ef4429f4df24532.png)\n\n# \u603b\u7ed3\n\n1. setContentHuggingPriority\u662f\u6297\u62c9\u4f38\u5c5e\u6027\uff0c\u5c5e\u6027\u4f4e\u66f4\u5bb9\u6613\u88ab\u62c9\u4f38\uff0c\u88ab\u62c9\u4f38\u662f\u6307\u63a7\u4ef6\u7684\u5bbd\u5ea6\u8d85\u8fc7\u6587\u5b57\u5bbd\u5ea6\uff0c\u7528\u7a7a\u767d\u586b\u5145\n2. setContentCompressionResistancePriority\u662f\u6297\u538b\u7f29\u5c5e\u6027\uff0c\u5c5e\u6027\u4f4e\u66f4\u5bb9\u6613\u88ab\u538b\u7f29\uff0c\u88ab\u538b\u7f29\u662f\u6307\u63a7\u4ef6\u7684\u5bbd\u5ea6\u4e0d\u8db3\u4ee5\u653e\u4e0b\u6587\u5b57\uff0c\u7528\u7701\u7565\u53f7...\u4ee3\u66ff\n3. \u540c\u4e00\u4e2a\u63a7\u4ef6\u7684\u62c9\u4f38\u548c\u538b\u7f29\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u540c\u65f6\u8bbe\u7f6esetContentHuggingPriority\u4e0esetContentCompressionResistancePriority\uff0c\u4e92\u4e0d\u51b2\u7a81\n4. \u57fa\u4e8e\u5e03\u5c40\u5148\u653e\u5de6\u8fb9\u6587\u5b57\u7684\u60c5\u51b5\uff0c\u9ed8\u8ba4\u62c9\u4f38\u5de6\u8fb9\u3001\u538b\u7f29\u53f3\u8fb9\u3002\u4e5f\u5c31\u662f\u9ed8\u8ba4\u5de6\u8fb9\u7684\u6297\u62c9\u4f38\u5c5e\u6027\u66f4\u4f4e\uff0c\u53f3\u8fb9\u7684\u62c9\u538b\u7f29\u5c5e\u6027\u66f4\u4f4e\n", "mt_excerpt": "", "title": "iOS-Swift-setContentCompressionResistancePriority\u4e0esetContentHuggingPri", "dateCreated": "20220718T17:46:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491389.html", "permalink": "https://www.cnblogs.com/rome753/p/16491389.html", "postid": 16491389, "description": "![image.png](https://rome753.github.io/cdn/1896166-caad6032e4d83764.png)\n\n\u5f53\u524dView\u91cc\u9762\u6709\u4e24\u4e2aView\uff0c\u7eff\u8272\u7684bigView\u548c\u7ea2\u8272\u7684smallView\uff0csmallView\u5728bigView\u91cc\u9762\u3002\u73b0\u5728\u8981\u5728\u5f53\u524dView\u7684touchesBegan\u65b9\u6cd5\u5224\u65ad\u70b9\u51fb\u4f4d\u7f6e\u662f\u5426\u5728\u6700\u91cc\u5c42\u7684smallView\u91cc\u3002\n\n\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5224\u65ad\u3002\u5176\u5b9e\u5b83\u4eec\u672c\u8d28\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6700\u91cd\u8981\u7684\u662f\u8f6c\u6362\u53c2\u8003\u7cfb\u3002\n\n- \u8981\u60f3\u5224\u65adpoint\u662f\u5426\u5728frame\u91cc\u9762\uff0c\u5fc5\u987b\u4fdd\u8bc1\u5b83\u4eec\u662f\u540c\u4e00\u4e2a\u53c2\u8003\u7cfb\u3002\n- frame\u7684\u5750\u6807\u662fview\u5728\u5b83\u7684\u7236view\u53c2\u8003\u7cfb\u91cc\u7684\u5750\u6807\u3002\n- touch.location(in: target)\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u70b9\u51fb\u4f4d\u7f6e\u5728target\u53c2\u8003\u7cfb\u91cc\u7684\u5750\u6807\u3002target\u53ef\u4ee5\u662f\u5c4f\u5e55\u4e0a\u4efb\u610f\u7684view\u3002\n- view.convert(point, to: target)\u65b9\u6cd5\u53ef\u4ee5\u5c06\uff1apoint\u5728view\u91cc\u7684\u5750\u6807\u8f6c\u6362\u6210 -> point\u5728\u53e6\u4e00\u4e2atarget\u91cc\u7684\u5750\u6807\u3002\u8fd9\u4e24\u4e2aview\u53ef\u4ee5\u662f\u5c4f\u5e55\u4e0a\u4efb\u610f\u7684view\u3002\n\n\n```swift\nclass OurView: UIView {\n    \n    lazy var bigView = UIView(frame: CGRect(x: 100, y: 200, width: 200, height: 200))\n    \n    lazy var smallView = UIView(frame: CGRect(x: 100, y: 100, width: 100, height: 100))\n    \n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        backgroundColor = .white\n        \n        bigView.backgroundColor = .green\n        addSubview(bigView)\n        \n        smallView.backgroundColor = .red\n        bigView.addSubview(smallView)\n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {\n        for touch in touches {\n            // \u65b9\u6cd51\uff1a\u7528bigView\u53c2\u8003\u7cfb\n            let point = touch.location(in: bigView)\n            let contains = smallView.frame.contains(point)\n            print(\"smallView touches: \\(contains)\")\n\n            // \u65b9\u6cd52\uff1a\u7528smallView\u53c2\u8003\u7cfb\n            let point = touch.location(in: smallView)\n            let contains = smallView.bounds.contains(point)\n            print(\"smallView touches: \\(contains)\")\n\n            // \u65b9\u6cd53\uff1a\u83b7\u53d6\u70b9\u51fb\u4f4d\u7f6e\u5728self\u53c2\u8003\u7cfb\u5750\u6807\uff0c\u7528convert\u65b9\u6cd5\u8f6c\u6362\u6210bigView\u53c2\u8003\u7cfb\u5750\u6807\n            var point = touch.location(in: self)\n            point = self.convert(point, to: bigView)\n            let contains = smallView.frame.contains(point)\n            print(\"smallView touches: \\(contains)\")\n\n            // \u65b9\u6cd54\uff1a\u83b7\u53d6\u70b9\u51fb\u4f4d\u7f6e\u5728self\u53c2\u8003\u7cfb\u5750\u6807\uff0c\u624b\u52a8\u8f6c\u6362\u6210bigView\u53c2\u8003\u7cfb\u5750\u6807\n            var point = touch.location(in: self)\n            point.x -= bigView.frame.minX\n            point.y -= bigView.frame.minY\n            let contains = smallView.frame.contains(point)\n            print(\"smallView touches: \\(contains)\")\n\n            break\n        }\n    }\n}\n```\n", "mt_excerpt": "", "title": "iOS-Swift\u70b9\u51fb\u4f4d\u7f6e\u5224\u65ad\u548c\u5750\u6807\u8f6c\u6362", "dateCreated": "20220718T17:46:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491376.html", "permalink": "https://www.cnblogs.com/rome753/p/16491376.html", "postid": 16491376, "description": "\u534f\u8baeprotocol\u4e00\u822c\u7528\u6765\u505a\u56de\u8c03\u76d1\u542c\uff0c\u5f53\u591a\u4e2a\u5730\u65b9\u9700\u8981\u6dfb\u52a0\u56de\u8c03\u76d1\u542c\u65f6\uff0c\u5c31\u8981\u7528Set\u96c6\u5408\u6765\u7ba1\u7406\uff0cSet\u4e2d\u7684\u5143\u7d20\u9700\u8981\u5b9e\u73b0Hashable\u65b9\u6cd5\uff0c\u800c\u534f\u8baeprotocol\u662f\u4e0d\u80fd\u5b9e\u73b0Hashable\u65b9\u6cd5\u7684\uff0c\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef\u3002\n```\nProtocol 'MyProtocol' as a type cannot conform to 'Hashable'\n```\n![\u622a\u5c4f2021-10-31 \u4e0b\u53485.23.27.png](https://rome753.github.io/cdn/1896166-39208697e6b3d672.png)\n\n\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u9700\u8981\u8f6c\u6362\u4e00\u4e0b\u601d\u8def\u3002protocol\u4e0d\u80fd\u5b9e\u73b0Hashable\u65b9\u6cd5\uff0c\u4f46\u662fprotocol\u7684\u5b9e\u73b0\u7c7b\u5b8c\u5168\u53ef\u4ee5\u5b9e\u73b0Hashable\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u5e94\u8be5\u7528Set<MyProtocol>\u4fdd\u5b58\uff0c\u800c\u662f\u7528Set<AnyHashable>\uff0c\u6dfb\u52a0\u5220\u9664\u76d1\u542c\u65f6\u64cd\u4f5cSet\uff0c\u904d\u5386\u76d1\u542c\u65f6\u901a\u8fc7compactMap\u5c06AnyHashable\u8f6c\u6362\u6210MyProtocol\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a\n\n```swift\n\nprotocol MyProtocol: NSObjectProtocol {\n    func foo()\n}\n\nvar protocols: Set<AnyHashable> = []\n\nvar protocolList: [MyProtocol] {\n    return protocols.compactMap { $0 as? MyProtocol }\n}\n\nfunc addOne(_ p: AnyHashable) {\n    protocols.insert(p)\n}\n\nfunc removeOne(_ p: AnyHashable) {\n    protocols.remove(p)\n}\n\nfunc notifyAll() {\n    for p in protocolList {\n        p.foo()\n    }\n}\n\nclass MyView: UIView, MyProtocol {\n    \n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        addOne(self)\n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n    func foo() {\n        \n    }\n}\n```\n", "mt_excerpt": "", "title": "iOS-swift-\u5c06protocol\u534f\u8bae\u6dfb\u52a0\u5230set\u96c6\u5408\u4e2d", "dateCreated": "20220718T17:45:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491381.html", "permalink": "https://www.cnblogs.com/rome753/p/16491381.html", "postid": 16491381, "description": "\n\n\u539f\u6765\u7528GPUImage\u5b9e\u73b0\uff0c\u91c7\u7528\u7684[\u8fd9\u7bc7\u535a\u5ba2](http://llyblog.com/2020/01/04/iOS%E5%9F%BA%E4%BA%8EGPUImage%E5%B8%A6Alpha%E7%9A%84mp4%E6%92%AD%E6%94%BE%E6%96%B9%E6%A1%88/)\u4ecb\u7ecd\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u6709\u4e24\u4e2a\u6bd4\u8f83\u4e25\u91cd\u7684\u95ee\u9898\uff1a\n- App\u542f\u52a8\u540e\u7b2c\u4e00\u6b21\u4f7f\u7528\u64ad\u653e\u5668\u65f6\u4f1a\u9020\u6210\u4e3b\u7ebf\u7a0b\u5361\u4f4f1~5\u79d2\uff0c\u8d8a\u8001\u7684\u673a\u578b\u8d8a\u957f\uff0c\u7b2c\u4e8c\u6b21\u548c\u4ee5\u540e\u5c31\u5b8c\u5168\u4e0d\u5361\uff0c\u76f4\u5230\u4e0b\u6b21\u542f\u52a8\u3002\u8fd9\u5e94\u8be5\u662fGPUImage\u67d0\u5904\u521d\u59cb\u5316\u9020\u6210\u7684\uff0c\u6211\u6ca1\u6709\u627e\u5230\u5177\u4f53\u4f4d\u7f6e\u3002\n- \u64ad\u653e\u67d0\u4e9b\u89c6\u9891\u65f6\uff0c\u753b\u9762\u4e2d\u4eae\u767d\u8272\u7684\u4f4d\u7f6e\u4f1a\u51fa\u73b0\u201c\u8fc7\u66dd\u201d\u5bfc\u81f4\u770b\u4e0d\u6e05\u7ec6\u8282\uff0c\u539f\u89c6\u9891\u662f\u6b63\u5e38\u7684\uff0c\u6211\u770b\u4e86\u4e0b\u7740\u8272\u5668\u91cc\u9762\u5e76\u6ca1\u6709\u8c03\u6574\u989c\u8272\u6216\u8005\u4eae\u5ea6\uff0c\u6240\u4ee5\u8fd9\u5e94\u8be5\u662fGPUImageMovie\u89c6\u9891\u89e3\u7801\u9020\u6210\u7684\u3002\n\n\u6211\u53ea\u597d\u641c\u4e86\u4e00\u4e0b\u56fd\u5916\u7684\u505a\u6cd5\uff0c\u627e\u5230\u4e86[medium\u4e0a\u7684\u8fd9\u7bc7\u6587\u7ae0](https://medium.com/@quentinfasquel/ios-transparent-video-with-coreimage-52cfb2544d54)\uff0c\u5b83\u4f7f\u7528iOS\u81ea\u5e26\u7684CoreImage\u5904\u7406\u6bcf\u4e00\u5e27\u56fe\u50cf\uff0c\u901a\u8fc7AVVideoComposition\u5408\u6210\u89c6\u9891\uff0c\u6ee4\u955c\u7528metal\u5b9e\u73b0\uff0c\u6027\u80fd\u548c\u663e\u793a\u6548\u679c\u90fd\u5f88\u597d\u3002\u6211\u5c06\u8fd9\u7bc7\u6587\u7ae0\u7ffb\u8bd1\u4e00\u4e0b\u3002\n\n---\n\n# 1 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u89c6\u9891\n\n\u901a\u7528\u7684\u89c6\u9891\u683c\u5f0f\uff0c\u81f3\u5c11AVPlayer\u80fd\u89e3\u7801\u7684\u89c6\u9891\u683c\u5f0f\u4e0d\u5e26Alpha\u900f\u660e\u901a\u9053\uff0c\u6211\u4eec\u9700\u8981\u666e\u901a\u7684\u89c6\u9891\u80fd\u5e26Alpha\u900f\u660e\u4fe1\u606f\u3002\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\u6700\u5e38\u89c1\u7684\u662f\u201c\u7eff\u5e55\u201d\uff0c\u5982\u679c\u4e0d\u9650\u5236\u989c\u8272\u5c31\u7528\u53e6\u4e00\u79cd\u4e0d\u5e38\u89c1\u7684\u65b9\u6cd5\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![image.png](https://rome753.github.io/cdn/1896166-7839c037c9b869b4.png)\n\n> \u4e00\u4e9b\u8f6f\u4ef6\u5982 Autodesk 3ds Max \u6216 Adobe After Effects \u80fd\u8f93\u51fa\u5e26Alpha\u900f\u660e\u901a\u9053\u7684\u89c6\u9891\uff0c\u7528 Adobe Premiere \u521b\u5efa\u8fd9\u79cd\u89c6\u9891\u4e5f\u5f88\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u592a\u591a\u77e5\u8bc6\u3002\n\n# 2 \u64ad\u653e\u89c6\u9891\n\u719f\u6089AVFoundation\u7684\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u90e8\u5206\u3002\n\n\u5728\u4e00\u4e2a\u5355\u9875\u9762\u7684\u5de5\u7a0bViewController\u4e2d\uff0c\u6dfb\u52a0\u4e00\u4e2a\u89c6\u9891\u64ad\u653e\u5668\u3002\n\n```swift\nimport AVFoundation\n// ...\n  override func viewDidLoad() {\n// ...\n    let videoUrl = Bundle.main.url(forResource: \"playdoh-bat\", withExtension: \"mp4\")!\n    let playerItem = AVPlayerItem(url: videoUrl)\n    let player = AVPlayer(playerItem: playerItem)\n    let playerLayer = AVPlayerLayer(player: player)\n    playerLayer.bounds = view.bounds\n    playerLayer.position = view.center\n    view.layer.addSublayer(playerLayer)\n\n    player.play()\n  }\n```\n\n# 3 \u7528CoreImage\u7ed9\u89c6\u9891\u6dfb\u52a0filter\nCoreImage\u6700\u9177\u7684\u4e00\u70b9\u662f\u5b83\u80fd\u5904\u7406\u591a\u79cd\u683c\u5f0f\u7684\u56fe\u50cf\uff1aCoreGraphics\u91cc\u7684CGImage\u3001UIKit\u91cc\u7684UIImage\uff0c\u751a\u81f3CoreVideo\u91cc\u7684CVImageBuffer\u548cCVPixelBuffers\u3002\n\nAVFoundation\u771f\u7684\u5f88\u65b9\u4fbf\u3002\u5982\u679c\u4f60\u8ddf\u6211\u4e00\u6837\u542c\u8fc7AVVideoComposition\u4f46\u4ece\u672a\u5b9e\u9645\u4f7f\u7528\uff0c\u8fd9\u90e8\u5206\u5c31\u5f88\u6709\u8da3\u3002\n\n> \u6ce8\u610f\uff1a\u542c\u8d77\u6765\u96be\u4ee5\u7f6e\u4fe1AVVideoComposition\u5e76\u4e0d\u662fAVComposition\u7684\u5b50\u7c7b\u3002\u540e\u8005\u7528\u4e8e\u5408\u5e76\u591a\u4e2a\u6587\u4ef6\u4e2d\u7684\u5a92\u4f53\u6570\u636e\u3002AVVideoComposition\u7528\u6765\u5408\u5e76\u5e27\u3002\n\n[\u82f9\u679c\u5b98\u65b9](https://developer.apple.com/library/content/documentation/GraphicsImaging/Reference/CoreImageFilterReference/)\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217CIFilters\u3002\u5982\u4f55\u5728\u6211\u4eec\u7684\u89c6\u9891\u4e2d\u5e94\u7528CIFilter\u5982\u4e0b\uff1a\n\n```swift\n  override func viewDidLoad() {\n    // ...\n    playerItem.videoComposition = createVideoComposition(for: playerItem)\n    player.play()\n  }\n\n  func createVideoComposition(for playerItem: AVPlayerItem) -> AVVideoComposition {\n    let composition = AVVideoComposition(asset: playerItem.asset, applyingCIFiltersWithHandler: { request in\n      // Here we can use any CIFilter\n      guard let filter = CIFilter(name: \"CIColorPosterize\") else {\n        return request.finish(with: NSError())\n      }\n      filter.setValue(request.sourceImage, forKey: kCIInputImageKey)\n      return request.finish(with: filter.outputImage!, context: nil)\n    })\n    return composition\n  }\n```\n\n\u7136\u800c\u6211\u4eec\u7684\u89c6\u9891\u5e76\u4e0d\u9700\u8981\u201c\u8272\u8c03\u5206\u79bb\u201d\u6548\u679c\u2026\u2026\u6240\u4ee5\u8ba9\u6211\u4eec\u770b\u4e0b\u4e00\u6b65\u3002\n\n# 4 \u521b\u5efa\u81ea\u5df1\u7684CoreImage filter\n\u4e0b\u9762\u7684\u4ee3\u7801\u5f88\u6e05\u695a\u5730\u63cf\u8ff0\u4e86\u600e\u4e48\u5b9e\u73b0\u4e00\u4e2aCIFilter\u3002\n\n```swift\nimport CoreImage\n\nclass AlphaFrameFilter: CIFilter {\n  static var kernel: CIColorKernel? = {\n    return CIColorKernel(source: \"\"\"\nkernel vec4 alphaFrame(__sample s, __sample m) {\n  return vec4( s.rgb, m.r );\n}\n\"\"\")\n  }()\n\n  var inputImage: CIImage?\n  var maskImage: CIImage?\n  \n  override var outputImage: CIImage? {\n    let kernel = AlphaFrameFilter.kernel!\n\n    guard let inputImage = inputImage, let maskImage = maskImage else {\n      return nil\n    }\n    \n    let args = [inputImage as AnyObject, maskImage as AnyObject]\n    return kernel.apply(extent: inputImage.extent, arguments: args)\n  }\n}\n```\n\nCoreImage\u91cc\u9762\u7684kernel\u662f\u4e00\u4e2a\u7740\u8272\u5668\uff08Shader\uff09\u7c7b\u578b\u7684\u4ee3\u7801\u7247\u6bb5\uff0c\u91cc\u9762\u81f3\u5c11\u6709\u4e00\u4e2a\u65b9\u6cd5\u8fd4\u56devec4\u683c\u5f0f\u7684\u503c\u3002\u7740\u8272\u5668\u770b\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u79cd\u4f4e\u7ea7\u8bed\u8a00\u3002\u5b83\u53ef\u4ee5\u7528\u5f88\u5c11\u7684\u4ee3\u7801\u5b9e\u73b0\u5f88\u70ab\u9177\u7684\u6548\u679c\u3002\u7b80\u5355\u8bf4\u660e\u4e00\u4e0b\uff1a\u7740\u8272\u5668\u5728GPU\u5904\u7406\u50cf\u7d20\u65f6\u5e76\u884c\u5de5\u4f5c\u2014\u2014\u56e0\u6b64\u901f\u5ea6\u8d85\u7ea7\u5feb\u3002\n\n\u5728Swift\u91cc\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7b80\u5355\u5730\u7528\u4e00\u4e2astatic var\u521b\u5efaCIKernel\u5b9e\u4f8b\u3002kernel\u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff1a\n- \u65b9\u6cd5\u53c2\u6570\u63a5\u6536\u4e24\u4e2asamples\uff08\u4e24\u4e2a\u50cf\u7d20\uff09\uff0c\u6bcf\u4e2a\u6765\u81ea\u4e0d\u540c\u7684\u56fe\u50cf\u6216\u8005\u7eb9\u7406\uff0c\u4f46\u662f\u5750\u6807\u76f8\u540c\u3002\n- \u6bcf\u4e2asample\u7684\u503c\u8868\u793a\u50cf\u7d20\u989c\u8272rgba\uff08\u7ea2\u7eff\u84dd\u548c\u900f\u660e\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u53d6\u60f3\u8981\u7684\u503c\u3002\u6bd4\u5982\uff1asample.ra \u8fd4\u56de\u4e00\u4e2a\u957f\u5ea62\u7684\u5411\u91cf\uff0c\u8868\u793a\u7ea2\u8272\u503c\u548c\u900f\u660e\u5ea6\u3002\n- \u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u8fd4\u56de\u4e00\u4e2a\u957f\u5ea64\u7684\u5411\u91cf\u3002\u4ece\u56fe\u50cf\u4e2d\u53d6\u51fa\u989c\u8272rgb\uff0c\u4ecemask\u56fe\u50cf\u4e2d\u53d6\u51faa\u900f\u660e\u5ea6\uff0c\u7531\u4e8emask\u56fe\u50cf\u662f\u7070\u9636\u56fe\uff0c\u5b83\u7684rgb\u662f\u76f8\u540c\u7684\uff08\u4e14\u4ecb\u4e8e0~1\u4e4b\u95f4\uff09\uff0c\u6211\u4eec\u4efb\u9009\u4e00\u4e2a\u5c31\u884c\uff0c\u8fd9\u91cc\u9009r\u3002\n\n# 5 \u8fd0\u884c\u8d77\u6765\n\u63a5\u4e0b\u6765\u7684\u90e8\u5206\u5bf9\u67d0\u4e9b\u4eba\u6765\u8bf4\u5f88\u65b0\u9896\uff0c\u4e5f\u5f88\u6709\u610f\u601d\u3002\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\u600e\u4e48\u628a\u4e24\u5f20\u56fe\u50cf\u4f20\u7ed9\u6211\u4eec\u7684filter\u3002\n\n\u6211\u4eec\u7528`createVideoComposition(for:)`\u65b9\u6cd5\u5b9e\u4f8b\u5316\u4e00\u4e2a\u6211\u4eec\u7684filter\u3002\n\n> \u6ce8\u610f\u6211\u6ca1\u6709\u68c0\u67e5\u6211\u4eec\u9700\u8981\u7684CIFilter\u662f\u5426\u5b58\u5728\uff0c\u521b\u5efa\u6211\u4eec\u7684filter\u5f88\u7b80\u5355\u3002\n\n\u6211\u4eec\u9700\u8981\u5c06request\u91cc\u9762\u7684sourceImage\u5206\u6210\u4e24\u90e8\u5206\uff0c\u4e0a\u9762\u90e8\u5206\u662f\u989c\u8272\u4fe1\u606f\uff0c\u4e0b\u9762\u90e8\u5206\u662f\u900f\u660e\u5ea6\u4fe1\u606f\u3002\u6211\u5e76\u6ca1\u6709\u6df1\u5165\u4e86\u89e3CoreImage\u7684\u5750\u6807\u7cfb\u4ee5\u53cacropped(to:)\u65b9\u6cd5\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u6211\u53ea\u77e5\u9053\u5f53\u524d\u89c6\u9891\u7684\u5c3a\u5bf8\u6bd4\u5b9e\u9645\u9700\u8981\u64ad\u653e\u7684\u5927\u3002\u5728\u82f9\u679c\u6846\u67b6\u91cc\u8bd5\u4e86\u540e\uff0c\u5f97\u5230\u4e86\u6b63\u786e\u7684AVVideoComposition\u6765\u6e32\u67d3\u6211\u4eec\u7684\u900f\u660e\u89c6\u9891\u3002\n\n```swift\nfunc createVideoComposition(for playerItem: AVPlayerItem) -> AVVideoComposition {\n  let videoSize = CGSize(width: 460, height: 572 / 2.0)\n  let composition = AVMutableVideoComposition(asset: playerItem.asset, applyingCIFiltersWithHandler: { request in\n    let sourceRect = CGRect(origin: .zero, size: videoSize)\n    let alphaRect = sourceRect.offsetBy(dx: 0, dy: sourceRect.height)\n    let transform = CGAffineTransform(translationX: 0, y: -sourceRect.height)\n    let filter = AlphaFrameFilter()\n    filter.inputImage = request.sourceImage.cropped(to: alphaRect).transformed(by: transform)\n    filter.maskImage = request.sourceImage.cropped(to: sourceRect)\n    return request.finish(with: filter.outputImage!, context: nil)\n  })\n\n  composition.renderSize = videoSize\n  return composition\n}\n```\n\u5b8c\u6210\u4e86\uff0c\u6211\u4eec\u7684\u900f\u660e\u89c6\u9891\u64ad\u653e\u5f97\u5f88\u4e0d\u9519\uff01\n\n![image.png](https://rome753.github.io/cdn/1896166-e6930830f2431d59.png)\n\n\u2026\u2026\u8fd8\u6ca1\u90a3\u4e48\u5feb\uff0c\u89c6\u9891\u5728iOS\u6a21\u62df\u5668\u4e0a\u6b63\u5e38\uff0c\u4f46\u662f\u771f\u673a\u6709\u95ee\u9898\u3002\u56e0\u4e3aAVPlayerLayer\u5e76\u4e0d\u77e5\u9053\u6211\u4eec\u7ed9\u5b83\u63d0\u4f9b\u4e86\u900f\u660e\u7684pixel buffer\u3002\u6211\u4eec\u7528\u4e0b\u9762\u7684\u4e00\u884c\u4ee3\u7801\u4fee\u590d\u4e00\u4e0b\u3002\n\n```swift\n\n  override func viewDidLoad() {\n    // ...\n    playerLayer.pixelBufferAttributes = [(kCVPixelBufferPixelFormatTypeKey as String): kCVPixelFormatType_32BGRA]\n    // ...\n  }\n```\n\n[Github](https://github.com/quentinfasquel/MyTransparentVideoExample)\u4e0a\u5c55\u793a\u4e86\u5b8c\u6574\u7684\u7528\u81ea\u5b9a\u4e49filter\u6e32\u67d3\u900f\u660e\u89c6\u9891\u7684\u4f8b\u5b50\u3002\u4ee3\u7801\u4e0a\u6709\u4e00\u4e2a\u6539\u8fdb\u662f\u81ea\u5b9a\u4e49\u4e86AVPlayerView\u7c7b\uff0c\u5c31\u4e0d\u9700\u8981\u786c\u7f16\u7801\u89c6\u9891\u5c3a\u5bf8\u4e86\u3002\n\n---\n\n\u539f\u6587\u6ca1\u6709\u63d0\u5230Xcode\u91cc\u7684metal\u914d\u7f6e\uff0c\u4e0d\u914d\u7f6e\u7684\u8bdd\u7f16\u8bd1\u4f1a\u62a5\u9519\u3002\n\n# Xcode\u914d\u7f6e\n\u914d\u7f6e\u91cc\u641c\u7d22metal\uff0c\u5728\n```\nMetal Compiler -> Other Metal Compiler Flags \u6dfb\u52a0 -fcikernel\nMetal Linker -> Other Metal Linker Flags \u6dfb\u52a0 -cikernel\n```\n![\u622a\u5c4f2022-03-28 \u4e0a\u534810.24.54.png](https://rome753.github.io/cdn/1896166-7c71323b675ece68.png)\n\n# \u89c6\u9891\u4e0e\u906e\u7f69\u5de6\u53f3\u6392\u5217\n\u539f\u6587Demo\u7684\u89c6\u9891\u4e0e\u906e\u7f69\u662f\u4e0a\u4e0b\u6392\u5217\u7684\uff0c\u5982\u679c\u9700\u8981\u5de6\u53f3\u6392\u5217\uff0c\u7a0d\u5fae\u4fee\u6539\u56fe\u50cf\u53d8\u6362\u5373\u53ef\uff0c\u6211\u5b9e\u73b0\u4e86\u4e00\u4e0b\uff0c\u6309\u4e0b\u9762\u65b9\u6cd5\u4fee\u6539\u3002\n```swift\nimport CoreImage\n\nextension CIImage {\n\n    typealias VerticalSplit = (topImage: CIImage, bottomImage: CIImage)\n\n    func verticalSplit() -> VerticalSplit {\n        let outputExtent = self.extent.applying(CGAffineTransform(scaleX: 1.0, y: 0.5))\n\n        // Get the top region according to Core Image coordinate system, (0,0) being bottom left\n        let translate = CGAffineTransform(translationX: 0, y: outputExtent.height)\n        let topRegion = outputExtent.applying(translate)\n        var topImage = self.cropped(to: topRegion)\n        // Translate topImage back to origin\n        topImage = topImage.transformed(by: translate.inverted())\n\n        let bottomRegion = outputExtent\n        let bottomImage = self.cropped(to: bottomRegion)\n\n        return (topImage, bottomImage)\n    }\n    \n    \n    typealias HorizontalSplit = (leftImage: CIImage, rightImage: CIImage)\n\n    func horizontalSplit() -> VerticalSplit {\n        let outputExtent = self.extent.applying(CGAffineTransform(scaleX: 0.5, y: 1.0))\n\n        // Get the top region according to Core Image coordinate system, (0,0) being bottom left\n        let translate = CGAffineTransform(translationX: outputExtent.width, y: 0)\n        let rightRegion = outputExtent.applying(translate)\n        var rightImage = self.cropped(to: rightRegion)\n        // Translate topImage back to origin\n        rightImage = rightImage.transformed(by: translate.inverted())\n\n        let leftRegion = outputExtent\n        let leftImage = self.cropped(to: leftRegion)\n\n        return (leftImage, rightImage)\n    }\n}\n\n```\n\n```swift\n    func createVideoComposition(for asset: AVAsset) -> AVVideoComposition {\n        let filter = AlphaFrameFilter(renderingMode: .builtInFilter)\n        let composition = AVMutableVideoComposition(asset: asset, applyingCIFiltersWithHandler: { request in\n            do {\n//                let (inputImage, maskImage) = request.sourceImage.verticalSplit()\n                let (inputImage, maskImage) = request.sourceImage.horizontalSplit()\n                let outputImage = try filter.process(inputImage, mask: maskImage)\n                return request.finish(with: outputImage, context: nil)\n            } catch {\n//                os_log(\"Video composition error: %s\", String(describing: error))\n                return request.finish(with: error)\n            }\n        })\n\n//        composition.renderSize = asset.videoSize.applying(CGAffineTransform(scaleX: 1.0, y: 0.5))\n        composition.renderSize = asset.videoSize.applying(CGAffineTransform(scaleX: 0.5, y: 1.0))\n        return composition\n    }\n```\n", "mt_excerpt": "", "title": "iOS-Swift\u4f7f\u7528metal\u64ad\u653e\u900f\u660e\u89c6\u9891", "dateCreated": "20220718T17:45:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491368.html", "permalink": "https://www.cnblogs.com/rome753/p/16491368.html", "postid": 16491368, "description": "\u901a\u5e38\u4f7f\u7528\u591a\u8bed\u8a00\u5728Resource\u91cc\u914d\u7f6eLocalizable\u6587\u4ef6\uff0c\u6dfb\u52a0\u9700\u8981\u7684\u8bed\u8a00\u5373\u53ef\u3002\n\n![\u622a\u5c4f2021-10-31 \u4e0b\u53485.02.39.png](https://rome753.github.io/cdn/1896166-3b179c2137f2f60e.png)\n\n\u4f7f\u7528String\u7684\u6269\u5c55\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\u5982\u679c\u9700\u8981\u5360\u4f4d\u7b26\uff0c%d\u8868\u793a\u6570\u5b57\uff0c%@\u8868\u793a\u5b57\u7b26\u4e32\uff0c\u7528localizedWithArgs\u65b9\u6cd5\n\n```swift\n\n    func localized() -> String {\n        return NSLocalizedString(self, comment: \"\")\n    }\n    \n    func localizedWithArgs(_ args: CVarArg...) -> String {\n        let localizedString = localized()\n        return String(format: localizedString, arguments: args)\n    }\n```\n\n\u5982\u679c\u4f7f\u7528\u4e86\u591a\u8bed\u8a00\u914d\u7f6e\u6587\u4ef6\u6709\u4e2d\u82f1\u6587\uff0c\u4f46\u662f\u6682\u65f6\u53ea\u9700\u8981\u652f\u6301\u4e00\u79cd\u8bed\u8a00\u5982\u4e2d\u6587\uff0c\u5c31\u9700\u8981\u5728\u4e2d\u6587\u548c\u82f1\u6587\u91cc\u653e\u4e24\u4efd\u76f8\u540c\u6587\u6848\uff0c\u5f88\u9ebb\u70e6\u3002\u89e3\u51b3\u65b9\u6cd5\u662f\u65b0\u5efa\u4e00\u4e2a\u591a\u8bed\u8a00\u6587\u4ef6\u5982**zh.strings**\uff0c\u7136\u540e\u5728NSLocalizedString\u65b9\u6cd5\u7684tableName\u53c2\u6570\u5f15\u7528\u5b83\u3002\u8fd9\u6837\u53ea\u7528\u4e00\u4efd\u591a\u8bed\u8a00\u6587\u4ef6\uff0c\u4e0d\u7ba1\u624b\u673a\u7cfb\u7edf\u8bed\u8a00\u662f\u4ec0\u4e48\uff0c\u90fd\u4f7f\u7528\u5b83\u3002\n```swift\n\n    func localized() -> String {\n        return NSLocalizedString(self, tableName: \"zh\", bundle: Bundle.main, value: \"\", comment: \"\")\n    }\n    \n    func localizedWithArgs(_ args: CVarArg...) -> String {\n        let localizedString = localized()\n        return String(format: localizedString, arguments: args)\n    }\n```\n", "mt_excerpt": "", "title": "iOS\u591a\u8bed\u8a00\u8bbe\u7f6e\uff0c\u4f7f\u7528\u6307\u5b9a\u8bed\u8a00", "dateCreated": "20220718T17:44:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491372.html", "permalink": "https://www.cnblogs.com/rome753/p/16491372.html", "postid": 16491372, "description": "```swift\n\n    private var bgImageGaussDataDict:[Int:Data] = [:]\n\n        var guassImageData = bgImageGaussDataDict[gauss]\n        if guassImageData == nil {\n            let image = bgImageOrigin?.sd_blurredImage(withRadius: CGFloat(gauss))\n            // \u7f13\u5b58\u7ecf\u8fc7\u538b\u7f29\u7684jpeg data\u800c\u4e0d\u662fUIImage\uff0c\u5185\u5b58\u5360\u7528\u975e\u5e38\u5c0f\n            guassImageData = image?.jpeg(.low)\n            bgImageGaussDataDict[gauss] = guassImageData\n        }\n\n        if let data = guassImageData {\n            self.bgImageV.image = UIImage(data: data)\n        }\n\n\n    enum JPEGQuality: CGFloat {\n        case lowest  = 0\n        case low     = 0.25\n        case medium  = 0.5\n        case high    = 0.75\n        case highest = 1\n    }\n\n    /// Returns the data for the specified image in JPEG format.\n    /// If the image object\u2019s underlying image data has been purged, calling this function forces that data to be reloaded into memory.\n    /// - returns: A data object containing the JPEG data, or nil if there was a problem generating the data. This function may return nil if the image has no data or if the underlying CGImageRef contains data in an unsupported bitmap format.\n    func jpeg(_ jpegQuality: JPEGQuality) -> Data? {\n        return jpegData(compressionQuality: jpegQuality.rawValue)\n    }\n```\n", "mt_excerpt": "", "title": "iOS\u56fe\u7247\u7f13\u5b58\u548c\u9ad8\u65af\u6a21\u7cca", "dateCreated": "20220718T17:44:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491363.html", "permalink": "https://www.cnblogs.com/rome753/p/16491363.html", "postid": 16491363, "description": "iOS \u754c\u9762\u5f00\u53d1\u6700\u91cd\u8981\u7684\u662fViewController\u548cView\uff0cViewController\u662fView\u7684\u63a7\u5236\u5668\uff0c\u4e5f\u5c31\u662f\u4e00\u822c\u7684\u9875\u9762\uff0c\u7528\u6765\u7ba1\u7406\u9875\u9762\u7684\u751f\u547d\u5468\u671f\uff08\u5b83\u76f8\u5f53\u4e8e\u5b89\u5353\u91cc\u7684Activity\uff0c\u4e24\u8005\u5f88\u50cf\uff0c\u53c8\u6709\u4e00\u4e9b\u5dee\u5f02\uff09\u3002\n\nViewController\u7684\u7279\u70b9\u662f\u5b83\u6709\u597d\u51e0\u79cd\u3002\u4e00\u79cd\u6700\u57fa\u672c\u7684UIViewController\uff0c\u548c\u53e6\u5916\u4e09\u79cd\u5bb9\u5668\uff1aUINavigationController\u3001UITabBarController\u3001UIPageViewController\u3002\n\n\u6240\u8c13\u5bb9\u5668\uff0c\u5c31\u662f\u5b83\u4eec\u672c\u8eab\u4e0d\u80fd\u5355\u72ec\u7528\u6765\u663e\u793a\uff0c\u5fc5\u987b\u5728\u91cc\u9762\u653e\u4e00\u4e2a\u6216\u51e0\u4e2aUIViewController\u3002\n\n\u4e0d\u540c\u5bb9\u5668\u6709\u4e0d\u540c\u7684\u9875\u9762\u7ba1\u7406\u65b9\u5f0f\u548c\u5c55\u793a\u6548\u679c\uff1a\n- UINavigationController \u7528\u5bfc\u822a\u680f\u7ba1\u7406\u9875\u9762\n- UITabBarController \u7528\u5e95\u90e8tab\u7ba1\u7406\u9875\u9762\n- UIPageViewController \u7528\u5207\u6362\u5668\u7ba1\u7406\u9875\u9762\n\n\u5bb9\u5668\u8fd8\u53ef\u4ee5\u5d4c\u5957\uff0c\u6bd4\u5982\u628aUITabBarController\u653e\u8fdbUINavigationController\u91cc\u9762\uff0c\u8fd9\u6837\u5728tab\u9875\u9762\u91cc\uff0c\u53ef\u4ee5\u7528\u542f\u52a8\u5bfc\u822a\u680f\u6837\u5f0f\u7684\u4e8c\u7ea7\u5b50\u9875\u9762\u3002\n\n# 1 UIViewController\n\n\u8fd9\u662f\u6700\u7b80\u5355\u7684\u9875\u9762\uff0c\u6ca1\u6709\u5bfc\u822a\u680f\u3002\n\n\u4f7f\u7528present\u65b9\u6cd5\u5c55\u793a\uff0c\u5c55\u793a\u65f6\u4ece\u5e95\u90e8\u5f39\u8d77\uff0c\u53ef\u4ee5\u7528\u4e0b\u6ed1\u624b\u52bf\u5173\u95ed\uff0c\u4e5f\u53ef\u4ee5\u591a\u6b21\u542f\u52a8\u53e0\u52a0\u591a\u4e2a\u9875\u9762\u3002\n\n![image.png](https://rome753.github.io/cdn/1896166-2a782b44f7c2efb9.png)\n\n```swift\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view.\n        title = \"\\(self.hash)\"\n        \n        var label = UIButton(frame: CGRect(x: 10, y: 100, width: 300, height: 100))\n        label.setTitle(\"present ViewController\", for: .normal)\n        view.addSubview(label)\n        label.addTarget(self, action: #selector(presentVC), for: .touchUpInside)\n        \n        label = UIButton(frame: CGRect(x: 10, y: 200, width: 300, height: 100))\n        label.setTitle(\"present NavigationController\", for: .normal)\n        view.addSubview(label)\n        label.addTarget(self, action: #selector(presentNC), for: .touchUpInside)\n        \n        label = UIButton(frame: CGRect(x: 10, y: 300, width: 300, height: 100))\n        label.setTitle(\"push ViewController\", for: .normal)\n        view.addSubview(label)\n        label.addTarget(self, action: #selector(pushVC), for: .touchUpInside)\n        \n        label = UIButton(frame: CGRect(x: 10, y: 400, width: 300, height: 100))\n        label.setTitle(\"present TabbarController\", for: .normal)\n        view.addSubview(label)\n        label.addTarget(self, action: #selector(presentTC), for: .touchUpInside)\n        \n        label = UIButton(frame: CGRect(x: 10, y: 500, width: 300, height: 100))\n        label.setTitle(\"present PageViewController\", for: .normal)\n        view.addSubview(label)\n        label.addTarget(self, action: #selector(presentPC), for: .touchUpInside)\n    }\n    \n    @objc func presentVC() {\n        let vc = ViewController()\n        vc.view.backgroundColor = .darkGray\n        present(vc, animated: true)\n    }\n    \n    @objc func presentNC() {\n        let vc = ViewController()\n        vc.view.backgroundColor = .gray\n        let nc = UINavigationController(rootViewController: vc)\n        present(nc, animated: true)\n    }\n    \n    @objc func presentTC() {\n        let tc = MyTabbarController()\n        tc.view.backgroundColor = .blue\n        let nc = UINavigationController(rootViewController: tc)\n        present(nc, animated: true)\n    }\n    \n    \n    @objc func presentPC() {\n        let pc = MyPageViewController()\n        pc.view.backgroundColor = .red\n        let nc = UINavigationController(rootViewController: pc)\n        present(nc, animated: true)\n    }\n    \n    @objc func pushVC() {\n        let vc = ViewController()\n        vc.view.backgroundColor = .purple\n        if let nc = navigationController {\n            nc.pushViewController(vc, animated: true)\n        } else {\n            print(\"navigationController nil!\")\n        }\n    }\n\n\n}  \n```\n\n# 2 UINavigationController\n\n\u8fd9\u662f\u6700\u5e38\u7528\u7684\u9875\u9762\u5bfc\u822a\u65b9\u5f0f\uff0c\u9876\u90e8\u5c55\u793a\u5bfc\u822a\u680f\uff0c\u6709\u6807\u9898\u3001\u8fd4\u56de\u6309\u94ae\u3002\n\n\u4f7f\u7528pushViewController\u65b9\u6cd5\u5c55\u793a\uff0c\u5c55\u793a\u65f6\u4ece\u53f3\u5f80\u5de6\u51fa\u73b0\uff0c\u53ef\u4ee5\u7528\u53f3\u6ed1\u624b\u52bf\u5173\u95ed\uff0c\u4e5f\u53ef\u4ee5\u591a\u6b21\u542f\u52a8\u53e0\u52a0\u591a\u4e2a\u9875\u9762\u3002\n\n> \u6ce8\u610f\uff1aUINavigationController\u7528\u6765\u7ba1\u7406\u4e00\u7ec4UIViewController\uff0c\u8fd9\u4e9bUIViewController\u5171\u7528\u4e00\u4e2a\u5bfc\u822a\u680f\u3002\u4e00\u822c\u6765\u8bf4\uff0cUINavigationController\u80fd\u5f88\u597d\u5730\u63a7\u5236\u5bfc\u822a\u680f\u4e0a\u9762\u7684\u5143\u7d20\u663e\u793a\u548c\u8f6c\u573a\u6548\u679c\u3002\u5982\u679c\u9700\u8981\u5b9a\u5236\u5bfc\u822a\u680f\u5143\u7d20\uff0c\u5c3d\u91cf\u4fee\u6539UIViewController\u7684\u5bfc\u822a\u680f\uff0c\u4e0d\u8981\u76f4\u63a5\u4fee\u6539UINavigationController\u7684\u5bfc\u822a\u680f\u3002\n\n![image.png](https://rome753.github.io/cdn/1896166-c0737f2e2d5d4ab6.png)\n\n# 3 UITabBarController\n\n\u8fd9\u4e2a\u4e00\u822c\u7528\u6765\u505a\u4e3b\u9875\u9762\u7684\u5c55\u793a\uff0c\u4e0b\u9762\u914d\u7f6e\u591a\u4e2atab\uff0c\u7528\u6765\u5207\u6362\u9875\u9762\u3002\n\n![image.png](https://rome753.github.io/cdn/1896166-fccd08cc258b40b1.png)\n\n```swift\nclass MyTabbarController: UITabBarController {\n    \n    init() {\n        super.init(nibName: nil, bundle: nil)\n        self.tabBar.backgroundColor = .gray\n        let vc1 = ViewController()\n        vc1.tabBarItem.image = UIImage(named: \"diamond\")\n        vc1.tabBarItem.title = \"tab1\"\n        vc1.view.backgroundColor = .red\n        let vc2 = ViewController()\n        vc2.tabBarItem.image = UIImage(named: \"diamond\")\n        vc2.tabBarItem.title = \"tab2\"\n        vc2.view.backgroundColor = .blue\n        let vc3 = ViewController()\n        vc3.tabBarItem.image = UIImage(named: \"diamond\")\n        vc3.tabBarItem.title = \"tab3\"\n        vc3.view.backgroundColor = .purple\n        self.viewControllers = [\n            vc1,\n            vc2,\n            vc3,\n        ]\n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n}\n```\n\n# 4 UIPageViewController\n\n\u8fd9\u4e2a\u7528\u6765\u505a\u7ffb\u9875\u7684\u9875\u9762\uff0c\u6bd4\u5982\u7535\u5b50\u4e66\u6216\u8005\u5e7f\u544abanner\u3002\u53ef\u4ee5\u914d\u7f6e\u5de6\u53f3\u6216\u4e0a\u4e0b\u7ffb\u8bd1\uff0c\u7ffb\u9875\u6548\u679c\u53ef\u4ee5\u914d\u7f6e\u6eda\u52a8\u6216\u8005\u6a21\u62df\u7ffb\u4e66\u3002\n\n\u7528viewControllerBefore\u548cviewControllerAfter\u56de\u8c03\u65b9\u6cd5\u63a7\u5236\u9875\u9762\u5207\u6362\u3002viewControllerBefore\u65b9\u6cd5\u662f\u8ba9\u6211\u4eec\u7ed9\u5b83\u63d0\u4f9b\u5f53\u524d\u9875\u9762\u7684\u524d\u4e00\u4e2a\u9875\u9762\uff0cviewControllerAfter\u65b9\u6cd5\u662f\u8ba9\u6211\u4eec\u7ed9\u5b83\u63d0\u4f9b\u5f53\u524d\u9875\u9762\u7684\u540e\u4e00\u4e2a\u9875\u9762\u3002\n\n> \u6ce8\u610f\uff1aUIPageViewController\u6709\u9884\u52a0\u8f7d\u673a\u5236\uff0c\u5b83\u4f1a\u63d0\u524d\u52a0\u8f7d\u5f53\u524d\u9875\u9762\u7684\u524d\u540e\u9875\u9762\u3002\u4f46\u662f\u5b83\u6ca1\u6709\u5b9e\u73b0\u9875\u9762\u7f13\u5b58\u673a\u5236\uff0c\u9700\u8981\u6211\u4eec\u5728\u5916\u90e8\u505a\u7f13\u5b58\u3002\u5982\u679c\u9875\u9762\u975e\u5e38\u591a\uff0c\u4f46\u53c8\u662f\u540c\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u90a3\u4e48\u4e00\u822c\u521b\u5efa\u4e09\u4e2a\u5b9e\u4f8b\u5c31\u591f\u4e86\uff0c\u7136\u540e\u5728viewControllerBefore\u548cviewControllerAfter\u65b9\u6cd5\u91cc\u5faa\u73af\u4f7f\u7528\u8fd9\u4e09\u4e2a\u3002\n\n![image.png](https://rome753.github.io/cdn/1896166-d99f14cda2ac8e88.png)\n\n![image.png](https://rome753.github.io/cdn/1896166-56f2d3bd40001003.png)\n\n```swift\nclass MyPageViewController: UIPageViewController, UIPageViewControllerDataSource {\n    \n    lazy var vcs = [\n        ViewController(),\n        ViewController(),\n        ViewController(),\n        ViewController(),\n        ViewController(),\n    ]\n    \n    init() {\n        super.init(transitionStyle: .scroll, navigationOrientation: .horizontal)\n        self.dataSource = self\n        let vc1 = ViewController()\n        vc1.view.backgroundColor = .red\n        let vc2 = ViewController()\n        vc2.view.backgroundColor = .blue\n        let vc3 = ViewController()\n        vc3.view.backgroundColor = .purple\n        let vc4 = ViewController()\n        vc4.view.backgroundColor = .gray\n        vcs = [vc1,vc2,vc3,vc4\n        ]\n        self.setViewControllers([vcs[0]], direction: .forward, animated: false)\n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n    func pageViewController(_ pageViewController: UIPageViewController, viewControllerBefore viewController: UIViewController) -> UIViewController? {\n        let i = (vcs.firstIndex(of: viewController as! ViewController) ?? 0) - 1\n        if i < 0 {\n            return nil\n        }\n        return vcs[i]\n    }\n    \n    func pageViewController(_ pageViewController: UIPageViewController, viewControllerAfter viewController: UIViewController) -> UIViewController? {\n        let i = (vcs.firstIndex(of: viewController as! ViewController) ?? 0) + 1\n        if i >= vcs.count {\n            return nil\n        }\n        return vcs[i]\n    }\n    \n}\n\n```\n", "mt_excerpt": "", "title": "iOS\u5404\u79cdViewController\u63a7\u5236\u5668\u5b8c\u6574\u4ecb\u7ecd", "dateCreated": "20220718T17:43:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491366.html", "permalink": "https://www.cnblogs.com/rome753/p/16491366.html", "postid": 16491366, "description": "\u5982\u679c\u952e\u76d8\u5f39\u8d77\u7684\u65f6\u5019\uff0c\u83b7\u5f97\u7126\u70b9\u4e5f\u5c31\u662fbecomeFirstResponder\u7684\u8f93\u5165\u6846\u4f4d\u7f6e\u4f1a\u88ab\u952e\u76d8\u6321\u4f4f\uff0c\u90a3\u4e48\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5c06\u8f93\u5165\u6846\u6240\u5728\u7684\u6574\u4f53\u5e03\u5c40\u5411\u4e0a\u79fb\u52a8\u3002\u8fd9\u79cd\u79fb\u52a8\u4e0d\u4e00\u5b9a\u662f\u6211\u4eec\u60f3\u8981\u7684\uff0c\u5982\u679c\u60f3\u8981\u66f4\u7cbe\u51c6\u7684\u63a7\u5236\uff0c\u5c31\u9700\u8981\u5728\u952e\u76d8\u5f39\u8d77\u4e4b\u524d\u4e3b\u52a8\u79fb\u52a8\u8f93\u5165\u6846\u5230\u952e\u76d8\u4e0a\u65b9\uff0c\u8fd9\u6837\u7cfb\u7edf\u5c31\u4e0d\u4f1a\u81ea\u52a8\u79fb\u52a8\u6574\u4f53\u5e03\u5c40\u4e86\u3002\n![\u952e\u76d8\u5f39\u8d77\u524d](https://rome753.github.io/cdn/1896166-351d24e4e590efd0.jpg)\n![\u952e\u76d8\u5f39\u8d77\u540e](https://rome753.github.io/cdn/1896166-05e158fae098dda1.jpg)\n\n\nkeyboardWillShowNotification\u662f\u952e\u76d8\u5c06\u8981\u5f39\u8d77\u7684\u901a\u77e5\uff0c\u5728\u5b83\u91cc\u9762\u5904\u7406\u5c31\u53ef\u4ee5\u3002\n\n```swift\n        self.note1 = NotificationCenter.default.addObserver(forName: UIResponder.keyboardWillShowNotification, object: nil, queue: OperationQueue.main) { [unowned self] (note) in\n            self.keyboardH = self.getKeyboardHeight(note)\n            updateExpandHeight()\n        }\n        \n        self.note2 = NotificationCenter.default.addObserver(forName: UIResponder.keyboardWillHideNotification, object: nil, queue: OperationQueue.main) { [unowned self] (note) in\n            updateExpandHeight()\n        }\n\n    private func getKeyboardHeight(_ noti: Notification) -> CGFloat {\n        var height: CGFloat = 271.0\n        if let dic = noti.userInfo {\n            let value = dic[UIResponder.keyboardFrameEndUserInfoKey] as! NSValue\n            height = value.cgRectValue.size.height\n        }\n        return height\n    }\n\n    private func updateExpandHeight() {\n        // \u8c03\u6574\u5e03\u5c40\n        ...\n        // \u9700\u8981\u5728\u952e\u76d8\u51fa\u73b0\u524d\u7acb\u523b\u5237\u65b0\n        self.layoutIfNeeded()\n    }\n```\n", "mt_excerpt": "", "title": "iOS\u952e\u76d8\u5f39\u8d77\u65f6\u8f93\u5165\u6846\u81ea\u52a8\u79fb\u52a8", "dateCreated": "20220718T17:43:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491357.html", "permalink": "https://www.cnblogs.com/rome753/p/16491357.html", "postid": 16491357, "description": "![\u622a\u5c4f2022-03-21 \u4e0b\u53485.48.28.png](https://rome753.github.io/cdn/1896166-272ebe146ea45941.png)\n\n\n```swift\n\n        let myView = UIView()\n        myView.bounds = CGRect(x: 0, y: 0, width: 300, height: 100)\n        myView.addGradientLayerWithCorner(cornerRadius: 20, lineWidth: 10, colors: [UIColor.blue.cgColor, UIColor.green.cgColor])\n\nextension UIView {\n    \n    func addGradientLayerWithCorner(cornerRadius:CGFloat, lineWidth:CGFloat, colors: [CGColor]) {\n        let gradientLayer = CAGradientLayer()\n        gradientLayer.frame = self.bounds\n        gradientLayer.colors = [UIColor.blue.cgColor,UIColor.green.cgColor]\n        gradientLayer.cornerRadius = cornerRadius\n        \n        let maskLayer = CAShapeLayer()\n        maskLayer.lineWidth = lineWidth\n        maskLayer.path = UIBezierPath(roundedRect: CGRect(x: lineWidth / 2, y: lineWidth / 2, width: bounds.width - lineWidth, height: bounds.height - lineWidth), cornerRadius: cornerRadius).cgPath\n        maskLayer.fillColor = UIColor.clear.cgColor\n        maskLayer.strokeColor = UIColor.black.cgColor\n        \n        gradientLayer.mask = maskLayer\n        self.layer.addSublayer(gradientLayer)\n    }\n}\n```\n\n\u8fd9\u4e48\u4e2a\u4e1c\u897f\uff0c\u7f51\u4e0a\u4e00\u641c\u5b9e\u73b0\u7684\u4e5f\u662f\u5404\u79cd\u95ee\u9898\u3002\u53ea\u80fd\u81ea\u5df1\u5c01\u88c5\u4e00\u4e0b\u3002\n", "mt_excerpt": "", "title": "iOS-Swift\u8bbe\u7f6e\u5706\u89d2\u6e10\u53d8\u8272\u8fb9\u6846", "dateCreated": "20220718T17:42:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491360.html", "permalink": "https://www.cnblogs.com/rome753/p/16491360.html", "postid": 16491360, "description": "\u76f8\u6bd4\u4e8e\u5b89\u5353\u5f00\u53d1\u6765\u8bf4\uff0ciOS\u5f00\u53d1\u4e2d\u6700\u9ebb\u70e6\u7684\u4e8b\u60c5\u5c31\u662f\u624b\u52a8\u8ba1\u7b97\u9ad8\u5ea6\u4e86\u3002\n\n\u5728UITableView\u6216UICollectionView\u5217\u8868\u7684item\u3001header\u3001footer\u4e2d\uff0c\u5982\u679c\u5217\u8868\u9879\u7684\u9ad8\u5ea6\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u81ea\u5df1\u8ba1\u7b97\u5b9e\u9645\u9ad8\u5ea6\uff0c\u7136\u540e\u901a\u8fc7```tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath)```\u65b9\u6cd5\u8fd4\u56de\u7ed9\u7cfb\u7edf\u3002\u5927\u90e8\u5206\u60c5\u51b5\u662f\u5b58\u5728\u591a\u884c\u6587\u5b57\uff0c\u5217\u8868\u9879\u9ad8\u5ea6\u8ddf\u968f\u6587\u5b57\u53d8\u5316\u3002\n\n![IMG_F63A088DDF7C-1.jpeg](https://rome753.github.io/cdn/1896166-9707ce7013ade806.jpg)\n\n\u4ece\u6700\u7ec8\u663e\u793a\u6765\u770b\uff0c\u7cfb\u7edf\u662f\u77e5\u9053\u5b9e\u9645\u9ad8\u5ea6\u7684\uff0c\u4e0d\u7ba1\u9ad8\u5ea6\u8fd4\u56de\u591a\u5c11\uff0c\u591a\u884c\u6587\u5b57\u90fd\u80fd\u6b63\u786e\u663e\u793a\uff0c\u53ea\u662f\u5217\u8868\u9879\u7684\u9ad8\u5ea6\u4e0d\u5bf9\u3002\u4e3a\u4ec0\u4e48\u7cfb\u7edf\u4e0d\u81ea\u5df1\u6839\u636e\u5b9e\u9645\u7684\u6587\u5b57\u9ad8\u5ea6\u53bb\u8c03\u6574\u5916\u9762\u7684\u5e03\u5c40\u9ad8\u5ea6\u5462\uff1f\u8fd9\u662f\u4e00\u4e2a\u5148\u540e\u7684\u95ee\u9898\uff0cUITableView\u5148\u901a\u8fc7heightForRowAt\u65b9\u6cd5\u62ff\u5230\u5217\u8868\u9879\u7684\u9ad8\u5ea6\uff0c\u518d\u53bb\u8fdb\u884c\u5b9e\u9645\u5e03\u5c40\u548c\u7ed8\u5236\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f\u4e0d\u9700\u8981\u53cd\u590d\u8ba1\u7b97\u9ad8\u5ea6\uff0c\u8fd0\u884c\u6548\u7387\u6bd4\u8f83\u9ad8\uff0c\u628a\u9ebb\u70e6\u8f6c\u79fb\u7ed9\u5f00\u53d1\u8005\u4e86\uff08\u5b89\u5353\u521a\u597d\u76f8\u53cd\uff0c\u8ba1\u7b97\u5c3a\u5bf8\u7684measure\u65b9\u6cd5\u7531\u5916\u5411\u5185\u9010\u7ea7\u8c03\u7528\uff0c\u8ba1\u7b97\u7ed3\u679c\u7531\u5185\u5411\u5916\u9010\u7ea7\u8fd4\u56de\uff0c\u5728\u5916\u5c42\u5c31\u80fd\u5f97\u5230\u5b9e\u9645\u9ad8\u5ea6\u3002\u5f53\u67d0\u5904\u5e03\u5c40\u53d8\u5316\u65f6\uff0c\u4e5f\u4f1a\u5411\u5916\u4f20\u9012\uff0c\u8fd9\u6837\u81ea\u52a8\u8ba1\u7b97\u7684\u6b21\u6570\u589e\u52a0\u4e86\u4e00\u4e9b\uff0c\u5374\u57fa\u672c\u4e0d\u9700\u8981\u5f00\u53d1\u8005\u53bb\u64cd\u5fc3\u4e86\uff09\u3002\n\n\u8ba1\u7b97\u6587\u672c\u7684\u9ad8\u5ea6\u5012\u4e0d\u662f\u6709\u591a\u590d\u6742\uff0c\u53ef\u662f\u5982\u679c\u6587\u672c\u4e2d\u6709\u5404\u79cd\u5bcc\u6587\u672c\u3001emoji\u3001\u6362\u884c\u7b49\u7279\u6b8a\u7b26\u53f7\u5c31\u4e0d\u4e00\u5b9a\u4e86\u3002\u9879\u76ee\u91cc\u8ba1\u7b97\u9ad8\u5ea6\u91c7\u7528\u8fc7\u591a\u79cd\u65b9\u6cd5\uff0c\u53ef\u662f\u8981\u4e48\u9700\u8981\u6dfb\u52a0\u5947\u602a\u7684\u53c2\u6570\u548c\u903b\u8f91\u5904\u7406\u3001\u8981\u4e48\u8ba1\u7b97\u4e0d\u51c6\u786e\u3002\u5305\u62ec\nYYText\u7684YYTextLayoutYY textBoundingSize\u65b9\u6cd5\uff1b\nString\u7684boundingRect\u65b9\u6cd5\uff1b\n\n[\u8fd9\u7bc7\u6587\u7ae0\u8fd8\u4ecb\u7ecd\u4e86\u5176\u4ed6\u65b9\u6cd5](https://juejin.cn/post/6995120764810690568)\n\n\u6709\u6ca1\u6709\u4e00\u79cd\u65e2\u7b80\u5355\u53c8\u51c6\u786e\u7684\u65b9\u6cd5\uff1f\u56de\u5230\u524d\u9762\u7684\u5206\u6790\uff0c\u7cfb\u7edf\u5982\u4f55\u83b7\u53d6\u5b9e\u9645\u9ad8\u5ea6\u7684\uff1f\u8fd9\u4e2a\u65b9\u6cd5\u4e00\u5b9a\u662f\u51c6\u786e\u7684\uff0c\u5b83\u5c31\u662fUILabel\u7684sizeThatFits\u65b9\u6cd5\uff1a\n```\nopen func sizeThatFits(_ size: CGSize) -> CGSize\n```\n\u53ea\u9700\u8981\u4f20\u9650\u5236\u5c3a\u5bf8\uff0c\u5c31\u80fd\u7b97\u51fa\u9ad8\u5ea6\u3002\u7531\u4e8e\u5728heightForRowAt\u91cc\u4e0d\u597d\u76f4\u63a5\u62ff\u5230UILabel\uff0c\u56e0\u6b64\u9700\u8981\u5728\u5916\u9762\u521b\u5efa\u4e00\u4e2aUILabel\uff0c\u5c06\u5f71\u54cd\u8ba1\u7b97\u7684\u56e0\u7d20\u2014\u2014text\uff0cfont\u548cnumberOfLines\u8bbe\u7f6e\u7ed9\u5b83\u5c31\u884c\u3002\u5982\u679c\u4e0d\u60f3\u9891\u7e41\u521b\u5efaUILabel\uff0c\u7f13\u5b58\u4e00\u4e2a\u5c31\u53ef\u4ee5\u3002\n\n## \u7ec8\u6781\u65b9\u6cd5\n\u4f7f\u7528YYLabel\u662f\u5bcc\u6587\u672c\u65b9\u4fbf\u4e00\u70b9\uff0c\u4e00\u822c\u7528UILabel\u5c31\u53ef\u4ee5\u3002\n```\n\n// \u7f13\u5b58\u7684\u7528\u4e8e\u8ba1\u7b97\u9ad8\u5ea6\u7684Label\nvar tempLabelForCalc: YYLabel = {\n    let label = YYLabel()\n    label.font = UIFont.pingFangRegular(size: 14)\n    label.numberOfLines = 0\n    return label\n}()\n\n// \u8ba1\u7b97\u5bcc\u6587\u672c\u9ad8\u5ea6\u6700\u7ec8\u7248\u529e\u6cd5\uff0c\u4f7f\u7528sizeThatFits\u83b7\u53d6Label\u6700\u7ec8\u9ad8\u5ea6\nextension String {\n    \n    func finalSize(_ font: UIFont, _ size: CGSize, _ lines: UInt = 0) -> CGSize {\n        tempLabelForCalc.numberOfLines = lines\n        tempLabelForCalc.font = font\n        tempLabelForCalc.text = self\n        return tempLabelForCalc.sizeThatFits(size)\n    }\n   \n}\n\nextension NSAttributedString {\n    \n    func finalSize(_ font: UIFont, _ size: CGSize, _ lines: UInt = 0) -> CGSize {\n        tempLabelForCalc.numberOfLines = lines\n        tempLabelForCalc.font = font\n        tempLabelForCalc.attributedText = self\n        return tempLabelForCalc.sizeThatFits(size)\n    }\n\n}\n\n```\n", "mt_excerpt": "", "title": "iOS\u8ba1\u7b97\u6587\u672c\u9ad8\u5ea6\u7684\u7ec8\u6781\u89e3\u51b3\u65b9\u6cd5", "dateCreated": "20220718T17:42:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491354.html", "permalink": "https://www.cnblogs.com/rome753/p/16491354.html", "postid": 16491354, "description": "\n![\u622a\u5c4f2022-03-07 \u4e0a\u534810.16.41.png](https://rome753.github.io/cdn/1896166-3b33be2d5e5d9a29.png)\n\n\n> \u7528 CAShapeLayer \u548c UIBezierPath \u8d1d\u585e\u5c14\u66f2\u7ebf\u5b9e\u73b0\uff0c\u6bcf\u6b21\u8fdb\u5ea6\u53d8\u5316\u65f6\uff0c\u91cd\u65b0\u521d\u59cb\u5316\u4e00\u4e2a CAShapeLayer \u6dfb\u52a0\u5230\u5f53\u524d UIView \u4e0a\u3002\n\n```swift\n\nimport Foundation\nimport UIKit\n\nclass CircleProgressView: UIView {\n    // \u7070\u8272\u9759\u6001\u5706\u73af\n    var staticLayer: CAShapeLayer!\n    // \u8fdb\u5ea6\u53ef\u53d8\u5706\u73af\n    var arcLayer: CAShapeLayer!\n    \n    // \u4e3a\u4e86\u663e\u793a\u66f4\u7cbe\u7ec6\uff0c\u8fdb\u5ea6\u8303\u56f4\u8bbe\u7f6e\u4e3a 0 ~ 1000\n    var progress = 0\n\n    override init(frame: CGRect) {\n        super.init(frame: frame)\n\n    }\n\n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n    func setProgress(_ progress: Int) {\n        self.progress = progress\n        setNeedsDisplay()\n    }\n    \n    override func draw(_ rect: CGRect) {\n        if staticLayer == nil {\n            staticLayer = createLayer(1000, .gray)\n        }\n        self.layer.addSublayer(staticLayer)\n        if arcLayer != nil {\n            arcLayer.removeFromSuperlayer()\n        }\n        arcLayer = createLayer(self.progress, .red)\n        self.layer.addSublayer(arcLayer)\n    }\n    \n    private func createLayer(_ progress: Int, _ color: UIColor) -> CAShapeLayer {\n        let endAngle = -CGFloat.pi / 2 + (CGFloat.pi * 2) * CGFloat(progress) / 1000\n        let layer = CAShapeLayer()\n        layer.lineWidth = 1.5\n        layer.strokeColor = color.cgColor\n        layer.fillColor = UIColor.clear.cgColor\n        let radius = self.bounds.width / 2 - layer.lineWidth\n        let path = UIBezierPath.init(arcCenter: CGPoint(x: bounds.width / 2, y: bounds.height / 2), radius: radius, startAngle: -CGFloat.pi / 2, endAngle: endAngle, clockwise: true)\n        layer.path = path.cgPath\n        return layer\n    }\n\n}\n\n```\n", "mt_excerpt": "", "title": "iOS-Swift-\u5706\u73af\u8fdb\u5ea6\u6761", "dateCreated": "20220718T17:41:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491330.html", "permalink": "https://www.cnblogs.com/rome753/p/16491330.html", "postid": 16491330, "description": "\u4e00\u822c\u6765\u8bf4\uff0c\u5728UIViewController\u91cc\u7684UIView\u4f7f\u7528lazy var\uff0c\u53ef\u4ee5\u786e\u4fdd\u5728\u53ea\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u521b\u5efa\u3002\n\n\u4f46\u662f\u5982\u679c\u5728viewDidLoad()\u524d\u8bbf\u95ee\u8fd9\u4e2aView\uff0c\u90a3\u4e48\u8fd9\u4e2aView\u5c31\u4f1a\u521b\u5efa\u4e24\u6b21\uff0c\u8bf4\u660eLazy var\u673a\u5236\u5931\u6548\u4e86\u3002\u7f51\u4e0a\u641c\u4e86\u4e00\u4e0b\uff0c\u90fd\u662f\u8bf4Lazy var\u5728\u591a\u7ebf\u7a0b\u4e0b\u4f1a\u5931\u6548\u3002\u7136\u800c\u6211\u6253\u5370\u4e00\u4e0b\u65e5\u5fd7\uff0c\u4e24\u6b21\u521b\u5efa\u90fd\u662f\u5728\u4e3b\u7ebf\u7a0b\u3002\n\n\u539f\u56e0\u6211\u731c\u6d4b\u662fUIViewController\u7684\u521b\u5efa\u91c7\u7528\u4e86\u67d0\u79cd\u7ebf\u7a0b\u52a0\u901f\u65b9\u6cd5\uff0c \u5bfc\u81f4\u91cc\u9762\u7684\u65b9\u6cd5\u6709\u4e00\u4e9b\u9519\u4e71\uff1f\n\n> \u5728viewDidLoad()\u524d\u4e0d\u8981\u8bbf\u95ee\u91cc\u9762\u7684View\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u83ab\u540d\u5176\u5999\u96be\u4ee5\u6392\u67e5\u7684bug\uff01\n\n```swift\nclass NoSafeVC: UIViewController {\n    \n    lazy var myView: UIView = {\n        let view = UIView(frame: view.bounds)\n        print(\"create myView \\(view) \\(Thread.current)\")\n        return view\n    }()\n    \n    init() {\n        super.init(nibName: nil, bundle: nil)\n        _ = myView // \u63d0\u524d\u8bbf\u95ee\n    }\n    \n    required init?(coder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        view.backgroundColor = .gray\n        view.addSubview(myView)\n    }\n}\n```\n\n```swift\ncreate myView <UIView: 0x104b19730; frame = (0 0; 375 667); layer = <CALayer: 0x280fd1f40>> <NSThread: 0x281ae08c0>{number = 1, name = main}\ncreate myView <UIView: 0x104b198a0; frame = (0 0; 375 667); layer = <CALayer: 0x280fd1fc0>> <NSThread: 0x281ae08c0>{number = 1, name = main}\n```\n", "mt_excerpt": "", "title": "iOS-Swift-Lazy-var-View-\u5931\u6548\u95ee\u9898", "dateCreated": "20220718T17:37:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]iOS", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491280.html", "permalink": "https://www.cnblogs.com/rome753/p/16491280.html", "postid": 16491280, "description": "# 1 \u5b89\u88c5OpenCV\n\u56e0\u4e3a\u4e0d\u9700\u8981\u7279\u522b\u7684\u7f16\u8bd1\u914d\u7f6e\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u7528\u7f16\u8bd1\u5b89\u88c5\uff0c\u76f4\u63a5\u7528brew\u5b89\u88c5\n`brew install opencv`\n\n\u4e2d\u95f4\u9047\u5230\u4e00\u6b21\u5b89\u88c5sqlite\u5931\u8d25\uff0c\u5148\u5b89\u88c5\u4e00\u4e0bsqlite\n`brew install sqlite`\n\u518d\u5b89\u88c5opencv\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5b89\u88c5\u540e\u76ee\u5f55\u5728`/opt/homebrew/Cellar/opencv`\uff0c\u662f\u6bd4\u8f83\u65b0\u76844.5\u7248\u672c\n\n![\u622a\u5c4f2022-05-09 11.27.59.png](https://rome753.github.io/cdn/1896166-3776de6ae9b5c4bd.png)\n\n# 2 Xcode\u914d\u7f6e\n\u4e0eFFmpeg\u7684Xcode\u5f00\u53d1\u914d\u7f6e\u5b8c\u5168\u76f8\u540c\uff0c\u89c1[FFmpeg Xcode\u5f00\u53d1\u914d\u7f6e](https://www.jianshu.com/p/0b0db29a071c)\u8fd9\u7bc7\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f Search Paths \u91cc\u9762\u586b\u7684\u5934\u6587\u4ef6\u8def\u5f84\u662f .../include/opencv4\uff0c\u4e0d\u662f\u76f4\u63a5\u7528.../include\uff0c\u5426\u5219\u5e93\u6587\u4ef6\u91cc\u9762\u8def\u5f84\u4e0d\u5bf9\u3002\n\n![\u622a\u5c4f2022-05-09 11.41.00.png](https://rome753.github.io/cdn/1896166-ab15a923a9266cee.png)\n\n# 3 \u5f00\u53d1\n\n\u5199\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5c55\u793a\u56fe\u7247\u529f\u80fd\uff0c\u6ce8\u610f\u5934\u6587\u4ef6\u7684\u8def\u5f84\u5199\u6cd5\u3002\n```\n#include <iostream>\n#include \"opencv2/highgui.hpp\"\n#include \"opencv2/imgcodecs.hpp\"\nusing namespace cv;\nusing namespace std;\n\nint main(int argc, char** argv) {\n    Mat image = imread(\"/Users/chenrongchao/Desktop/001.jpg\", 1);\n    if (!image.data) {\n        printf(\"No image data!\\n\");\n        return 0;\n    }\n    namedWindow(\"Display Image\", WINDOW_AUTOSIZE);\n    imshow(\"Display Image\", image);\n    waitKey();\n    destroyWindow(\"Display Image\");\n    printf(\"--- opencv over ---\\n\");\n}\n```\n\u51fa\u73b0\u5c55\u793a\u56fe\u7247\u7684\u7a97\u53e3\u4e86\uff0c\u53ef\u4ee5\u5b66\u4e60\u66f4\u591a\u529f\u80fd\u4e86\uff01\n![\u622a\u5c4f2022-05-09 11.47.52.png](https://rome753.github.io/cdn/1896166-2f09704de2c0ca25.png)\n", "mt_excerpt": "", "title": "OpenCV-Xcode\u5f00\u53d1\u914d\u7f6e", "dateCreated": "20220718T17:30:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]OpenCV", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491282.html", "permalink": "https://www.cnblogs.com/rome753/p/16491282.html", "postid": 16491282, "description": "# 1 CascadeClassifier \u7ea7\u8054\u5206\u7c7b\u5668\u4eba\u8138\u8bc6\u522b\n\u6709\u4e24\u79cd\uff1ahaar\u7ea7\u8054\u548clbp\u7ea7\u8054\uff0c\u6211\u7528brew\u5b89\u88c5\u7684\uff0c\u7ea7\u8054\u6587\u4ef6\u5728`/opt/homebrew/Cellar/opencv/4.5.5_2/share/opencv4/haarcascades`\u91cc\u9762\uff0chaar\u7ea7\u8054\u6587\u4ef6\u5927\u5c0f\u662f900kb\u5de6\u53f3\uff0clbp\u7ea7\u8054\u6587\u4ef6\u5927\u5c0f\u662f50kb\u5de6\u53f3\u3002\n\u68c0\u6d4b\u524d\u9700\u8981\u5c06\u56fe\u50cf\u8f6c\u5316\u6210\u7070\u5ea6\u56fe\uff0c\u5e76\u505a\u76f4\u65b9\u56fe\u5747\u8861\u5316\u5904\u7406\u3002\n\nlbp\u7684\u6587\u4ef6\u5927\u5c0f\u3001\u8bc6\u522b\u901f\u5ea6\u548c\u6548\u679c\u90fd\u8981\u597d\u4e8ehaar\u3002\n\n> \u603b\u7684\u6765\u8bf4\uff0c\u4eba\u8138\u68c0\u6d4b\u6548\u679c\u5f88\u4e00\u822c\uff0c\u4eba\u8138\u4e0d\u52a8\u65f6\u68c0\u6d4b\u6846\u4f1a\u95ea\u70c1\uff0c\u4eba\u8138\u7a0d\u6709\u504f\u8f6c\u6216\u906e\u6321\u5c31\u68c0\u6d4b\u4e0d\u5230\u3002\n\n```c\nint myFaceDetect(int argc, char** argv) {\n    double w = 0, h = 0, fps = 24;\n    Mat frame;\n    Mat gray;\n    Mat res;\n    VideoCapture cap;\n    \n    if (!cap.open(0)) {\n        return 0;\n    }\n    w = cap.get(CAP_PROP_FRAME_WIDTH);\n    h = cap.get(CAP_PROP_FRAME_HEIGHT);\n    \n    printf(\"cap w: %f, h: %f\\n\", w, h);\n    \n    namedWindow(\"cam\");\n    while(true) {\n        auto tick = getTickCount();\n//        cap >> frame;\n        cap.read(frame);\n        if (frame.empty()) {\n            break;\n        }\n        flip(frame, frame, 1);\n        cvtColor(frame, gray, COLOR_BGRA2GRAY);\n        equalizeHist(gray, gray);\n        \n//        auto ccPath = \"/opt/homebrew/Cellar/opencv/4.5.5_2/share/opencv4/haarcascades/haarcascade_frontalface_extended.xml\";\n        auto ccPath = \"/opt/homebrew/Cellar/opencv/4.5.5_2/share/opencv4/lbpcascades/lbpcascade_frontalface_improved.xml\";\n        CascadeClassifier cc;\n        if (!cc.load(ccPath)) {\n            cout << \"load CascadeClassifier failed\" << endl;\n            return -1;\n        }\n        vector<Rect> faces;\n        cc.detectMultiScale(gray, faces);\n        for (int i = 0; i < faces.size(); i++) {\n            rectangle(frame, faces[i], Scalar(0, 0, 255));\n        }\n        imshow(\"cam\", frame);\n        auto time = (getTickCount() - tick) / getTickFrequency();\n        printf(\"handleTime: %f\\n\", time);\n        \n        if (waitKey(1000 / fps) == ' ') {\n            break;\n        }\n    }\n    destroyAllWindows();\n    return 0;\n}\n```\n\n\n\n# 2 DNN \u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4eba\u8138\u8bc6\u522b\n\n\u9700\u8981\u4e0b\u8f7d[\u795e\u7ecf\u7f51\u7edc\u6a21\u578b](https://raw.githubusercontent.com/opencv/opencv_3rdparty/8033c2bc31b3256f0d461c919ecc01c2428ca03b/opencv_face_detector_uint8.pb)\u548c[\u63cf\u8ff0\u6587\u4ef6](https://raw.githubusercontent.com/opencv/opencv_extra/master/testdata/dnn/opencv_face_detector.pbtxt)\uff0c\u6a21\u578b\u5927\u5c0f\u4e3a2.7Mb\uff0c\u63cf\u8ff0\u6587\u4ef6\u5927\u5c0f\u4e3a35kb\n\nOpenCV\u7684dnn\u652f\u6301caffe\u548cTensorFlow\u4e24\u79cd\u6a21\u578b\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u662fTensorFlow\u7684\u6a21\u578b\u3002\n\n\u68c0\u6d4b\u76f4\u63a5\u7528\u539f\u59cb\u56fe\u50cf\u5c31\u884c\u3002\n\n> \u4eba\u8138\u68c0\u6d4b\u6548\u679c\u975e\u5e38\u597d\uff0c\u4eba\u8138\u504f\u8f6c\u6216\u8005\u906e\u6321\u4e00\u534a\u4ecd\u80fd\u68c0\u6d4b\u5230\u3002\u7f3a\u70b9\u662f\u8ba1\u7b97\u65f6\u95f4\u957f\u4e00\u70b9\uff0c\u5728\u79fb\u52a8\u7aef\u4f1a\u660e\u663e\u4e00\u70b9\u3002\n\n\n```\nint myDnnFaceDetect(int argc, char** argv) {\n    double w = 0, h = 0, fps = 24;\n    Mat frame;\n    Mat gray;\n    Mat res;\n    VideoCapture cap;\n    \n    if (!cap.open(0)) {\n        return 0;\n    }\n    w = cap.get(CAP_PROP_FRAME_WIDTH);\n    h = cap.get(CAP_PROP_FRAME_HEIGHT);\n    \n    printf(\"cap w: %f, h: %f\\n\", w, h);\n    \n    auto pb_path = \"/Users/chenrongchao/Downloads/face_detector-main/opencv_face_detector_uint8.pb\";\n    auto pbtext_path = \"/Users/chenrongchao/Downloads/face_detector-main/opencv_face_detector.pbtxt\";\n    dnn::Net net = dnn::readNetFromTensorflow(pb_path, pbtext_path);\n    \n    namedWindow(\"cam\");\n    while(true) {\n        auto tick = getTickCount();\n//        cap >> frame;\n        cap.read(frame);\n        if (frame.empty()) {\n            break;\n        }\n        flip(frame, frame, 1);\n//        cvtColor(frame, gray, COLOR_BGRA2GRAY);\n        \n        auto blob = dnn::blobFromImage(frame, 1.0, Size2i(300, 300), Scalar(104,177,123),false,false);\n        net.setInput(blob);\n        auto probs = net.forward();\n        Mat detectionMat(probs.size[2], probs.size[3], CV_32F, probs.ptr<float>());\n        //\u89e3\u6790\u7ed3\u679c\n        for (int i = 0; i < detectionMat.rows; i++) {\n            float confidence = detectionMat.at<float>(i, 2);\n            if (confidence > 0.5) { //\u63d0\u53d6\u77e9\u5f62\u56db\u4e2a\u89d2\u7684\u5750\u6807\n                int x1 = static_cast<int>(detectionMat.at<float>(i, 3)*frame.cols);\n                int y1 = static_cast<int>(detectionMat.at<float>(i, 4)*frame.rows);\n                int x2 = static_cast<int>(detectionMat.at<float>(i, 5)*frame.cols);\n                int y2 = static_cast<int>(detectionMat.at<float>(i, 6)*frame.rows);\n                Rect box(x1, y1, x2 - x1, y2 - y1); //\u7ea2\u8272\u77e9\u5f62\u6846\n                rectangle(frame, box, Scalar(0, 0, 255), 4, 8, 0); //\u6807\u8bb0\u4eba\u8138\n            }\n        }\n        imshow(\"cam\", frame);\n        auto time = (getTickCount() - tick) / getTickFrequency();\n        printf(\"handleTime: %f\\n\", time);\n        \n        if (waitKey(1000 / fps) == ' ') {\n            break;\n        }\n    }\n    destroyAllWindows();\n    return 0;\n}\n```\n", "mt_excerpt": "", "title": "OpenCV-\u4eba\u8138\u8bc6\u522b", "dateCreated": "20220718T17:30:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]OpenCV", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491277.html", "permalink": "https://www.cnblogs.com/rome753/p/16491277.html", "postid": 16491277, "description": "https://trac.ffmpeg.org/wiki/Capture/Desktop\n\u5b98\u7f51\u6559\u7a0b\n\nmac\u5b89\u88c5ffmpeg\u540e\uff0c\u7528\u547d\u4ee4\u884c\u53ef\u4ee5\u5f55\u5c4f\u3002\n\n# 1 \u83b7\u53d6mac\u7684\u89c6\u9891\u8bbe\u5907\u548c\u97f3\u9891\u8bbe\u5907\n\n`ffmpeg -f avfoundation -list_devices true -i \"\"`\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u89c6\u9891\u8bbe\u5907\u6709\u6444\u50cf\u5934\u548c\u663e\u793a\u56680/1\uff0c\u97f3\u9891\u8bbe\u5907\u6709\u9ea6\u514b\u98ce\n\n```\nffmpeg version 3.0 Copyright (c) 2000-2016 the FFmpeg developers\n  built with Apple clang version 13.1.6 (clang-1316.0.21.2.3)\n  configuration: --prefix=/usr/local/ffmpeg --enable-debug=3 --enable-shared\n  libavutil      55. 17.103 / 55. 17.103\n  libavcodec     57. 24.102 / 57. 24.102\n  libavformat    57. 25.100 / 57. 25.100\n  libavdevice    57.  0.101 / 57.  0.101\n  libavfilter     6. 31.100 /  6. 31.100\n  libswscale      4.  0.100 /  4.  0.100\n  libswresample   2.  0.101 /  2.  0.101\n[AVFoundation input device @ 0x139615350] AVFoundation video devices:\n[AVFoundation input device @ 0x139615350] [0] FaceTime HD Camera\n[AVFoundation input device @ 0x139615350] [1] Capture screen 0\n[AVFoundation input device @ 0x139615350] [2] Capture screen 1\n[AVFoundation input device @ 0x139615350] AVFoundation audio devices:\n[AVFoundation input device @ 0x139615350] [0] MacBook Pro\u9ea6\u514b\u98ce\n: Input/output error\n\n```\n\n# 2 \u5f00\u59cb\u5f55\u5236\n\u7b2c\u4e00\u6b21\u5f55\u5236\u524d\u9700\u8981\u6388\u6743\n`ffmpeg -f avfoundation -i \"0:0\" output.mkv`\n\u683c\u5f0f\u4e0d\u5bf9\u8fd8\u4f1a\u62a5\u9519\uff0c\u63d0\u793a\u5206\u8fa8\u7387\u548c\u5e27\u7387\u53c2\u6570\u4e0d\u5bf9\n```\n[avfoundation @ 0x159808800] Selected framerate (29.970030) is not supported by the device\n[avfoundation @ 0x159808800] Supported modes:\n[avfoundation @ 0x159808800]   1280x720@[1.000000 30.000000]fps\n[avfoundation @ 0x159808800]   640x480@[1.000000 30.000000]fps\n0:0: Input/output error\n```\n\u5982\u4e0b\u8bbe\u7f6e\u4e4b\u540e\u5c31\u53ef\u4ee5\u5f55\u5236\u4e86\uff0c\u6309ctrl+c\u53ef\u4ee5\u505c\u6b62\u5f55\u5236\n`ffmpeg -video_size 1280x720 -framerate 30  -f avfoundation -i \"0:0\" output.mkv`\n\n\u8f93\u51fa\u89c6\u9891\u6587\u4ef6\u662f`output.mkv`\uff0c\u53ef\u4ee5\u76f4\u63a5\u64ad\u653e\u4e86\u3002\n\n# 3 ffplay\u64ad\u653e\n\n\u5b89\u88c5ffplay\u540e\uff0c\u53ef\u4ee5\u5b9e\u65f6\u76f4\u63a5\u64ad\u653e\u6444\u50cf\u5934\u548c\u8bdd\u7b52\uff0c\u628a\u4e0a\u9762\u547d\u4ee4\u91cc\u7684ffmpeg\u6362\u6210ffplay\uff0c\u53bb\u6389output.mkv\u8f93\u51fa\u6587\u4ef6\u5c31\u884c\u4e86\uff01\n\n`ffplay -video_size 1280x720 -framerate 30  -f avfoundation -i \"0:0\"`\n", "mt_excerpt": "", "title": "FFmpeg-mac\u5f55\u5c4f", "dateCreated": "20220718T17:29:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]FFmpeg", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491258.html", "permalink": "https://www.cnblogs.com/rome753/p/16491258.html", "postid": 16491258, "description": "ffmpeg\u547d\u4ee4\u884c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u8fdb\u884crtmp\u76f4\u64ad\u63a8\u6d41\u3002\n\n\n# 1 \u5b89\u88c5nginx\u670d\u52a1\n\n\u6ce8\u610f\u4e0d\u80fd\u76f4\u63a5\u5b89\u88c5\uff0c\u4e00\u5b9a\u8981\u5b89\u88c5\u5e26rtmp\u6a21\u5757\u7684\uff0c\u5426\u5219\u4f1a\u62a5rtmp\u627e\u4e0d\u5230\u7684\u9519\u8bef\u3002\n\n\u5b89\u88c5\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u662f\u81ea\u5df1\u7f16\u8bd1\u5b89\u88c5\uff0c\u6211\u6ca1\u6709\u91c7\u7528\uff1b\u53e6\u4e00\u79cd\u662f\u5b89\u88c5\u914d\u7f6e\u597d\u7684\uff0c\u7528\u4e0b\u9762\u8fd9\u7bc7\u6559\u7a0b\u7684\u65b9\u6cd5\uff1a\nhttps://www.jianshu.com/p/cff04bb3c182\n\u8fd9\u4e24\u53e5\u547d\u4ee4\u5373\u53ef\u5b89\u88c5\u6210\u529f\uff0c\u5f88\u65b9\u4fbf\u3002\n```\nbrew tap denji/homebrew-nginx\nbrew install nginx-full --with-rtmp-module\n```\n**\u542f\u52a8**\n\u5b89\u88c5\u540e\u7528 `nginx` \u547d\u4ee4\u5373\u53ef\u542f\u52a8\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u8f93\u5165 localhost:8080 \u53ef\u4ee5\u770b\u5230\u7f51\u9875\u3002\n\n**\u914d\u7f6ertmp**\n\u4fee\u6539 nginx.conf \u6587\u4ef6\uff0c\u5728 /opt/homebrew/etc/nginx/nginx.conf \u8fd9\u4e2a\u4f4d\u7f6e\n\u5728\u91cc\u9762\u52a0\u4e0artmp\u914d\u7f6e\uff0c\u8868\u793a\u76d1\u542c1935\u7aef\u53e3\uff0c\u670d\u52a1\u540d\u662flive\uff0crtmp\u63a8\u6d41\u5730\u5740\u662f\n`rtmp://127.0.0.1:1935/live`\n\n```\n...\nevents {\n    worker_connections  1024;\n}\n\nrtmp {\n    server {\n        listen 1935;\n        chunk_size 4096;\n        application live {\n            live on;\n        }\n    }\n\n}\n\nhttp {\n...\n```\n\n# 2 \u89c6\u9891\u6587\u4ef6\u63a8\u6d41\n\u5148\u63a8\u4e2a\u89c6\u9891\u6587\u4ef6\u8bd5\u8bd5\uff0c\u627e\u4e2aflv\u683c\u5f0f\u89c6\u9891\uff08\u6ca1\u6709\u7684\u8bdd\u7528ffmpeg\u8f6c\u4e00\u4e2a\uff09\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u63a8\u6d41\u4e86\n`ffmpeg -re -i 001.flv -f flv rtmp://127.0.0.1:1935/live`\n\n**\u64ad\u653e**\n\u672c\u673a\u64ad\u653e\uff1a\u7528ffplay\n` ffplay rtmp://127.0.0.1:1935/live`\n\n\u5c40\u57df\u7f51\u64ad\u653e\uff1a\u67e5\u4e00\u4e0b\u672c\u673a\u5c40\u57df\u7f51\u5730\u5740\uff0c\u6211\u7684\u662f192.168.3.9\uff0c\u627e\u4e00\u4e2a\u6d41\u5a92\u4f53\u64ad\u653e\u5668\uff08\u7535\u8111\u7aef\u53ef\u4ee5\u7528vlc\u64ad\u653e\u5668\uff0c\u79fb\u52a8\u7aef\u5e02\u573a\u641c\u4e00\u4e0b\u64ad\u653e\u5668\u6709\u5f88\u591a\uff09\uff0c\u5728\u540c\u4e00WIFI\u4e0b\u8f93\u5165\u5730\u5740`rtmp://192.168.3.9:1935/live`\u5c31\u53ef\u4ee5\u64ad\u653e\n\n# 3 \u6444\u50cf\u5934/\u5c4f\u5e55\u63a8\u6d41\n\u4e0a\u4e00\u7bc7[ffmpeg mac\u5f55\u5c4f](https://www.jianshu.com/p/5fc9fdd643b5)\u4ecb\u7ecd\u4e86\u7528ffmpeg\u5f55\u5236mac\u7535\u8111\u6444\u50cf\u5934\u7684\u547d\u4ee4\n`ffmpeg -video_size 1280x720 -framerate 30 -f avfoundation -i \"0:0\" output.mkv`\n\u628a\u5b83\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\uff0c\u628a\u8f93\u51fa\u6587\u4ef6 output.mkv \u6362\u6210\u63a8\u6d41\u5730\u5740\u8bd5\u8bd5\n`ffmpeg -video_size 1280x720 -framerate 30 -f avfoundation -i \"0:0\" rtmp://127.0.0.1:1935/live`\n\n\u53d1\u73b0\u4f1a\u62a5\u4e24\u4e2a\u9519\u8bef\uff0c\u4e00\u662f\u56fe\u50cf\u683c\u5f0f\u4e0d\u5bf9\uff0c\u4e8c\u662f\u627e\u4e0d\u5230\u8f93\u51fa\u683c\u5f0f\n```\n[avfoundation @ 0x12f809e00] Selected pixel format (yuv420p) is not supported by the input device.\n[avfoundation @ 0x12f809e00] Supported pixel formats:\n[avfoundation @ 0x12f809e00]   uyvy422\n[avfoundation @ 0x12f809e00]   yuyv422\n[avfoundation @ 0x12f809e00]   nv12\n[avfoundation @ 0x12f809e00]   0rgb\n[avfoundation @ 0x12f809e00]   bgr0\n[avfoundation @ 0x12f809e00] Overriding selected pixel format to use uyvy422 instead.\n\n[NULL @ 0x12880cc00] Unable to find a suitable output format for 'rtmp://127.0.0.1:1935/live'\nrtmp://127.0.0.1:1935/live: Invalid argument\n```\n\u7528`-pixel_format uyvy422` \u8bbe\u7f6e\u9700\u8981\u7684\u56fe\u50cf\u683c\u5f0f\uff0c\u7528`-f flv`\u6307\u5b9a\u8f93\u51fa\u683c\u5f0f\n`ffmpeg -video_size 1280x720 -framerate 30 -f avfoundation  -pixel_format uyvy422 -i \"0:0\" -f flv rtmp://127.0.0.1:1935/live`\n\u52a0\u4e0a\u8fd9\u4e24\u4e2a\u53c2\u6570\u8fd0\u884c\u540e\u53d8\u6210\u53e6\u4e00\u4e2a\u9519\u8bef\u4e86\uff1a\n```\nInput #0, avfoundation, from '0:0':\n  Duration: N/A, start: 208627.169433, bitrate: N/A\n    Stream #0:0: Video: rawvideo (UYVY / 0x59565955), uyvy422, 1280x720, 30 tbr, 1000k tbn, 1000k tbc\n    Stream #0:1: Audio: pcm_f32le, 48000 Hz, mono, flt, 1536 kb/s\n[adpcm_swf @ 0x12f80ec00] Sample rate must be 11025, 22050 or 44100\n```\n\u8fd9\u662f\u8bf4\u97f3\u9891\u91c7\u6837\u7387\u4e0d\u5bf9\uff0c\u786c\u4ef6\u8f93\u5165\u7684\u662f48000\u7684\u97f3\u9891\uff0c\u800c\u7f16\u89e3\u7801\u53ea\u652f\u6301 11025, 22050 or 44100 \u8fd9\u51e0\u79cd\uff0c\u90a3\u4e48\u7528`-ar 44100`\u6307\u5b9a\u4e00\u4e0b\u97f3\u9891\u91c7\u6837\u7387\uff0c\u6ce8\u610f\u5b83\u7684\u4f4d\u7f6e\u8981\u653e\u5230`\"0:0\"`\u540e\u9762\n`ffmpeg -video_size 1280x720 -framerate 30 -f avfoundation -pixel_format uyvy422 -i \"0:0\" -ar 44100 -f flv rtmp://127.0.0.1:1935/live`\n\u8fd9\u6837\u53ef\u4ee5\u6210\u529f\u63a8\u6d41\u4e86\uff01\u7528\u64ad\u653e\u5668\u53ef\u4ee5\u5b9e\u65f6\u89c2\u770b\u6444\u50cf\u5934\u753b\u9762\u3002\n\n\u628a\u53c2\u6570`\"0:0\"`\u6362\u6210`\"1:0\"`\uff0c\u8868\u793a\u7528\u5c4f\u5e55\u5185\u5bb9\u63a8\u6d41\uff0c\u53ef\u4ee5\u5b9e\u65f6\u64ad\u653e\u5c4f\u5e55\u5185\u5bb9\uff0c\u76f8\u5f53\u4e8e\u6295\u5c4f\u4e86\u3002\n\n> ffmpeg \u547d\u4ee4\u884c\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff0c\u5b83\u7684\u53c2\u6570\u5f88\u5bb9\u6613\u66f4\u6362\uff0c\u5e76\u4e14\u80fd\u51c6\u786e\u62a5\u9519\uff0c\u8bf4\u660e\u5b83\u7684\u8bbe\u8ba1\u975e\u5e38\u4e25\u8c28\u5408\u7406\u3002\n\n> \u63a8\u6d41\u64ad\u653e\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u58f0\u97f3\u5f88\u5c0f\uff0c\u5728\u624b\u673a\u4e0a\u64ad\u653e\u5b8c\u5168\u6ca1\u6709\u58f0\u97f3\uff0c\u53ef\u80fd\u662f\u7f16\u89e3\u7801\u683c\u5f0f\u5bfc\u81f4\u7684\u3002\u6211\u770b\u7684\u51e0\u4e4e\u6240\u6709\u535a\u5ba2\u90fd\u7528\u4e86x264\u7f16\u89e3\u7801\u5668\uff0c\u6211\u6682\u65f6\u6ca1\u7f16\u8bd1\u5b89\u88c5\uff0c\u7b49\u4ee5\u540e\u88c5\u597d\u4e86\u518d\u8bd5\u8bd5\u3002\n", "mt_excerpt": "", "title": "FFmpeg-rtmp-mac\u76f4\u64ad\u63a8\u6d41", "dateCreated": "20220718T17:26:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]FFmpeg", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491261.html", "permalink": "https://www.cnblogs.com/rome753/p/16491261.html", "postid": 16491261, "description": "iOS\u5de5\u7a0b\u6dfb\u52a0OpenCV\u914d\u7f6e\u65b9\u6cd5\u5982\u4e0b\nhttps://blog.csdn.net/verybigbug/article/details/113588991\n\n\u914d\u7f6e\u597d\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u79fb\u52a8\u7aef\u5f00\u53d1OpenCV\u4e86\u3002\u6211\u7528\u7684\u662fSwift\u8bed\u8a00\u3002\n\n# 1 \u7b80\u5355\u7684\u56fe\u7247\u5904\u7406\n\u7528`import opencv2`\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165OpenCV\uff0c\u4e0d\u9700\u8981\u5199c\u6216\u8005bridging\u4ee3\u7801\u3002\n\n\u5927\u90e8\u5206\u65b9\u6cd5\u53ef\u4ee5\u7528Imgproc\u76f4\u63a5\u8c03\uff0cOpenCV\u7684\u6838\u5fc3\u56fe\u50cf\u7c7bMat\u53ef\u4ee5\u4e0eiOS\u7684UIImage\u548cCGImage\u76f8\u4e92\u8f6c\u6362\u3002\n\n```swift\nimport opencv2\n\nclass MyViewController: UIViewController {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        let image1 = UIImage(named: \"001\")!\n        let iv1 = UIImageView(image: image1)\n        let iv2 = UIImageView()\n        iv1.frame = CGRect(x: 100, y: 100, width: 200, height: 200)\n        iv2.frame = CGRect(x: 100, y: 300, width: 200, height: 200)\n        view.addSubview(iv1)\n        view.addSubview(iv2)\n        \n        let m1 = Mat(uiImage: image1)\n        Imgproc.cvtColor(src: m1, dst: m1, code: .COLOR_BGRA2GRAY)\n        iv2.image = m1.toUIImage()\n    }\n}\n```\n\n# 2 \u4f7f\u7528\u76f8\u673a\n\u4f7f\u7528`CvVideoCamera2`\u7c7b\uff0c\u8bbe\u7f6e\u5e27\u7387\u3001\u5c3a\u5bf8\u3001\u65b9\u5411\u7b49\u53c2\u6570\uff0c\u5f00\u542f\u76f8\u673a\uff0c\u7136\u540e\u5728`CvVideoCameraDelegate2 `\u7684`processImage `\u4ee3\u7406\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u83b7\u53d6\u5b9e\u65f6\u56fe\u50cf\u3002\n\n\u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f\uff1a\n- CvVideoCamera2\u5bf9\u8c61\u8981\u653e\u5728\u7c7b\u91cc\u9762\uff0c\u4e0d\u80fd\u653e\u5728\u65b9\u6cd5\u91cc\uff0c\u5426\u5219\u4f1a\u88ab\u9a6c\u4e0a\u56de\u6536\n- `processImage `\u65b9\u6cd5\u4e0d\u662f\u4e3b\u7ebf\u7a0b\uff0c\u8bbe\u7f6e\u56fe\u50cf\u9700\u8981\u5728\u4e3b\u7ebf\u7a0b\n- \u56fe\u50cf\u662fBGR\u683c\u5f0f\u7684\u8981\u8f6c\u6210RGB\uff0c\u4e0d\u7136\u4f60\u5c31\u4f1a\u53d1\u73b0\u4f60\u7684\u8138\u662f\u7eff\u7684\uff01\n```swift\nimport opencv2\n\nclass MyViewController: UIViewController, CvVideoCameraDelegate2 {\n    \n    var lastTime = 0.0\n    \n    func processImage(_ image: Mat!) {\n        Imgproc.cvtColor(src: image, dst: image, code: .COLOR_BGR2RGB)\n        \n        DispatchQueue.main.async {\n            self.camView.image = image.toUIImage()\n            print(\"processImage mat \\(image.size()) time \\((Date().timeIntervalSince1970 - self.lastTime) * 1000) ms\")\n            self.lastTime = Date().timeIntervalSince1970\n        }\n    }\n    \n    \n    let cam = CvVideoCamera2.init()\n    lazy var camView = UIImageView(frame: view.frame)\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        camView.contentMode = .scaleAspectFill\n        let w = UIScreen.main.bounds.width\n        camView.frame = CGRect(x: 0, y: 0, width: w, height: w * 720 / 1280)\n        view.addSubview(camView)\n        \n        cam.delegate = self\n        cam.defaultAVCaptureDevicePosition = .front\n        cam.defaultAVCaptureSessionPreset = AVCaptureSession.Preset.hd1280x720.rawValue\n        cam.defaultAVCaptureVideoOrientation = .portrait\n        cam.defaultFPS = 30\n        cam.start()\n    } \n```\n\n# 3 \u4eba\u8138\u8bc6\u522b\n\u6709\u4e09\u79cd\u65b9\u5f0f\uff0c\u5176\u4e2d\u4e24\u79cd\u662fOpenCV\u7684\uff1a\u7ea7\u8054\u5206\u7c7b\u5668\u548cDNN\uff0c\u5b83\u4eec\u8981\u7528\u6a21\u578b\u6587\u4ef6\uff0c\u4e0b\u8f7d\u5730\u5740\u6211\u5728[\u4e0a\u4e00\u7bc7](https://www.jianshu.com/p/1b07f0b8b6ca)\u4e2d\u63d0\u5230\u4e86\uff0c\u53e6\u4e00\u79cd\u662fiOS\u81ea\u5e26\u7684CIFilter\u65b9\u5f0f\u3002\u6211\u5206\u522b\u5b9e\u73b0\u4e00\u4e0b\u3002\n\n## 3.1 \u7ea7\u8054\u5206\u7c7b\u5668\u4eba\u8138\u8bc6\u522b\n\n\u6211\u7528\u7684iOS\u8bbe\u5907\u662fA12\u5904\u7406\u5668\u7684iPad Mini5\uff0c\u68c0\u6d4b\u65f6\u95f4\u572870ms\u5de6\u53f3\uff0c\u6bcf\u79d2\u53ea\u6709\u5341\u51e0\u5e27\uff0c\u6709\u70b9\u5361\uff1b\u7528pyrDown\u5c06\u56fe\u50cf\u7f29\u5c0f\u540e\uff08\u6ce8\u91ca\u7684\u4ee3\u7801\uff09\u68c0\u6d4b\u65f6\u95f4\u63d0\u9ad8\u523033ms\u5de6\u53f3\uff0c\u660e\u663e\u6d41\u7545\u4e86\uff0c\u5f53\u7136\u68c0\u6d4b\u51c6\u786e\u7387\u8fd8\u662f\u4e00\u822c\u3002\n\n```\n    let cc_path = Bundle.main.path(forResource: \"lbpcascade_frontalface_improved\", ofType: \"xml\")\n    lazy var cc = CascadeClassifier.init(filename: cc_path!)\n\n\n        let gray = Mat()\n        Imgproc.cvtColor(src: image, dst: gray, code: .COLOR_BGRA2GRAY)\n//        Imgproc.pyrDown(src: gray, dst: gray)\n        Imgproc.equalizeHist(src: gray, dst: gray)\n\n        var rects:[Rect2i] = []\n        cc.detectMultiScale(image: gray, objects: &rects)\n        for r in rects {\n//            r.x *= 2\n//            r.y *= 2\n//            r.width *= 2\n//            r.height *= 2\n            Imgproc.rectangle(img: image, rec: r, color: Scalar(0, 0, 255, 255), thickness: 2)\n        }\n      \n```\n\n# 3.2 DNN \u4eba\u8138\u68c0\u6d4b\n\n\u68c0\u6d4b\u6548\u679c\u975e\u5e38\u597d\uff0c\u68c0\u6d4b\u65f6\u95f4\u572855ms\u5de6\u53f3\uff0c\u7a0d\u5fae\u6709\u70b9\u5361\uff0c\u5e76\u4e14\u7f29\u5c0f\u56fe\u50cf\u5e76\u4e0d\u80fd\u52a0\u5feb\u901f\u5ea6\u3002\n\n\u76ee\u524d\u6211\u8fd8\u6ca1\u60f3\u5230\u80fd\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u7684\u65b9\u6cd5\uff0c\u5b83\u5e94\u8be5\u4e0d\u652f\u6301iOS\u8bbe\u5907\u7684GPU\u52a0\u901f\uff0c\u4e5f\u8bb8\u7528TensorFlow Lite\u6a21\u578b\uff1f\n\n```swift\n    let pb_path = Bundle.main.path(forResource: \"opencv_face_detector_uint8\", ofType: \"pb\")\n    let pbtxt_path = Bundle.main.path(forResource: \"opencv_face_detector\", ofType: \"pbtxt\")\n    lazy var net = Dnn.readNetFromTensorflow(model: pb_path!, config: pbtxt_path!)\n\n\n        let blob = Dnn.blobFromImage(image: image, scalefactor: 1.0, size: Size2i(width: 300, height: 300), mean: Scalar(104,177,123), swapRB: false, crop: false)\n        net.setInput(blob: blob)\n        let probs = net.forward()\n\n        let probsData = Data.init(bytes: probs.dataPointer(), count: probs.elemSize() * probs.total())\n        let detectionMat = Mat(rows: probs.size(2), cols: probs.size(3), type: CvType.CV_32F, data: probsData)\n\n        for i in 0..<detectionMat.rows() {\n            let confidence = detectionMat.get(row: i, col: 2)[0]\n            if confidence > 0.5 {\n                let x1 = Int32(detectionMat.get(row: i, col: 3)[0] * Double(image.cols()))\n                let y1 = Int32(detectionMat.get(row: i, col: 4)[0] * Double(image.rows()))\n                let x2 = Int32(detectionMat.get(row: i, col: 5)[0] * Double(image.cols()))\n                let y2 = Int32(detectionMat.get(row: i, col: 6)[0] * Double(image.rows()))\n                let r = Rect2i(x: x1, y: y1, width: x2 - x1, height: y2 - y1)\n                Imgproc.rectangle(img: image, rec: r, color: Scalar(0, 0, 255, 255), thickness: 2)\n            }\n        }\n```\n\n# 3.3 CIFilter \u4eba\u8138\u68c0\u6d4b\n\u68c0\u6d4b\u524d\u7528`CIImage.init(cgImage: image.toCGImage())`\u5c06Mat\u8f6c\u6362\u6210CIImage\u683c\u5f0f\n\n\u68c0\u6d4b\u65f6\u95f4\u572833ms\u5de6\u53f3\uff0c\u6bd4\u8f83\u6d41\u7545\uff0c\u68c0\u6d4b\u6548\u679c\u6bd4DNN\u7565\u5dee\uff0c\u4f46\u662f\u4e5f\u5f88\u51c6\u786e\u4e86\u3002\n\n```swift\n\n    lazy var cidetector = CIDetector.init(ofType: CIDetectorTypeFace, context: nil)!\n\n\n        let features = cidetector.features(in: CIImage.init(cgImage: image.toCGImage()))\n        print(\"processImage ciimage features \\(features.count)\")\n        for f in features {\n            let x = Int32(f.bounds.minX)\n            let y = Int32(f.bounds.minY)\n            let w = Int32(f.bounds.width)\n            let h = Int32(f.bounds.height)\n            let r = Rect2i(x: x, y: image.height() - y - h, width: w, height: h)\n            Imgproc.rectangle(img: image, rec: r, color: Scalar(0, 0, 255, 255), thickness: 2)\n        }\n```\n", "mt_excerpt": "", "title": "OpenCV-iOS-\u56fe\u50cf\u5904\u7406\u548c\u4eba\u8138\u8bc6\u522b", "dateCreated": "20220718T17:26:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]OpenCV", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491263.html", "permalink": "https://www.cnblogs.com/rome753/p/16491263.html", "postid": 16491263, "description": "\u6700\u8fd1\u5f00\u59cb\u5b66\u4e00\u4e0bffmpeg\uff0c\u5728\u7535\u8111\u4e0a\u5f00\u53d1\u548c\u8c03\u8bd5\u662f\u6bd4\u8f83\u65b9\u4fbf\u7684\uff0c\u540e\u9762\u4e5f\u53ef\u4ee5\u79fb\u690d\u5230\u79fb\u52a8\u7aef\u3002mac\u4e0a\u5f00\u53d1c/c++\u9879\u76ee\u6709\u51e0\u79cd\u65b9\u5f0f\uff1aXcode\u3001VSCode\u548cVS\uff0c\u5176\u4e2d\uff1aVS\u793e\u533a\u7248\u548c\u666e\u901a\u7248\u90fd\u4e0d\u652f\u6301c/c++\u8bed\u8a00\uff0c\u5b89\u88c5\u540e\u4f60\u4f1a\u53d1\u73b0\u5728\u4efb\u4f55\u521b\u5efa\u5de5\u7a0b\u548c\u6dfb\u52a0\u63d2\u4ef6\u7684\u5730\u65b9\u4f60\u90fd\u627e\u4e0d\u5230c/c++\uff0c\u56e0\u4e3a\u5b83\u4e0d\u652f\u6301\u3002VSCode\u6709c/c++\u63d2\u4ef6\uff0c\u9700\u8981\u7f16\u5199\u4e00\u4e9b\u914d\u7f6e\u6587\u4ef6\uff0c\u540e\u9762\u6dfb\u52a0\u94fe\u63a5\u5e93\u7b49\u4e5f\u4e0d\u77e5\u9053\u65b9\u4e0d\u65b9\u4fbf\uff0c\u6211\u6ca1\u6709\u7ee7\u7eed\u8bd5\u3002Xcode\u662fmac\u81ea\u5e26\u7684\uff0c\u5404\u65b9\u9762\u652f\u6301\u80af\u5b9a\u662f\u6700\u597d\u7684\uff0c \u6211\u51b3\u5b9a\u7528\u5b83\u3002\n\n\n\n# 1 \u521b\u5efaC/C++\u5de5\u7a0b\n\u5728 Xcode File -> New -> Project \u9009\u62e9 macOS -> Command Line Tool\uff0c\u8bed\u8a00\u9009\u62e9c\u6216c++\uff0c\u5c31\u521b\u5efa\u597d\u4e86\u3002\n\n![\u622a\u5c4f2022-05-05 10.37.44.png](https://rome753.github.io/cdn/1896166-e5e65eda2beedb94.png)\n\n![\u622a\u5c4f2022-05-05 10.39.15.png](https://rome753.github.io/cdn/1896166-4bb4821de52e6095.png)\n\n# 2 \u6dfb\u52a0ffmpeg\u4f9d\u8d56\n\n\u5b89\u88c5ffmpeg\u8fc7\u7a0b\u7565\uff0c\u6211\u662f\u5b89\u88c5\u5230/usr/local/ffmpeg\u76ee\u5f55\u4e0b\u3002\n\n\u5728\u9879\u76ee\u7684Build Settings\u91cc\u641c\u7d22Search Paths\uff0c\u5206\u522b\u6dfb\u52a0\u5934\u6587\u4ef6\u548c\u5e93\u7684\u5730\u5740\u3002\n\u6211\u8fd9\u91cc\u662f\uff1a\n```\n/usr/local/ffmpeg/include\n/usr/local/ffmpeg/lib\n```\n![\u622a\u5c4f2022-05-05 10.45.36.png](https://rome753.github.io/cdn/1896166-0cda8fcc0c38c8b7.png)\n\n\u5728General\u7684Frameworks and Libraries\u91cc\u70b9\u51fb + \u53f7\n\n\n![\u622a\u5c4f2022-05-05 10.48.22.png](https://rome753.github.io/cdn/1896166-5367c1e941f8dc1c.png)\n\n\u9009\u62e9Add Other -> Add Files\n\n![\u622a\u5c4f2022-05-05 10.49.21.png](https://rome753.github.io/cdn/1896166-9e2f7b8142b356e9.png)\n\n\u5bfc\u822a\u5230ffmpeg\u5b89\u88c5\u76ee\u5f55lib\u4e0b\u9762\n![\u622a\u5c4f2022-05-05 10.50.59.png](https://rome753.github.io/cdn/1896166-1e5742d2c4700f58.png)\n\n\u641c\u7d22 .a \uff0c\u628a\u6240\u6709 .a \u6587\u4ef6\u90fd\u6dfb\u52a0\u4e0a\n\n![\u622a\u5c4f2022-05-05 10.52.09.png](https://rome753.github.io/cdn/1896166-d2abc5b20d4ec0ca.png)\n\n\u8fd9\u6837ffmpeg\u4f9d\u8d56\u5c31\u6dfb\u52a0\u5b8c\u4e86\u3002\n\n# 3 \u795e\u5751\n\n\u5f15\u7528ffmpeg\u5934\u6587\u4ef6\u7136\u540e\u8fd0\u884c\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u795e\u5751\uff01\u4f1a\u62a5 .dylib \u6ca1\u7b7e\u540d\u7684\u9519\u8bef\u3002\n\n![\u622a\u5c4f2022-05-05 11.00.42.png](https://rome753.github.io/cdn/1896166-13640abbd4df9e65.png)\n\n\u8fd9\u4e2a\u5751\u6d6a\u8d39\u4e86\u6211\u5f88\u591a\u65f6\u95f4\uff0c\u641c\u7d22\u4e86\u5f88\u591a\u5730\u65b9\u3002\u6709\u4eba\u8bf4\u628a\u9879\u76ee\u7684 signing certificate \u6539\u6210 Development \u5c31\u80fd\u8fd0\u884c\uff0c\u6211\u8bd5\u4e86\u6839\u672c\u6ca1\u7528\uff1b\u6709\u4eba\u8bf4\u7528 codesign \u547d\u4ee4\u7ed9 .dylib \u7b7e\u540d\u5c31\u884c\uff0c\u7136\u800c\u6211\u7b7e\u540d\u65f6\u4e00\u76f4\u62a5 SecInternalComponent \u6216\u8005 internal error in Code Signing subsystem\uff0c\u65e0\u8bba\u6211\u600e\u4e48\u5c1d\u8bd5\uff0c\u4e5f\u6ca1\u529e\u6cd5\u7b7e\u540d\u6210\u529f\u3002\n\n\u540e\u6765\u6211\u7ec8\u4e8e\u641c\u5230[\u8fd9\u7bc7](https://blog.csdn.net/weixin_32659841/article/details/114041272)\u4f5c\u8005\u63d0\u5230\u9879\u76ee Build Settings \u91cc\u9762\u6709\u4e00\u4e2a Enable Hardened Runtime\uff0c\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\uff0c\u628a\u5b83\u5173\u4e86 dylib \u5c31\u4e0d\u9700\u8981\u7b7e\u540d\u4e86\uff01\n\n![\u622a\u5c4f2022-05-05 11.13.07.png](https://rome753.github.io/cdn/1896166-e98a6c34366a4930.png)\n\n\u8fd9\u4e2aHardened Runtime\u5e94\u8be5\u662f\u65ad\u70b9\u8c03\u8bd5SDK\u624d\u7528\u5230\uff0c\u6211\u8fd9\u91cc\u6682\u65f6\u7528\u4e0d\u4e0a\u3002\n\n# 4 \u8f93\u5165\u8f93\u51fa\u6587\u4ef6\n\n\u8fd0\u884cffmpeg\u9700\u8981\u97f3\u89c6\u9891\u6587\u4ef6\u7684\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u6587\u4ef6\u53ef\u4ee5\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u7528\u76f8\u5bf9\u8def\u5f84\uff1b\u5982\u679c\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u5f53\u524d\u76ee\u5f55\u662fProducts\uff0c\u53ef\u4ee5\u5728Finder\u4e2d\u6253\u5f00\u8fd9\u4e2a\u76ee\u5f55\uff0c\u628a\u8f93\u5165\u6587\u4ef6\u590d\u5236\u8fdb\u53bb\uff0c\u5f53\u7136\u8fd9\u4e2a\u76ee\u5f55\u5728Clean Build Folder\u540e\u4f1a\u88ab\u6e05\u7a7a\u3002\n\n![\u622a\u5c4f2022-05-05 11.19.35.png](https://rome753.github.io/cdn/1896166-7b683dd30b44f240.png)\n\n# 4 \u6dfb\u52a0 SDL \u4f9d\u8d56\n\u8981\u4ee3\u7801\u5b9e\u73b0\u64ad\u653e\u5668\uff0c\u9700\u8981\u6dfb\u52a0 SDL \u5de5\u5177\uff0c\u56e0\u4e3aSDL\u6ca1\u6709\u4ec0\u4e48\u7f16\u8bd1\u914d\u7f6e\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528brew\u5b89\u88c5\u7684\u3002\n```\nbrew install sdl\nbrew install sdl2\n```\n\u6211\u628a1,2\u90fd\u5b89\u88c5\u4e86\u3002\u867d\u7136\u4e0d\u662f\u7f16\u8bd1\u5b89\u88c5\uff0c\u4f46\u662f\u5934\u6587\u4ef6\u548c\u94fe\u63a5\u5e93\u90fd\u662f\u6709\u7684\uff0c\u5b89\u88c5\u76ee\u5f55\u5728`/opt/homebrew/Cellar/sdl2`\u3002\u6dfb\u52a0\u8fc7\u7a0b\u8ddfffmpeg\u5dee\u4e0d\u591a\uff0c\u6ce8\u610f\u4e00\u70b9\u6dfb\u52a0Search Paths\u65f6\u8ddf\u524d\u9762\u7684ffmpeg\u5730\u5740\u7528\u7a7a\u683c\u9694\u5f00\u5c31\u884c\u4e86\u3002\n\n![\u622a\u5c4f2022-05-05 11.33.19.png](https://rome753.github.io/cdn/1896166-8e6fe8317c4d6eb5.png)\n\n\u8fd9\u7bc7\u6559\u7a0b\u975e\u5e38\u5168\u9762\uff0c\u770b\u5b8c\u5c31\u5bf9ffmpeg\u548csdl\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u4e86\u89e3\u4e86\u3002\nhttps://www.cnblogs.com/ssyfj/p/14579909.html\n", "mt_excerpt": "", "title": "FFmpeg-Xcode\u5f00\u53d1\u914d\u7f6e", "dateCreated": "20220718T17:26:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]FFmpeg", "[Markdown]"]}, {"mt_keywords": "", "link": "https://www.cnblogs.com/rome753/p/16491254.html", "permalink": "https://www.cnblogs.com/rome753/p/16491254.html", "postid": 16491254, "description": "https://www.jianshu.com/p/ecfbebadbe55\n\u96c6\u6210\u65b9\u6cd5\u8fd9\u7bc7\u6587\u7ae0\u5199\u5f97\u975e\u5e38\u8be6\u7ec6\u4e86\uff0c\u6211\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u6709\u4e00\u70b9\u5dee\u5f02\u7684\u5730\u65b9\uff0c\u8be5\u6587\u7ae0\u96c6\u6210\u540e\u4f7f\u7528\u7684\u662fOC\u8fdb\u884c\u8c03\u7528\uff0c\u6211\u4f7f\u7528\u7684\u662fC\u8bed\u8a00\uff0c\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u8de8\u5e73\u53f0\u3002\u56e0\u4e3aFFmpeg\u672c\u8eab\u662fC\u8bed\u8a00\u7684\uff0c\u6211\u5148\u7528C\u5c01\u88c5\u6210\u5de5\u5177\u7c7b\uff0c\u8fd9\u6837\u4e0d\u4f9d\u8d56\u5e73\u53f0\uff0c\u4e0a\u5c42\u7528\u4ec0\u4e48\u8bed\u8a00\u8c03\u90fd\u884c\u3002\n\n\u8fd9\u91cc\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684FFmpeg\u547d\u4ee4\u884c\u683c\u5f0f\u8f6c\u6362\u529f\u80fd\u3002\n\n# 1 \u521b\u5efaC\u6587\u4ef6\n\n\u65b0\u5efamy_test.c\u548c\u5934\u6587\u4ef6\uff0c\u5728\u8fd9\u4e2a\u5934\u6587\u4ef6\u91cc\u5bfc\u5165`#import \"fftools/ffmpeg.h\"`\uff0c\u56e0\u4e3affmpeg.h\u5934\u6587\u4ef6\u91cc\u5bfc\u5165\u4e86\u6240\u6709\u7684\u6a21\u5757\uff0c\u5c31\u4e0d\u9700\u8981\u5916\u9762\u4e00\u4e2a\u4e2a\u5bfc\u5165\u4e86\u3002\n```\n\n#ifndef my_test_h\n#define my_test_h\n\n#include <stdio.h>\n//#import \"libavformat/avformat.h\"\n#import \"fftools/ffmpeg.h\"\n\nchar* do_test(char* s);\nchar* do_cmd(char* s);\n\n#endif /* my_test_h */\n```\n\n\u7136\u540e\u65b0\u5efa\u4e00\u4e2aDemo-Bridging-Header.h\u5934\u6587\u4ef6\uff0c\u5bfc\u5165\u4e0a\u9762\u521b\u5efa\u7684my_test.h\u7684\u5934\u6587\u4ef6\n\n```c\n#ifndef Demo_Bridging_Header_h\n#define Demo_Bridging_Header_h\n\n//#import \"libavformat/avformat.h\"\n#import \"my_test.h\"\n\n#endif /* Demo_Bridging_Header_h */\n```\n\n\u6dfb\u52a0\u5230\u5de5\u7a0b\u914d\u7f6e\u91cc\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728Swift\u91cc\u8c03\u7528\u4e86\n\n![\u622a\u5c4f2022-06-27 10.05.44.png](https://rome753.github.io/cdn/1896166-7cb3d5f59c3d4a7e.png)\n\n# 2 Swift\u4e0eC\u5b57\u7b26\u4e32\u8f6c\u6362\n\u8981\u5728Swift\u91cc\u4f7f\u7528C\u5e93\uff0c\u5c31\u8981\u628a\u6587\u4ef6\u8def\u5f84\u4f20\u7ed9C\uff0c\u63a5\u6536C\u8fd4\u56de\u7684\u7ed3\u679c\u3002Swift\u91cc\u9762\u7684\u5b57\u7b26\u4e32\u662fString\uff0cC\u91cc\u9762\u4e00\u822c\u662fchar*\uff0c\u5b83\u4eec\u4e4b\u95f4\u76f8\u4e92\u8f6c\u6362\u65b9\u6cd5\u5982\u4e0b\uff08\u8f6c\u6362\u90fd\u662f\u5728Swift\u91cc\u8fdb\u884c\u7684\uff09\u3002\n\n- String\u8f6cchar*\n```swift\n        let cmd = \"ffmpeg -y -f gif -i \\(src) \\(dst)\"\n        let pointer = UnsafeMutablePointer<CChar>(mutating: cmd.cString(using: .utf8))\n```\n\n\n- char*\u8f6cString\n```swift\n        String.init(cString: ret)\n```\n\n# 3 FFmpeg\u547d\u4ee4\u884c\n\n\u5728my_test.c\u91cc\u6dfb\u52a0\u8c03\u7528FFmpeg\u547d\u4ee4\u884c\u7684\u65b9\u6cd5\uff0c\u4e0a\u5c42\u76f4\u63a5\u4f20\u5165\u5b8c\u6574\u7684FFmpeg\u547d\u4ee4\u884cstr\uff0c\u7528\u7a7a\u683c\u8fdb\u884c\u5b57\u7b26\u4e32\u5206\u5272\u540e\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u6570\u7ec4char *argv[50]\uff0c\u8c03\u7528ffmpeg_main\u65b9\u6cd5\u5904\u7406\u3002\n\n```c\nchar* do_cmd(char* str) {\n    char delim[] = \" \";\n\n    char *ptr = strtok(str, delim);\n\n    int argc = 0;\n    char *argv[50];\n    \n    while(ptr != NULL)\n    {\n        argv[argc++] = ptr;\n        ptr = strtok(NULL, delim);\n    }\n    \n    for (int i = 0; i < argc; i++) {\n        printf(\"%s\\n\", argv[i]);\n    }\n    \n    ffmpeg_main(argc, argv);\n    \n    return \"\";\n}\n```\n\n# 4 Swift\u8c03\u7528\n\n\u5c06\u547d\u4ee4\u884ccmd\u8f6c\u6362\u6210UnsafeMutablePointer<CChar>\u540e\uff0c\u76f4\u63a5\u8c03\u7528C\u91cc\u9762\u7684do_cmd\u65b9\u6cd5\u5373\u53ef\u3002\n\n```swift\n        let cmd = \"ffmpeg -y -f gif -i \\(src) \\(dst)\"\n        print(\"cmd: \\(cmd)\")\n        let pointer = UnsafeMutablePointer<CChar>(mutating: cmd.cString(using: .utf8))\n        print(\"ffmpeg begin ---------------------\")\n        \n        if let ret = do_cmd(pointer) {\n            print(String.init(cString: ret))\n            print(\"ffmpeg end   ---------------------\")\n            UISaveVideoAtPathToSavedPhotosAlbum(dst, self, #selector(self.didFinishSavingVideo(videoPath:error:contextInfo:)), nil)\n        }\n```\n\n# 5 \u5b8c\u6574\u529f\u80fd\n\u70b9\u51fb\u6309\u94ae\uff0c\u4ece\u624b\u673a\u76f8\u518c\u91cc\u9009\u4e00\u5f20gif\u52a8\u56fe\uff0c\u8f6c\u6362\u6210mp4\u89c6\u9891\uff0c\u4fdd\u5b58\u5230\u76f8\u518c\u3002\n\n```swift\n\nimport UIKit\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view.\n        \n        let label = UILabel(frame: CGRect(x: 50, y: 50, width: 200, height: 100))\n        label.text = \"ffmpeg \"\n        label.backgroundColor = .white.withAlphaComponent(0.2)\n        view.addSubview(label)\n        \n        label.isUserInteractionEnabled = true\n        label.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(pickImage)))\n    }\n}\n\n// MARK: - \u56fe\u7247\u64cd\u4f5c\nextension ViewController: UIImagePickerControllerDelegate, UINavigationControllerDelegate {\n    \n    @objc func pickImage() {\n        self.present(imagePickerController, animated: true)\n    }\n    \n    // MARK: \u56fe\u7247\u9009\u62e9\u5668\u754c\u9762\n    var imagePickerController: UIImagePickerController {\n        let imagePicket = UIImagePickerController()\n        imagePicket.delegate = self\n        imagePicket.sourceType = .photoLibrary\n        imagePicket.allowsEditing = false\n        return imagePicket\n    }\n    \n    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {\n        picker.dismiss(animated: true, completion: nil)\n        guard let image = info[UIImagePickerController.InfoKey(rawValue: UIImagePickerController.InfoKey.originalImage.rawValue)] as? UIImage else {\n            print(\"pick_image_fail\")\n            return\n        }\n        let path = (info[UIImagePickerController.InfoKey(rawValue: UIImagePickerController.InfoKey.imageURL.rawValue)] as? URL)?.path ?? \"\"\n        \n        onImagePicked(image, path)\n    }\n    \n    private func onImagePicked(_ image: UIImage?, _ path: String) {\n//        let fileName = \"\\(CLongLong(round(Date().timeIntervalSince1970*1000))).mp4\"\n//        let fileName = \"d.mp4\"\n        let src = NSTemporaryDirectory() + \"1.gif\"\n        let dst = NSTemporaryDirectory() + \"2.mp4\"\n        do {\n            try FileManager.default.removeItem(atPath: src)\n        } catch {\n            print(error)\n        }\n        do {\n            try FileManager.default.moveItem(atPath: path, toPath: src)\n        } catch {\n            print(error)\n        }\n        \n        FileManager.default.createFile(atPath: dst, contents: nil)\n        \n//        do {\n//            try FileManager.default.removeItem(atPath: dst)\n//        } catch _{}\n        \n        let cmd = \"ffmpeg -y -f gif -i \\(src) \\(dst)\"\n        print(\"cmd: \\(cmd)\")\n        let pointer = UnsafeMutablePointer<CChar>(mutating: cmd.cString(using: .utf8))\n        print(\"ffmpeg begin ---------------------\")\n        \n        if let ret = do_cmd(pointer) {\n            print(String.init(cString: ret))\n            print(\"ffmpeg end   ---------------------\")\n            UISaveVideoAtPathToSavedPhotosAlbum(dst, self, #selector(self.didFinishSavingVideo(videoPath:error:contextInfo:)), nil)\n        }\n    }\n\n    // MARK: \u5f53\u70b9\u51fb\u56fe\u7247\u9009\u62e9\u5668\u4e2d\u7684\u53d6\u6d88\u6309\u94ae\u65f6\u56de\u8c03\n    func imagePickerControllerDidCancel(_ picker: UIImagePickerController) {\n        picker.dismiss(animated: true, completion: nil)\n    }\n\n    \n    @objc func didFinishSavingVideo(videoPath: String, error: NSError?, contextInfo: UnsafeMutableRawPointer?) {\n        if error != nil{\n            print(\"\u4fdd\u5b58\u5931\u8d25\")\n        }else{\n            print(\"\u4fdd\u5b58\u6210\u529f\uff0c\u8bf7\u5230\u76f8\u518c\u4e2d\u67e5\u770b\")\n        }\n    }\n}\n\n```\n\n\u6709\u4e24\u4e2a\u5c0f\u95ee\u9898\uff1a\n- \u8f6c\u6362\u7684\u76ee\u6807\u6587\u4ef6\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u63d0\u524d\u521b\u5efa\u4e86\u547d\u4ee4\u884c\u53c8\u4f1a\u8be2\u95ee\u662f\u5426\u8986\u76d6\u539f\u6587\u4ef6\u3002\u53ea\u80fd\u5148\u521b\u5efa\uff0c\u7136\u540e\u518d\u547d\u4ee4\u884c\u91cc\u52a0\u4e0a-y\uff0c\u4ee3\u8868\u81ea\u52a8\u786e\u8ba4\u8986\u76d6\u3002\n\n- \u4f20\u7ed9ffmpeg\u7684\u6587\u4ef6\u5168\u8def\u5f84\u540d\u4e0d\u80fd\u592a\u957f\uff0c\u592a\u957f\u4f1a\u76f4\u63a5\u62a5\u9519\u6587\u4ef6\u627e\u4e0d\u5230\uff0c\u7136\u800ciOS\u91cc\u6587\u4ef6\u5168\u8def\u5f84\u540d\u53c8\u90fd\u5f88\u957f\u3002\u6211\u80fd\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u5728\u4e34\u65f6\u6587\u4ef6\u76ee\u5f55\u91cc\u521b\u5efa\u4e24\u4e2a\u4e34\u65f6\u6587\u4ef6\uff0c\u540d\u5b57\u5f88\u77ed\uff0c\u5148\u628a\u6587\u4ef6\u590d\u5236\u5230\u8fd9\u91cc\uff0c\u518d\u8fdb\u884c\u8f6c\u6362\u3002\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u3002\n", "mt_excerpt": "", "title": "FFmpeg-iOS\u5f00\u53d1\u914d\u7f6e\u548c\u683c\u5f0f\u8f6c\u6362", "dateCreated": "20220718T17:25:00", "mt_text_more": "", "categories": ["[\u968f\u7b14\u5206\u7c7b]FFmpeg", "[Markdown]"]}]